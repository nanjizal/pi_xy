// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_InterpolationMethod
#include <nme/display/InterpolationMethod.h>
#endif
namespace nme{
namespace display{

::nme::display::InterpolationMethod InterpolationMethod_obj::LINEAR_RGB;

::nme::display::InterpolationMethod InterpolationMethod_obj::RGB;

bool InterpolationMethod_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LINEAR_RGB",53,10,b2,52)) { outValue = InterpolationMethod_obj::LINEAR_RGB; return true; }
	if (inName==HX_("RGB",ed,76,3e,00)) { outValue = InterpolationMethod_obj::RGB; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(InterpolationMethod_obj)

int InterpolationMethod_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LINEAR_RGB",53,10,b2,52)) return 1;
	if (inName==HX_("RGB",ed,76,3e,00)) return 0;
	return super::__FindIndex(inName);
}

int InterpolationMethod_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LINEAR_RGB",53,10,b2,52)) return 0;
	if (inName==HX_("RGB",ed,76,3e,00)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val InterpolationMethod_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LINEAR_RGB",53,10,b2,52)) return LINEAR_RGB;
	if (inName==HX_("RGB",ed,76,3e,00)) return RGB;
	return super::__Field(inName,inCallProp);
}

static ::String InterpolationMethod_obj_sStaticFields[] = {
	HX_("RGB",ed,76,3e,00),
	HX_("LINEAR_RGB",53,10,b2,52),
	::String(null())
};

::hx::Class InterpolationMethod_obj::__mClass;

Dynamic __Create_InterpolationMethod_obj() { return new InterpolationMethod_obj; }

void InterpolationMethod_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.display.InterpolationMethod",b1,bd,82,ed), ::hx::TCanCast< InterpolationMethod_obj >,InterpolationMethod_obj_sStaticFields,0,
	&__Create_InterpolationMethod_obj, &__Create,
	&super::__SGetClass(), &CreateInterpolationMethod_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &InterpolationMethod_obj::__GetStatic;
}

void InterpolationMethod_obj::__boot()
{
LINEAR_RGB = ::hx::CreateConstEnum< InterpolationMethod_obj >(HX_("LINEAR_RGB",53,10,b2,52),1);
RGB = ::hx::CreateConstEnum< InterpolationMethod_obj >(HX_("RGB",ed,76,3e,00),0);
}


} // end namespace nme
} // end namespace display
