// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic__IteratorRangeXY_IteratorRangeYX_Impl_
#define INCLUDED_iterMagic__IteratorRangeXY_IteratorRangeYX_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(iterMagic,IntIterStart)
HX_DECLARE_CLASS1(iterMagic,IntIterYX)
HX_DECLARE_CLASS2(iterMagic,_IteratorRangeXY,IteratorRangeYX_Impl_)

namespace iterMagic{
namespace _IteratorRangeXY{


class HXCPP_CLASS_ATTRIBUTES IteratorRangeYX_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IteratorRangeYX_Impl__obj OBJ_;
		IteratorRangeYX_Impl__obj();

	public:
		enum { _hx_ClassId = 0x4b94a148 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="iterMagic._IteratorRangeXY.IteratorRangeYX_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"iterMagic._IteratorRangeXY.IteratorRangeYX_Impl_"); }

		inline static ::hx::ObjectPtr< IteratorRangeYX_Impl__obj > __new() {
			::hx::ObjectPtr< IteratorRangeYX_Impl__obj > __this = new IteratorRangeYX_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< IteratorRangeYX_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			IteratorRangeYX_Impl__obj *__this = (IteratorRangeYX_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IteratorRangeYX_Impl__obj), false, "iterMagic._IteratorRangeXY.IteratorRangeYX_Impl_"));
			*(void **)__this = IteratorRangeYX_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IteratorRangeYX_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IteratorRangeYX_Impl_",8e,ff,0d,9b); }

		static  ::iterMagic::IntIterYX _new( ::iterMagic::IntIterStart xRange, ::iterMagic::IntIterStart yRange);
		static ::Dynamic _new_dyn();

		static  ::iterMagic::IntIterYX fromIterator2D( ::Dynamic two);
		static ::Dynamic fromIterator2D_dyn();

		static  ::iterMagic::IntIterYX fromRect2D( ::Dynamic r);
		static ::Dynamic fromRect2D_dyn();

		static  ::iterMagic::IntIterYX fromRect2Df( ::Dynamic r);
		static ::Dynamic fromRect2Df_dyn();

		static bool hasNext( ::iterMagic::IntIterYX this1);
		static ::Dynamic hasNext_dyn();

		static int next( ::iterMagic::IntIterYX this1);
		static ::Dynamic next_dyn();

		static int get_length( ::iterMagic::IntIterYX this1);
		static ::Dynamic get_length_dyn();

		static bool contains( ::iterMagic::IntIterYX this1,int x,int y);
		static ::Dynamic contains_dyn();

		static bool containsF( ::iterMagic::IntIterYX this1,Float x,Float y);
		static ::Dynamic containsF_dyn();

		static  ::iterMagic::IntIterStart getRangeX( ::iterMagic::IntIterYX this1);
		static ::Dynamic getRangeX_dyn();

		static  ::iterMagic::IntIterStart getRangeY( ::iterMagic::IntIterYX this1);
		static ::Dynamic getRangeY_dyn();

};

} // end namespace iterMagic
} // end namespace _IteratorRangeXY

#endif /* INCLUDED_iterMagic__IteratorRangeXY_IteratorRangeYX_Impl_ */ 
