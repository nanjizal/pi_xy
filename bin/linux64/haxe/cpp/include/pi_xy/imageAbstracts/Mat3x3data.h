// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_imageAbstracts_Mat3x3data
#define INCLUDED_pi_xy_imageAbstracts_Mat3x3data

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_06c6c7bc98fc63cc_96_new)
HX_DECLARE_CLASS2(pi_xy,imageAbstracts,Mat3x3data)

namespace pi_xy{
namespace imageAbstracts{


class HXCPP_CLASS_ATTRIBUTES Mat3x3data_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Mat3x3data_obj OBJ_;
		Mat3x3data_obj();

	public:
		enum { _hx_ClassId = 0x37ae6fd5 };

		void __construct(Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.imageAbstracts.Mat3x3data")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.imageAbstracts.Mat3x3data"); }

		inline static ::hx::ObjectPtr< Mat3x3data_obj > __new(Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i) {
			::hx::ObjectPtr< Mat3x3data_obj > __this = new Mat3x3data_obj();
			__this->__construct(a,b,c,d,e,f,g,h,i);
			return __this;
		}

		inline static ::hx::ObjectPtr< Mat3x3data_obj > __alloc(::hx::Ctx *_hx_ctx,Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i) {
			Mat3x3data_obj *__this = (Mat3x3data_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Mat3x3data_obj), false, "pi_xy.imageAbstracts.Mat3x3data"));
			*(void **)__this = Mat3x3data_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_06c6c7bc98fc63cc_96_new)
HXLINE(  97)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->a = a;
HXLINE(  98)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->b = b;
HXLINE(  99)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->c = c;
HXLINE( 101)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->d = d;
HXLINE( 102)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->e = e;
HXLINE( 103)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->f = f;
HXLINE( 105)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->g = g;
HXLINE( 106)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->h = h;
HXLINE( 107)		( ( ::pi_xy::imageAbstracts::Mat3x3data)(__this) )->i = i;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Mat3x3data_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Mat3x3data",58,6e,27,92); }

		Float a;
		Float b;
		Float c;
		Float d;
		Float e;
		Float f;
		Float g;
		Float h;
		Float i;
};

} // end namespace pi_xy
} // end namespace imageAbstracts

#endif /* INCLUDED_pi_xy_imageAbstracts_Mat3x3data */ 
