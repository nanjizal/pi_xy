// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_Lib
#include <nme/Lib.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObjectContainer
#include <nme/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_display_MovieClip
#include <nme/display/MovieClip.h>
#endif
#ifndef INCLUDED_nme_display_Sprite
#include <nme/display/Sprite.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_pi_xy_application_TestNME
#include <pi_xy/application/TestNME.h>
#endif
#ifndef INCLUDED_pi_xy_application__TestNME_TestNME_Fields_
#include <pi_xy/application/_TestNME/TestNME_Fields_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_24fe7c06d43215ad_14_main,"pi_xy.application._TestNME.TestNME_Fields_","main",0xf1372200,"pi_xy.application._TestNME.TestNME_Fields_.main","pi_xy/application/TestNME.hx",14,0x0a53be71)
namespace pi_xy{
namespace application{
namespace _TestNME{

void TestNME_Fields__obj::__construct() { }

Dynamic TestNME_Fields__obj::__CreateEmpty() { return new TestNME_Fields__obj; }

void *TestNME_Fields__obj::_hx_vtable = 0;

Dynamic TestNME_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TestNME_Fields__obj > _hx_result = new TestNME_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TestNME_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0338a6fd;
}

void TestNME_Fields__obj::main(){
            	HX_GC_STACKFRAME(&_hx_pos_24fe7c06d43215ad_14_main)
HXDLIN(  14)		 ::nme::display::MovieClip _hx_tmp = ::nme::Lib_obj::get_current();
HXDLIN(  14)		_hx_tmp->addChild( ::pi_xy::application::TestNME_obj::__alloc( HX_CTX ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TestNME_Fields__obj,main,(void))


TestNME_Fields__obj::TestNME_Fields__obj()
{
}

bool TestNME_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TestNME_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TestNME_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class TestNME_Fields__obj::__mClass;

static ::String TestNME_Fields__obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void TestNME_Fields__obj::__register()
{
	TestNME_Fields__obj _hx_dummy;
	TestNME_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.application._TestNME.TestNME_Fields_",07,cc,09,8d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TestNME_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TestNME_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TestNME_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TestNME_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TestNME_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace application
} // end namespace _TestNME
