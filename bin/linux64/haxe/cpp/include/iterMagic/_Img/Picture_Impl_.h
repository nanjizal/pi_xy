// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic__Img_Picture_Impl_
#define INCLUDED_iterMagic__Img_Picture_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(iterMagic,Pic)
HX_DECLARE_CLASS1(iterMagic,RawImageData)
HX_DECLARE_CLASS2(iterMagic,_Img,Picture_Impl_)

namespace iterMagic{
namespace _Img{


class HXCPP_CLASS_ATTRIBUTES Picture_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Picture_Impl__obj OBJ_;
		Picture_Impl__obj();

	public:
		enum { _hx_ClassId = 0x27401d85 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="iterMagic._Img.Picture_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"iterMagic._Img.Picture_Impl_"); }

		inline static ::hx::ObjectPtr< Picture_Impl__obj > __new() {
			::hx::ObjectPtr< Picture_Impl__obj > __this = new Picture_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Picture_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Picture_Impl__obj *__this = (Picture_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Picture_Impl__obj), false, "iterMagic._Img.Picture_Impl_"));
			*(void **)__this = Picture_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Picture_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Picture_Impl_",be,df,b9,50); }

		static  ::iterMagic::Pic _new(int width,int height,::hx::Null< int >  imageType);
		static ::Dynamic _new_dyn();

		static int set( ::iterMagic::Pic this1,int index,int value);
		static ::Dynamic set_dyn();

		static int get( ::iterMagic::Pic this1,int index);
		static ::Dynamic get_dyn();

		static  ::iterMagic::Pic fromTo( ::iterMagic::Pic a, ::iterMagic::Pic b);
		static ::Dynamic fromTo_dyn();

		static  ::iterMagic::Pic toFrom( ::iterMagic::Pic a, ::iterMagic::Pic b);
		static ::Dynamic toFrom_dyn();

		static  ::iterMagic::RawImageData get_raw( ::iterMagic::Pic this1);
		static ::Dynamic get_raw_dyn();

		static  ::iterMagic::RawImageData set_raw( ::iterMagic::Pic this1, ::iterMagic::RawImageData d);
		static ::Dynamic set_raw_dyn();

		static void traceGrid( ::iterMagic::Pic this1);
		static ::Dynamic traceGrid_dyn();

		static ::String imgToString( ::iterMagic::Pic this1);
		static ::Dynamic imgToString_dyn();

		static  ::Dynamic imageTypeString( ::iterMagic::Pic this1);
		static ::Dynamic imageTypeString_dyn();

		static int position( ::iterMagic::Pic this1,Float px,Float py);
		static ::Dynamic position_dyn();

};

} // end namespace iterMagic
} // end namespace _Img

#endif /* INCLUDED_iterMagic__Img_Picture_Impl_ */ 
