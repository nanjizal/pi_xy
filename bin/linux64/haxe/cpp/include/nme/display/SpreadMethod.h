// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_display_SpreadMethod
#define INCLUDED_nme_display_SpreadMethod

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,display,SpreadMethod)
namespace nme{
namespace display{


class SpreadMethod_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef SpreadMethod_obj OBJ_;

	public:
		SpreadMethod_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.display.SpreadMethod",a8,7d,17,d4); }
		::String __ToString() const { return HX_("SpreadMethod.",da,47,51,da) + _hx_tag; }

		static ::nme::display::SpreadMethod PAD;
		static inline ::nme::display::SpreadMethod PAD_dyn() { return PAD; }
		static ::nme::display::SpreadMethod REFLECT;
		static inline ::nme::display::SpreadMethod REFLECT_dyn() { return REFLECT; }
		static ::nme::display::SpreadMethod REPEAT;
		static inline ::nme::display::SpreadMethod REPEAT_dyn() { return REPEAT; }
};

} // end namespace nme
} // end namespace display

#endif /* INCLUDED_nme_display_SpreadMethod */ 
