// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_nme_utils_ArrayBufferView
#include <nme/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_nme_utils_ByteArray
#include <nme/utils/ByteArray.h>
#endif
#ifndef INCLUDED_nme_utils_IDataInput
#include <nme/utils/IDataInput.h>
#endif
#ifndef INCLUDED_nme_utils_IDataOutput
#include <nme/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_nme_utils_IMemoryRange
#include <nme/utils/IMemoryRange.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c129344a6a23aade_22_new,"nme.utils.ArrayBufferView","new",0x00c8186b,"nme.utils.ArrayBufferView.new","nme/utils/ArrayBufferView.hx",22,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_68_toBytes,"nme.utils.ArrayBufferView","toBytes",0x03bcfe7b,"nme.utils.ArrayBufferView.toBytes","nme/utils/ArrayBufferView.hx",68,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_71_setData,"nme.utils.ArrayBufferView","setData",0x81884077,"nme.utils.ArrayBufferView.setData","nme/utils/ArrayBufferView.hx",71,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_80_getByteBuffer,"nme.utils.ArrayBufferView","getByteBuffer",0xb6388629,"nme.utils.ArrayBufferView.getByteBuffer","nme/utils/ArrayBufferView.hx",80,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_81_getStart,"nme.utils.ArrayBufferView","getStart",0xd6d63401,"nme.utils.ArrayBufferView.getStart","nme/utils/ArrayBufferView.hx",81,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_82_getLength,"nme.utils.ArrayBufferView","getLength",0xbda48067,"nme.utils.ArrayBufferView.getLength","nme/utils/ArrayBufferView.hx",82,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_91_getFloat32,"nme.utils.ArrayBufferView","getFloat32",0x94b9b69a,"nme.utils.ArrayBufferView.getFloat32","nme/utils/ArrayBufferView.hx",91,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_105_setFloat32,"nme.utils.ArrayBufferView","setFloat32",0x9837550e,"nme.utils.ArrayBufferView.setFloat32","nme/utils/ArrayBufferView.hx",105,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_119_getUInt8,"nme.utils.ArrayBufferView","getUInt8",0xe1410f1d,"nme.utils.ArrayBufferView.getUInt8","nme/utils/ArrayBufferView.hx",119,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_133_setUInt8,"nme.utils.ArrayBufferView","setUInt8",0x8f9e6891,"nme.utils.ArrayBufferView.setUInt8","nme/utils/ArrayBufferView.hx",133,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_143_getInt16,"nme.utils.ArrayBufferView","getInt16",0x10eb5133,"nme.utils.ArrayBufferView.getInt16","nme/utils/ArrayBufferView.hx",143,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_154_getUInt16,"nme.utils.ArrayBufferView","getUInt16",0x37ac2460,"nme.utils.ArrayBufferView.getUInt16","nme/utils/ArrayBufferView.hx",154,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_164_setInt16,"nme.utils.ArrayBufferView","setInt16",0xbf48aaa7,"nme.utils.ArrayBufferView.setInt16","nme/utils/ArrayBufferView.hx",164,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_175_setUInt16,"nme.utils.ArrayBufferView","setUInt16",0x1afd106c,"nme.utils.ArrayBufferView.setUInt16","nme/utils/ArrayBufferView.hx",175,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_185_getInt32,"nme.utils.ArrayBufferView","getInt32",0x10eb52ed,"nme.utils.ArrayBufferView.getInt32","nme/utils/ArrayBufferView.hx",185,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_195_setInt32,"nme.utils.ArrayBufferView","setInt32",0xbf48ac61,"nme.utils.ArrayBufferView.setInt32","nme/utils/ArrayBufferView.hx",195,0x50aa6ca7)
HX_LOCAL_STACK_FRAME(_hx_pos_c129344a6a23aade_15_boot,"nme.utils.ArrayBufferView","boot",0xa66645c7,"nme.utils.ArrayBufferView.boot","nme/utils/ArrayBufferView.hx",15,0x50aa6ca7)
namespace nme{
namespace utils{

void ArrayBufferView_obj::__construct( ::Dynamic inLengthOrBuffer,::hx::Null< int >  __o_inByteOffset, ::Dynamic inLength){
            		int inByteOffset = __o_inByteOffset.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_c129344a6a23aade_22_new)
HXLINE(  23)		if (::Std_obj::isOfType(inLengthOrBuffer,::hx::ClassOf< int >())) {
HXLINE(  25)			this->byteLength = ::Std_obj::_hx_int(( (Float)(inLengthOrBuffer) ));
HXLINE(  26)			this->byteOffset = 0;
HXLINE(  27)			this->buffer =  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(( (Float)(inLengthOrBuffer) )),null());
            		}
            		else {
HXLINE(  32)			if (::Std_obj::isOfType(inLengthOrBuffer,::hx::ClassOf< ::haxe::io::Bytes >())) {
HXLINE(  33)				this->buffer = ::nme::utils::ByteArray_obj::fromBytes(( ( ::haxe::io::Bytes)(inLengthOrBuffer) ));
            			}
            			else {
HXLINE(  35)				this->buffer = ( ( ::nme::utils::ByteArray)(inLengthOrBuffer) );
            			}
HXLINE(  37)			if (::hx::IsNull( this->buffer )) {
HXLINE(  38)				this->buffer =  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,0,null());
            			}
HXLINE(  41)			this->byteOffset = inByteOffset;
HXLINE(  43)			if ((this->byteOffset > this->buffer->length)) {
HXLINE(  44)				HX_STACK_DO_THROW(HX_("Invalid starting position",80,e7,c8,7a));
            			}
HXLINE(  46)			if (::hx::IsNull( inLength )) {
HXLINE(  48)				this->byteLength = (this->buffer->length - inByteOffset);
            			}
            			else {
HXLINE(  53)				this->byteLength = ( (int)(inLength) );
HXLINE(  55)				if (((this->byteLength + this->byteOffset) > this->buffer->length)) {
HXLINE(  56)					HX_STACK_DO_THROW(HX_("Invalid buffer length",fd,68,79,28));
            				}
            			}
            		}
HXLINE(  60)		this->buffer->bigEndian = false;
HXLINE(  63)		this->bytes = this->buffer->b;
            	}

Dynamic ArrayBufferView_obj::__CreateEmpty() { return new ArrayBufferView_obj; }

void *ArrayBufferView_obj::_hx_vtable = 0;

Dynamic ArrayBufferView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ArrayBufferView_obj > _hx_result = new ArrayBufferView_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ArrayBufferView_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1273bee7;
}

static ::nme::utils::IMemoryRange_obj _hx_nme_utils_ArrayBufferView__hx_nme_utils_IMemoryRange= {
	(  ::nme::utils::ByteArray (::hx::Object::*)())&::nme::utils::ArrayBufferView_obj::getByteBuffer,
	( int (::hx::Object::*)())&::nme::utils::ArrayBufferView_obj::getStart,
	( int (::hx::Object::*)())&::nme::utils::ArrayBufferView_obj::getLength,
};

void *ArrayBufferView_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x915e561e: return &_hx_nme_utils_ArrayBufferView__hx_nme_utils_IMemoryRange;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

 ::haxe::io::Bytes ArrayBufferView_obj::toBytes(){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_68_toBytes)
HXDLIN(  68)		return this->buffer;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ArrayBufferView_obj,toBytes,return )

void ArrayBufferView_obj::setData( ::nme::utils::ArrayBufferView byteData,int inOffset){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_71_setData)
HXLINE(  72)		int size = byteData->getLength();
HXLINE(  73)		if (((size + inOffset) > this->byteLength)) {
HXLINE(  74)			HX_STACK_DO_THROW(HX_("Out of bounds",2c,c8,8d,da));
            		}
HXLINE(  75)		int targetOff = (this->byteOffset + inOffset);
HXLINE(  76)		 ::nme::utils::ByteArray _hx_tmp = this->buffer;
HXDLIN(  76)		 ::nme::utils::ByteArray _hx_tmp1 = byteData->getByteBuffer();
HXDLIN(  76)		_hx_tmp->blit(targetOff,_hx_tmp1,byteData->getStart(),size);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setData,(void))

 ::nme::utils::ByteArray ArrayBufferView_obj::getByteBuffer(){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_80_getByteBuffer)
HXDLIN(  80)		return this->buffer;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ArrayBufferView_obj,getByteBuffer,return )

int ArrayBufferView_obj::getStart(){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_81_getStart)
HXDLIN(  81)		return this->byteOffset;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ArrayBufferView_obj,getStart,return )

int ArrayBufferView_obj::getLength(){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_82_getLength)
HXDLIN(  82)		return this->byteLength;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ArrayBufferView_obj,getLength,return )

Float ArrayBufferView_obj::getFloat32(int bytePos){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_91_getFloat32)
HXDLIN(  91)		return  ::__hxcpp_memory_get_float(this->bytes,(bytePos + this->byteOffset));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArrayBufferView_obj,getFloat32,return )

void ArrayBufferView_obj::setFloat32(int bytePos,Float v){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_105_setFloat32)
HXDLIN( 105)		 ::__hxcpp_memory_set_float(this->bytes,(bytePos + this->byteOffset),v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setFloat32,(void))

int ArrayBufferView_obj::getUInt8(int bytePos){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_119_getUInt8)
HXDLIN( 119)		return  ::__hxcpp_memory_get_byte(this->bytes,(bytePos + this->byteOffset));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArrayBufferView_obj,getUInt8,return )

void ArrayBufferView_obj::setUInt8(int bytePos,int v){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_133_setUInt8)
HXDLIN( 133)		 ::__hxcpp_memory_set_byte(this->bytes,(bytePos + this->byteOffset),v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setUInt8,(void))

int ArrayBufferView_obj::getInt16(int bytePos){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_143_getInt16)
HXDLIN( 143)		return  ::__hxcpp_memory_get_i16(this->bytes,(bytePos + this->byteOffset));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArrayBufferView_obj,getInt16,return )

int ArrayBufferView_obj::getUInt16(int bytePos){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_154_getUInt16)
HXDLIN( 154)		return  ::__hxcpp_memory_get_ui16(this->bytes,(bytePos + this->byteOffset));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArrayBufferView_obj,getUInt16,return )

void ArrayBufferView_obj::setInt16(int bytePos,int v){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_164_setInt16)
HXDLIN( 164)		 ::__hxcpp_memory_set_i16(this->bytes,(bytePos + this->byteOffset),v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setInt16,(void))

void ArrayBufferView_obj::setUInt16(int bytePos,int v){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_175_setUInt16)
HXDLIN( 175)		 ::__hxcpp_memory_set_ui16(this->bytes,(bytePos + this->byteOffset),v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setUInt16,(void))

int ArrayBufferView_obj::getInt32(int bytePos){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_185_getInt32)
HXDLIN( 185)		return  ::__hxcpp_memory_get_i32(this->bytes,(bytePos + this->byteOffset));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArrayBufferView_obj,getInt32,return )

void ArrayBufferView_obj::setInt32(int bytePos,int v){
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_195_setInt32)
HXDLIN( 195)		 ::__hxcpp_memory_set_i32(this->bytes,(bytePos + this->byteOffset),v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ArrayBufferView_obj,setInt32,(void))

::String ArrayBufferView_obj::invalidDataIndex;


::hx::ObjectPtr< ArrayBufferView_obj > ArrayBufferView_obj::__new( ::Dynamic inLengthOrBuffer,::hx::Null< int >  __o_inByteOffset, ::Dynamic inLength) {
	::hx::ObjectPtr< ArrayBufferView_obj > __this = new ArrayBufferView_obj();
	__this->__construct(inLengthOrBuffer,__o_inByteOffset,inLength);
	return __this;
}

::hx::ObjectPtr< ArrayBufferView_obj > ArrayBufferView_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic inLengthOrBuffer,::hx::Null< int >  __o_inByteOffset, ::Dynamic inLength) {
	ArrayBufferView_obj *__this = (ArrayBufferView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ArrayBufferView_obj), true, "nme.utils.ArrayBufferView"));
	*(void **)__this = ArrayBufferView_obj::_hx_vtable;
	__this->__construct(inLengthOrBuffer,__o_inByteOffset,inLength);
	return __this;
}

ArrayBufferView_obj::ArrayBufferView_obj()
{
}

void ArrayBufferView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ArrayBufferView);
	HX_MARK_MEMBER_NAME(buffer,"buffer");
	HX_MARK_MEMBER_NAME(byteOffset,"byteOffset");
	HX_MARK_MEMBER_NAME(byteLength,"byteLength");
	HX_MARK_MEMBER_NAME(bytes,"bytes");
	HX_MARK_END_CLASS();
}

void ArrayBufferView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(buffer,"buffer");
	HX_VISIT_MEMBER_NAME(byteOffset,"byteOffset");
	HX_VISIT_MEMBER_NAME(byteLength,"byteLength");
	HX_VISIT_MEMBER_NAME(bytes,"bytes");
}

::hx::Val ArrayBufferView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"bytes") ) { return ::hx::Val( bytes ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"buffer") ) { return ::hx::Val( buffer ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toBytes") ) { return ::hx::Val( toBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"setData") ) { return ::hx::Val( setData_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getStart") ) { return ::hx::Val( getStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUInt8") ) { return ::hx::Val( getUInt8_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUInt8") ) { return ::hx::Val( setUInt8_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt16") ) { return ::hx::Val( getInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt16") ) { return ::hx::Val( setInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt32") ) { return ::hx::Val( getInt32_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt32") ) { return ::hx::Val( setInt32_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getLength") ) { return ::hx::Val( getLength_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUInt16") ) { return ::hx::Val( getUInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUInt16") ) { return ::hx::Val( setUInt16_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteOffset") ) { return ::hx::Val( byteOffset ); }
		if (HX_FIELD_EQ(inName,"byteLength") ) { return ::hx::Val( byteLength ); }
		if (HX_FIELD_EQ(inName,"getFloat32") ) { return ::hx::Val( getFloat32_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat32") ) { return ::hx::Val( setFloat32_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getByteBuffer") ) { return ::hx::Val( getByteBuffer_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ArrayBufferView_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"invalidDataIndex") ) { outValue = ( invalidDataIndex ); return true; }
	}
	return false;
}

::hx::Val ArrayBufferView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"bytes") ) { bytes=inValue.Cast< ::Array< unsigned char > >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"buffer") ) { buffer=inValue.Cast<  ::nme::utils::ByteArray >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteOffset") ) { byteOffset=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"byteLength") ) { byteLength=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ArrayBufferView_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"invalidDataIndex") ) { invalidDataIndex=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void ArrayBufferView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("buffer",00,bd,94,d0));
	outFields->push(HX_("byteOffset",bb,20,44,38));
	outFields->push(HX_("byteLength",0e,1e,0c,77));
	outFields->push(HX_("bytes",6b,08,98,bd));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ArrayBufferView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::nme::utils::ByteArray */ ,(int)offsetof(ArrayBufferView_obj,buffer),HX_("buffer",00,bd,94,d0)},
	{::hx::fsInt,(int)offsetof(ArrayBufferView_obj,byteOffset),HX_("byteOffset",bb,20,44,38)},
	{::hx::fsInt,(int)offsetof(ArrayBufferView_obj,byteLength),HX_("byteLength",0e,1e,0c,77)},
	{::hx::fsObject /* ::Array< unsigned char > */ ,(int)offsetof(ArrayBufferView_obj,bytes),HX_("bytes",6b,08,98,bd)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo ArrayBufferView_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &ArrayBufferView_obj::invalidDataIndex,HX_("invalidDataIndex",91,8a,9d,3b)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ArrayBufferView_obj_sMemberFields[] = {
	HX_("buffer",00,bd,94,d0),
	HX_("byteOffset",bb,20,44,38),
	HX_("byteLength",0e,1e,0c,77),
	HX_("bytes",6b,08,98,bd),
	HX_("toBytes",f0,54,1c,8a),
	HX_("setData",ec,96,e7,07),
	HX_("getByteBuffer",5e,a2,0b,05),
	HX_("getStart",ec,83,e2,e3),
	HX_("getLength",1c,1e,5e,1b),
	HX_("getFloat32",45,17,6a,39),
	HX_("setFloat32",b9,b5,e7,3c),
	HX_("getUInt8",08,5f,4d,ee),
	HX_("setUInt8",7c,b8,aa,9c),
	HX_("getInt16",1e,a1,f7,1d),
	HX_("getUInt16",15,c2,65,95),
	HX_("setInt16",92,fa,54,cc),
	HX_("setUInt16",21,ae,b6,78),
	HX_("getInt32",d8,a2,f7,1d),
	HX_("setInt32",4c,fc,54,cc),
	::String(null()) };

static void ArrayBufferView_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ArrayBufferView_obj::invalidDataIndex,"invalidDataIndex");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ArrayBufferView_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ArrayBufferView_obj::invalidDataIndex,"invalidDataIndex");
};

#endif

::hx::Class ArrayBufferView_obj::__mClass;

static ::String ArrayBufferView_obj_sStaticFields[] = {
	HX_("invalidDataIndex",91,8a,9d,3b),
	::String(null())
};

void ArrayBufferView_obj::__register()
{
	ArrayBufferView_obj _hx_dummy;
	ArrayBufferView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.utils.ArrayBufferView",f9,06,4b,9a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ArrayBufferView_obj::__GetStatic;
	__mClass->mSetStaticField = &ArrayBufferView_obj::__SetStatic;
	__mClass->mMarkFunc = ArrayBufferView_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ArrayBufferView_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ArrayBufferView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ArrayBufferView_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ArrayBufferView_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ArrayBufferView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ArrayBufferView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ArrayBufferView_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c129344a6a23aade_15_boot)
HXDLIN(  15)		invalidDataIndex = HX_("Invalid data index",45,2f,02,8f);
            	}
}

} // end namespace nme
} // end namespace utils
