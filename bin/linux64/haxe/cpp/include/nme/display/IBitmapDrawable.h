// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_display_IBitmapDrawable
#define INCLUDED_nme_display_IBitmapDrawable

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,display,IBitmapDrawable)
HX_DECLARE_CLASS2(nme,geom,ColorTransform)
HX_DECLARE_CLASS2(nme,geom,Matrix)
HX_DECLARE_CLASS2(nme,geom,Rectangle)

namespace nme{
namespace display{


class HXCPP_CLASS_ATTRIBUTES IBitmapDrawable_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (::hx::Object :: *_hx_nmeDrawToSurface)( ::Dynamic inSurface, ::nme::geom::Matrix matrix, ::nme::geom::ColorTransform colorTransform,::String blendMode, ::nme::geom::Rectangle clipRect,bool smoothing); 
		static inline void nmeDrawToSurface( ::Dynamic _hx_, ::Dynamic inSurface, ::nme::geom::Matrix matrix, ::nme::geom::ColorTransform colorTransform,::String blendMode, ::nme::geom::Rectangle clipRect,bool smoothing) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::nme::display::IBitmapDrawable_obj *>(_hx_.mPtr->_hx_getInterface(0xfe58bb1a)))->_hx_nmeDrawToSurface)(inSurface,matrix,colorTransform,blendMode,clipRect,smoothing);
		}
};

} // end namespace nme
} // end namespace display

#endif /* INCLUDED_nme_display_IBitmapDrawable */ 
