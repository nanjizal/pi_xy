// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic__Img_Img_Impl_
#define INCLUDED_iterMagic__Img_Img_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(iterMagic,Iimg)
HX_DECLARE_CLASS1(iterMagic,RawImageData)
HX_DECLARE_CLASS2(iterMagic,_Img,Img_Impl_)

namespace iterMagic{
namespace _Img{


class HXCPP_CLASS_ATTRIBUTES Img_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Img_Impl__obj OBJ_;
		Img_Impl__obj();

	public:
		enum { _hx_ClassId = 0x57f19b0a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="iterMagic._Img.Img_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"iterMagic._Img.Img_Impl_"); }

		inline static ::hx::ObjectPtr< Img_Impl__obj > __new() {
			::hx::ObjectPtr< Img_Impl__obj > __this = new Img_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Img_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Img_Impl__obj *__this = (Img_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Img_Impl__obj), false, "iterMagic._Img.Img_Impl_"));
			*(void **)__this = Img_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Img_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Img_Impl_",c3,8c,fd,88); }

		static ::Dynamic _new(int width,int height,int imageType);
		static ::Dynamic _new_dyn();

		static int set(::Dynamic this1,int index,int value);
		static ::Dynamic set_dyn();

		static int get(::Dynamic this1,int index);
		static ::Dynamic get_dyn();

		static  ::iterMagic::RawImageData get_raw(::Dynamic this1);
		static ::Dynamic get_raw_dyn();

		static  ::iterMagic::RawImageData set_raw(::Dynamic this1, ::iterMagic::RawImageData d);
		static ::Dynamic set_raw_dyn();

		static ::Dynamic fromTo(::Dynamic a,::Dynamic b);
		static ::Dynamic fromTo_dyn();

		static ::Dynamic toFrom(::Dynamic a,::Dynamic b);
		static ::Dynamic toFrom_dyn();

};

} // end namespace iterMagic
} // end namespace _Img

#endif /* INCLUDED_iterMagic__Img_Img_Impl_ */ 
