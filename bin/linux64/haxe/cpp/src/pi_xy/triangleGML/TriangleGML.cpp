// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_pi_xy_ImageStruct
#include <pi_xy/ImageStruct.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_ArcForm
#include <pi_xy/triangleGML/ArcForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_ArrowShape
#include <pi_xy/triangleGML/ArrowShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_CircleForm
#include <pi_xy/triangleGML/CircleForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_EllipseForm
#include <pi_xy/triangleGML/EllipseForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_LineGradient
#include <pi_xy/triangleGML/LineGradient.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_LineGridShape
#include <pi_xy/triangleGML/LineGridShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_LineShape
#include <pi_xy/triangleGML/LineShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_NineSlicePicture
#include <pi_xy/triangleGML/NineSlicePicture.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_QuadShape
#include <pi_xy/triangleGML/QuadShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_RectangleForm
#include <pi_xy/triangleGML/RectangleForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_TriangleGML
#include <pi_xy/triangleGML/TriangleGML.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_BasicGradient
#include <pi_xy/triangleGML/triGML/BasicGradient.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_BasicShape
#include <pi_xy/triangleGML/triGML/BasicShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_FillForm
#include <pi_xy/triangleGML/triGML/FillForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_GroupShape
#include <pi_xy/triangleGML/triGML/GroupShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_ShapeInterface
#include <pi_xy/triangleGML/triGML/ShapeInterface.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_TriGML
#include <pi_xy/triangleGML/triGML/TriGML.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_ArrowShape_
#include <pi_xy/triangleGML/triGML/shape/contour/ArrowShape_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_LineGridShape_
#include <pi_xy/triangleGML/triGML/shape/contour/LineGridShape_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_LineShape_
#include <pi_xy/triangleGML/triGML/shape/contour/LineShape_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_QuadShape_
#include <pi_xy/triangleGML/triGML/shape/contour/QuadShape_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_form_ArcForm_
#include <pi_xy/triangleGML/triGML/shape/form/ArcForm_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_form_CircleForm_
#include <pi_xy/triangleGML/triGML/shape/form/CircleForm_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_form_EllipseForm_
#include <pi_xy/triangleGML/triGML/shape/form/EllipseForm_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_form_RectangleForm_
#include <pi_xy/triangleGML/triGML/shape/form/RectangleForm_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_gradient_LineGradient_
#include <pi_xy/triangleGML/triGML/shape/gradient/LineGradient_.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_picture_NineSlicePicture_
#include <pi_xy/triangleGML/triGML/shape/picture/NineSlicePicture_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8604889c6f59cf4b_28_new,"pi_xy.triangleGML.TriangleGML","new",0x660c9479,"pi_xy.triangleGML.TriangleGML.new","pi_xy/triangleGML/TriangleGML.hx",28,0x58b1ba19)
HX_LOCAL_STACK_FRAME(_hx_pos_8604889c6f59cf4b_84_getTriangleGML,"pi_xy.triangleGML.TriangleGML","getTriangleGML",0xbed3952f,"pi_xy.triangleGML.TriangleGML.getTriangleGML","pi_xy/triangleGML/TriangleGML.hx",84,0x58b1ba19)
HX_LOCAL_STACK_FRAME(_hx_pos_8604889c6f59cf4b_30_withString,"pi_xy.triangleGML.TriangleGML","withString",0x738f3c7e,"pi_xy.triangleGML.TriangleGML.withString","pi_xy/triangleGML/TriangleGML.hx",30,0x58b1ba19)
namespace pi_xy{
namespace triangleGML{

void TriangleGML_obj::__construct( ::pi_xy::ImageStruct drawTool, ::Xml xml, ::Dynamic x, ::Dynamic y){
            	HX_STACKFRAME(&_hx_pos_8604889c6f59cf4b_28_new)
HXDLIN(  28)		super::__construct(drawTool,xml,x,y);
            	}

Dynamic TriangleGML_obj::__CreateEmpty() { return new TriangleGML_obj; }

void *TriangleGML_obj::_hx_vtable = 0;

Dynamic TriangleGML_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TriangleGML_obj > _hx_result = new TriangleGML_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool TriangleGML_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x06984d03) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x06984d03;
	} else {
		return inClassId==(int)0x7552a34d;
	}
}

::Dynamic TriangleGML_obj::getTriangleGML(::String nodeName){
            	HX_GC_STACKFRAME(&_hx_pos_8604889c6f59cf4b_84_getTriangleGML)
HXLINE(  86)		::Dynamic s;
HXDLIN(  86)		::String _hx_switch_0 = nodeName;
            		if (  (_hx_switch_0==HX_("ArcForm",96,44,e7,52)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::ArcForm_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("ArrowShape",b8,c4,70,e6)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::ArrowShape_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("CircleForm",94,4b,62,ea)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::CircleForm_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("EllipseForm",22,2d,67,d1)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::EllipseForm_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("LineGradient",24,6e,3d,3d)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::LineGradient_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("LineGridShape",c7,a7,4f,fc)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::LineGridShape_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("LineShape",6d,c6,ea,64)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::LineShape_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("NineSlicePicture",fe,52,df,f0)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::NineSlicePicture_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("QuadShape",ba,c8,0c,af)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::QuadShape_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("RectangleForm",f3,f4,d5,00)) ){
HXLINE(  86)			s =  ::pi_xy::triangleGML::RectangleForm_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE( 108)			HX_STACK_DO_THROW((HX_("shape unfound ",96,77,47,52) + nodeName));
            		}
            		_hx_goto_1:;
HXLINE( 110)		return s;
            	}


 ::pi_xy::triangleGML::TriangleGML TriangleGML_obj::withString( ::pi_xy::ImageStruct pixelImage,::String str,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,::hx::Null< bool >  __o_renderNow){
            		Float x = __o_x.Default(((Float)0.));
            		Float y = __o_y.Default(((Float)0.));
            		bool renderNow = __o_renderNow.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_8604889c6f59cf4b_30_withString)
HXLINE(  32)		 ::Xml xml = ::Xml_obj::parse(((HX_("<node>",40,5e,28,9d) + str) + HX_("</node>",a9,82,8c,29)))->firstElement();
HXLINE(  34)		 ::pi_xy::triangleGML::TriangleGML t =  ::pi_xy::triangleGML::TriangleGML_obj::__alloc( HX_CTX ,pixelImage,xml,x,y);
HXLINE(  35)		if (renderNow) {
HXLINE(  35)			t->render();
            		}
HXLINE(  36)		return t;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(TriangleGML_obj,withString,return )


::hx::ObjectPtr< TriangleGML_obj > TriangleGML_obj::__new( ::pi_xy::ImageStruct drawTool, ::Xml xml, ::Dynamic x, ::Dynamic y) {
	::hx::ObjectPtr< TriangleGML_obj > __this = new TriangleGML_obj();
	__this->__construct(drawTool,xml,x,y);
	return __this;
}

::hx::ObjectPtr< TriangleGML_obj > TriangleGML_obj::__alloc(::hx::Ctx *_hx_ctx, ::pi_xy::ImageStruct drawTool, ::Xml xml, ::Dynamic x, ::Dynamic y) {
	TriangleGML_obj *__this = (TriangleGML_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TriangleGML_obj), true, "pi_xy.triangleGML.TriangleGML"));
	*(void **)__this = TriangleGML_obj::_hx_vtable;
	__this->__construct(drawTool,xml,x,y);
	return __this;
}

TriangleGML_obj::TriangleGML_obj()
{
}

::hx::Val TriangleGML_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"getTriangleGML") ) { return ::hx::Val( getTriangleGML_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool TriangleGML_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"withString") ) { outValue = withString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TriangleGML_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TriangleGML_obj_sStaticStorageInfo = 0;
#endif

static ::String TriangleGML_obj_sMemberFields[] = {
	HX_("getTriangleGML",a8,24,ec,3d),
	::String(null()) };

::hx::Class TriangleGML_obj::__mClass;

static ::String TriangleGML_obj_sStaticFields[] = {
	HX_("withString",77,5b,fa,fc),
	::String(null())
};

void TriangleGML_obj::__register()
{
	TriangleGML_obj _hx_dummy;
	TriangleGML_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.triangleGML.TriangleGML",07,e4,40,43);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TriangleGML_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TriangleGML_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TriangleGML_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TriangleGML_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TriangleGML_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TriangleGML_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace triangleGML
