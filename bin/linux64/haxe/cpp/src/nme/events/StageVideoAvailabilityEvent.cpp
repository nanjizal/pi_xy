// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_events_Event
#include <nme/events/Event.h>
#endif
#ifndef INCLUDED_nme_events_StageVideoAvailabilityEvent
#include <nme/events/StageVideoAvailabilityEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_26ceacd09840456a_10_new,"nme.events.StageVideoAvailabilityEvent","new",0xf9dbe047,"nme.events.StageVideoAvailabilityEvent.new","nme/events/StageVideoAvailabilityEvent.hx",10,0x59452f29)
HX_LOCAL_STACK_FRAME(_hx_pos_26ceacd09840456a_7_boot,"nme.events.StageVideoAvailabilityEvent","boot",0x9ea15e6b,"nme.events.StageVideoAvailabilityEvent.boot","nme/events/StageVideoAvailabilityEvent.hx",7,0x59452f29)
namespace nme{
namespace events{

void StageVideoAvailabilityEvent_obj::__construct(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::String inAvailability){
            		bool bubbles = __o_bubbles.Default(false);
            		bool cancelable = __o_cancelable.Default(false);
            	HX_STACKFRAME(&_hx_pos_26ceacd09840456a_10_new)
HXLINE(  11)		super::__construct(type,bubbles,cancelable);
HXLINE(  12)		this->availability = inAvailability;
            	}

Dynamic StageVideoAvailabilityEvent_obj::__CreateEmpty() { return new StageVideoAvailabilityEvent_obj; }

void *StageVideoAvailabilityEvent_obj::_hx_vtable = 0;

Dynamic StageVideoAvailabilityEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StageVideoAvailabilityEvent_obj > _hx_result = new StageVideoAvailabilityEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool StageVideoAvailabilityEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0ecf4b03) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0ecf4b03;
	} else {
		return inClassId==(int)0x113d0d1f;
	}
}

::String StageVideoAvailabilityEvent_obj::STAGE_VIDEO_AVAILABILITY;


::hx::ObjectPtr< StageVideoAvailabilityEvent_obj > StageVideoAvailabilityEvent_obj::__new(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::String inAvailability) {
	::hx::ObjectPtr< StageVideoAvailabilityEvent_obj > __this = new StageVideoAvailabilityEvent_obj();
	__this->__construct(type,__o_bubbles,__o_cancelable,inAvailability);
	return __this;
}

::hx::ObjectPtr< StageVideoAvailabilityEvent_obj > StageVideoAvailabilityEvent_obj::__alloc(::hx::Ctx *_hx_ctx,::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::String inAvailability) {
	StageVideoAvailabilityEvent_obj *__this = (StageVideoAvailabilityEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StageVideoAvailabilityEvent_obj), true, "nme.events.StageVideoAvailabilityEvent"));
	*(void **)__this = StageVideoAvailabilityEvent_obj::_hx_vtable;
	__this->__construct(type,__o_bubbles,__o_cancelable,inAvailability);
	return __this;
}

StageVideoAvailabilityEvent_obj::StageVideoAvailabilityEvent_obj()
{
}

void StageVideoAvailabilityEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StageVideoAvailabilityEvent);
	HX_MARK_MEMBER_NAME(availability,"availability");
	 ::nme::events::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StageVideoAvailabilityEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(availability,"availability");
	 ::nme::events::Event_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val StageVideoAvailabilityEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"availability") ) { return ::hx::Val( availability ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StageVideoAvailabilityEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"availability") ) { availability=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StageVideoAvailabilityEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("availability",db,fc,f2,7f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StageVideoAvailabilityEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(StageVideoAvailabilityEvent_obj,availability),HX_("availability",db,fc,f2,7f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo StageVideoAvailabilityEvent_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &StageVideoAvailabilityEvent_obj::STAGE_VIDEO_AVAILABILITY,HX_("STAGE_VIDEO_AVAILABILITY",c0,7a,ae,29)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String StageVideoAvailabilityEvent_obj_sMemberFields[] = {
	HX_("availability",db,fc,f2,7f),
	::String(null()) };

static void StageVideoAvailabilityEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StageVideoAvailabilityEvent_obj::STAGE_VIDEO_AVAILABILITY,"STAGE_VIDEO_AVAILABILITY");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StageVideoAvailabilityEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StageVideoAvailabilityEvent_obj::STAGE_VIDEO_AVAILABILITY,"STAGE_VIDEO_AVAILABILITY");
};

#endif

::hx::Class StageVideoAvailabilityEvent_obj::__mClass;

static ::String StageVideoAvailabilityEvent_obj_sStaticFields[] = {
	HX_("STAGE_VIDEO_AVAILABILITY",c0,7a,ae,29),
	::String(null())
};

void StageVideoAvailabilityEvent_obj::__register()
{
	StageVideoAvailabilityEvent_obj _hx_dummy;
	StageVideoAvailabilityEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.events.StageVideoAvailabilityEvent",d5,b0,ae,41);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StageVideoAvailabilityEvent_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(StageVideoAvailabilityEvent_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StageVideoAvailabilityEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StageVideoAvailabilityEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StageVideoAvailabilityEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageVideoAvailabilityEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageVideoAvailabilityEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StageVideoAvailabilityEvent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_26ceacd09840456a_7_boot)
HXDLIN(   7)		STAGE_VIDEO_AVAILABILITY = HX_("stageVideoAvailability",58,09,7a,7e);
            	}
}

} // end namespace nme
} // end namespace events
