// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_ApplicationDocument
#include <ApplicationDocument.h>
#endif
#ifndef INCLUDED_ApplicationMain
#include <ApplicationMain.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_nme_Lib
#include <nme/Lib.h>
#endif
#ifndef INCLUDED_nme_app_IAppEventHandler
#include <nme/app/IAppEventHandler.h>
#endif
#ifndef INCLUDED_nme_app_IPollClient
#include <nme/app/IPollClient.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObjectContainer
#include <nme/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_display_MovieClip
#include <nme/display/MovieClip.h>
#endif
#ifndef INCLUDED_nme_display_Sprite
#include <nme/display/Sprite.h>
#endif
#ifndef INCLUDED_nme_display_Stage
#include <nme/display/Stage.h>
#endif
#ifndef INCLUDED_nme_events_Event
#include <nme/events/Event.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_pi_xy_application_TestNME
#include <pi_xy/application/TestNME.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fd937d3338014a41_5_new,"ApplicationDocument","new",0xac3750dd,"ApplicationDocument.new","ApplicationDocument.hx",5,0x8f1f3933)

void ApplicationDocument_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_fd937d3338014a41_5_new)
HXLINE(   7)		 ::nme::display::DisplayObject added = null();
HXLINE(   8)		::ApplicationMain_obj::setAndroidViewHaxeObject(::hx::ObjectPtr<OBJ_>(this));
HXLINE(   9)		if (::Std_obj::isOfType(::hx::ObjectPtr<OBJ_>(this),::hx::ClassOf< ::nme::display::DisplayObject >())) {
HXLINE(  11)			added = ( ( ::nme::display::DisplayObject)(::hx::ObjectPtr<OBJ_>(this)) );
HXLINE(  12)			::nme::Lib_obj::get_current()->addChild(added);
            		}
HXLINE(  16)		super::__construct();
HXLINE(  19)		bool _hx_tmp;
HXDLIN(  19)		if (::hx::IsNotNull( added )) {
HXLINE(  19)			_hx_tmp = ::hx::IsNotNull( added->get_stage() );
            		}
            		else {
HXLINE(  19)			_hx_tmp = false;
            		}
HXDLIN(  19)		if (_hx_tmp) {
HXLINE(  21)			added->dispatchEvent( ::nme::events::Event_obj::__alloc( HX_CTX ,HX_("addedToStage",63,22,55,0c),false,false));
HXLINE(  22)			added->dispatchEvent( ::nme::events::Event_obj::__alloc( HX_CTX ,HX_("added",c0,d4,43,1c),false,false));
            		}
            	}

Dynamic ApplicationDocument_obj::__CreateEmpty() { return new ApplicationDocument_obj; }

void *ApplicationDocument_obj::_hx_vtable = 0;

Dynamic ApplicationDocument_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ApplicationDocument_obj > _hx_result = new ApplicationDocument_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ApplicationDocument_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x169017a6) {
		if (inClassId<=(int)0x0b9723ab) {
			if (inClassId<=(int)0x048b25c1) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x048b25c1;
			} else {
				return inClassId==(int)0x0b9723ab;
			}
		} else {
			return inClassId==(int)0x0ff07575 || inClassId==(int)0x169017a6;
		}
	} else {
		if (inClassId<=(int)0x5e732244) {
			return inClassId==(int)0x5a2ce121 || inClassId==(int)0x5e732244;
		} else {
			return inClassId==(int)0x66c9a5eb;
		}
	}
}


::hx::ObjectPtr< ApplicationDocument_obj > ApplicationDocument_obj::__new() {
	::hx::ObjectPtr< ApplicationDocument_obj > __this = new ApplicationDocument_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ApplicationDocument_obj > ApplicationDocument_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ApplicationDocument_obj *__this = (ApplicationDocument_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ApplicationDocument_obj), true, "ApplicationDocument"));
	*(void **)__this = ApplicationDocument_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ApplicationDocument_obj::ApplicationDocument_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ApplicationDocument_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ApplicationDocument_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ApplicationDocument_obj::__mClass;

void ApplicationDocument_obj::__register()
{
	ApplicationDocument_obj _hx_dummy;
	ApplicationDocument_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ApplicationDocument",6b,9e,f4,97);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ApplicationDocument_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ApplicationDocument_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ApplicationDocument_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

