// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_geom_Transform
#define INCLUDED_nme_geom_Transform

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,display,DisplayObject)
HX_DECLARE_CLASS2(nme,display,IBitmapDrawable)
HX_DECLARE_CLASS2(nme,events,EventDispatcher)
HX_DECLARE_CLASS2(nme,events,IEventDispatcher)
HX_DECLARE_CLASS2(nme,geom,ColorTransform)
HX_DECLARE_CLASS2(nme,geom,Matrix)
HX_DECLARE_CLASS2(nme,geom,Rectangle)
HX_DECLARE_CLASS2(nme,geom,Transform)

namespace nme{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES Transform_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Transform_obj OBJ_;
		Transform_obj();

	public:
		enum { _hx_ClassId = 0x0c3ddba2 };

		void __construct( ::nme::display::DisplayObject inParent);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nme.geom.Transform")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"nme.geom.Transform"); }
		static ::hx::ObjectPtr< Transform_obj > __new( ::nme::display::DisplayObject inParent);
		static ::hx::ObjectPtr< Transform_obj > __alloc(::hx::Ctx *_hx_ctx, ::nme::display::DisplayObject inParent);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Transform_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Transform",4c,0d,66,e7); }

		 ::nme::geom::ColorTransform concatenatedColorTransform;
		 ::nme::geom::Matrix concatenatedMatrix;
		 ::nme::geom::Rectangle pixelBounds;
		 ::nme::display::DisplayObject nmeObj;
		 ::nme::geom::ColorTransform get_colorTransform();
		::Dynamic get_colorTransform_dyn();

		 ::nme::geom::ColorTransform set_colorTransform( ::nme::geom::ColorTransform inTrans);
		::Dynamic set_colorTransform_dyn();

		 ::nme::geom::ColorTransform get_concatenatedColorTransform();
		::Dynamic get_concatenatedColorTransform_dyn();

		 ::nme::geom::Matrix get_concatenatedMatrix();
		::Dynamic get_concatenatedMatrix_dyn();

		 ::nme::geom::Matrix get_matrix();
		::Dynamic get_matrix_dyn();

		 ::nme::geom::Matrix set_matrix( ::nme::geom::Matrix inMatrix);
		::Dynamic set_matrix_dyn();

		 ::nme::geom::Rectangle get_pixelBounds();
		::Dynamic get_pixelBounds_dyn();

};

} // end namespace nme
} // end namespace geom

#endif /* INCLUDED_nme_geom_Transform */ 
