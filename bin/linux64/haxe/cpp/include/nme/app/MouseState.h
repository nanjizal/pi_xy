// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_app_MouseState
#define INCLUDED_nme_app_MouseState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_a421503e8f9acf55_11_new)
HX_DECLARE_CLASS2(nme,app,MouseState)

namespace nme{
namespace app{


class HXCPP_CLASS_ATTRIBUTES MouseState_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MouseState_obj OBJ_;
		MouseState_obj();

	public:
		enum { _hx_ClassId = 0x10ffba37 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="nme.app.MouseState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"nme.app.MouseState"); }

		inline static ::hx::ObjectPtr< MouseState_obj > __new() {
			::hx::ObjectPtr< MouseState_obj > __this = new MouseState_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< MouseState_obj > __alloc(::hx::Ctx *_hx_ctx) {
			MouseState_obj *__this = (MouseState_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MouseState_obj), false, "nme.app.MouseState"));
			*(void **)__this = MouseState_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_a421503e8f9acf55_11_new)
HXDLIN(  11)		( ( ::nme::app::MouseState)(__this) )->x = (( ( ::nme::app::MouseState)(__this) )->y = (( ( ::nme::app::MouseState)(__this) )->buttons = 0));
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MouseState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MouseState",cc,6d,89,98); }

		int x;
		int y;
		int buttons;
		bool getButton(int but);
		::Dynamic getButton_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace nme
} // end namespace app

#endif /* INCLUDED_nme_app_MouseState */ 
