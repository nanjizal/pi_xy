// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_text_GridFitType
#define INCLUDED_nme_text_GridFitType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,text,GridFitType)
namespace nme{
namespace text{


class GridFitType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef GridFitType_obj OBJ_;

	public:
		GridFitType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.text.GridFitType",cc,2f,4a,3d); }
		::String __ToString() const { return HX_("GridFitType.",a9,fd,72,a5) + _hx_tag; }

		static ::nme::text::GridFitType NONE;
		static inline ::nme::text::GridFitType NONE_dyn() { return NONE; }
		static ::nme::text::GridFitType PIXEL;
		static inline ::nme::text::GridFitType PIXEL_dyn() { return PIXEL; }
		static ::nme::text::GridFitType SUBPIXEL;
		static inline ::nme::text::GridFitType SUBPIXEL_dyn() { return SUBPIXEL; }
};

} // end namespace nme
} // end namespace text

#endif /* INCLUDED_nme_text_GridFitType */ 
