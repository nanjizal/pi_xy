// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_imageAbstracts__SoftShape_SoftShape_Impl_
#define INCLUDED_pi_xy_imageAbstracts__SoftShape_SoftShape_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(pi_xy,ImageStruct)
HX_DECLARE_CLASS2(pi_xy,algo,HitQuad)
HX_DECLARE_CLASS2(pi_xy,algo,HitTri)
HX_DECLARE_CLASS2(pi_xy,algo,HitTriArray)
HX_DECLARE_CLASS2(pi_xy,algo,IhitObj)
HX_DECLARE_CLASS2(pi_xy,algo,QuadPoints_)
HX_DECLARE_CLASS2(pi_xy,algo,TriPoints_)
HX_DECLARE_CLASS3(pi_xy,imageAbstracts,_SoftShape,SoftShape_Impl_)

namespace pi_xy{
namespace imageAbstracts{
namespace _SoftShape{


class HXCPP_CLASS_ATTRIBUTES SoftShape_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SoftShape_Impl__obj OBJ_;
		SoftShape_Impl__obj();

	public:
		enum { _hx_ClassId = 0x3329bea6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.imageAbstracts._SoftShape.SoftShape_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.imageAbstracts._SoftShape.SoftShape_Impl_"); }

		inline static ::hx::ObjectPtr< SoftShape_Impl__obj > __new() {
			::hx::ObjectPtr< SoftShape_Impl__obj > __this = new SoftShape_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SoftShape_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			SoftShape_Impl__obj *__this = (SoftShape_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SoftShape_Impl__obj), false, "pi_xy.imageAbstracts._SoftShape.SoftShape_Impl_"));
			*(void **)__this = SoftShape_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SoftShape_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SoftShape_Impl_",97,e5,94,da); }

		static  ::pi_xy::ImageStruct _new(int w,int h);
		static ::Dynamic _new_dyn();

		static  ::pi_xy::algo::HitQuad quint( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,Float dx,Float dy,int color,Float softC,::hx::Null< bool >  hasHit);
		static ::Dynamic quint_dyn();

		static  ::pi_xy::algo::HitQuad quad( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,Float dx,Float dy,int color,::hx::Null< Float >  soft,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCD,::hx::Null< bool >  softDA,::hx::Null< bool >  hasHit);
		static ::Dynamic quad_dyn();

		static  ::pi_xy::algo::HitQuad quadFudge( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,Float dx,Float dy,int color,::hx::Null< Float >  soft,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCD,::hx::Null< bool >  softDA,::hx::Null< bool >  hasHit);
		static ::Dynamic quadFudge_dyn();

		static  ::pi_xy::algo::HitQuad quadQuarter( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,Float dx,Float dy,int color,::hx::Null< Float >  soft,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCD,::hx::Null< bool >  softDA,::hx::Null< bool >  hasHit);
		static ::Dynamic quadQuarter_dyn();

		static  ::pi_xy::algo::HitQuad line( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color,::hx::Null< Float >  soft,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCD,::hx::Null< bool >  softDA,::hx::Null< bool >  hasHit, ::Dynamic debugCorners);
		static ::Dynamic line_dyn();

		static  ::pi_xy::algo::HitQuad lineLuxury( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color,::hx::Null< Float >  soft,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCD,::hx::Null< bool >  softDA,::hx::Null< bool >  hasHit, ::Dynamic debugCorners);
		static ::Dynamic lineLuxury_dyn();

		static  ::pi_xy::algo::HitTri triangle( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,int color,Float soft3,::hx::Null< bool >  softAB,::hx::Null< bool >  softBC,::hx::Null< bool >  softCA,::hx::Null< bool >  hasHit);
		static ::Dynamic triangle_dyn();

		static  ::pi_xy::algo::HitTriArray arrow( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color,::hx::Null< bool >  flare,::hx::Null< bool >  reverseFlare,::hx::Null< Float >  soft,::hx::Null< bool >  hasHit);
		static ::Dynamic arrow_dyn();

		static  ::pi_xy::algo::HitTriArray arrowBoth( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color,::hx::Null< Float >  soft,::hx::Null< bool >  hasHit);
		static ::Dynamic arrowBoth_dyn();

		static  ::pi_xy::algo::HitTriArray fixArrow( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float arrowWidth,Float arrowHeight,Float thick,int color,::hx::Null< bool >  flare,::hx::Null< bool >  reverseFlare,::hx::Null< Float >  soft,::hx::Null< bool >  hasHit);
		static ::Dynamic fixArrow_dyn();

		static  ::pi_xy::algo::HitTriArray fixArrowBoth( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float arrowWidth,Float arrowHeight,Float thick,int color,::hx::Null< Float >  soft,::hx::Null< bool >  hasHit);
		static ::Dynamic fixArrowBoth_dyn();

		static void ellipseTri( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry,int color,::hx::Null< Float >  phi,::hx::Null< Float >  softC,::hx::Null< bool >  printSides,::hx::Null< Float >  targetError);
		static ::Dynamic ellipseTri_dyn();

		static void polyBuild( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry,int color, ::Dynamic phi, ::Dynamic sides,::hx::Null< Float >  softC,::hx::Null< bool >  cornerUp);
		static ::Dynamic polyBuild_dyn();

};

} // end namespace pi_xy
} // end namespace imageAbstracts
} // end namespace _SoftShape

#endif /* INCLUDED_pi_xy_imageAbstracts__SoftShape_SoftShape_Impl_ */ 
