// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_ImageStruct
#include <pi_xy/ImageStruct.h>
#endif
#ifndef INCLUDED_pi_xy_algo_PolyPixel
#include <pi_xy/algo/PolyPixel.h>
#endif
#ifndef INCLUDED_pi_xy_algo__PolyPixel_PolyPixel_Fields_
#include <pi_xy/algo/_PolyPixel/PolyPixel_Fields_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a9c3b9acb1af3506_250_new,"pi_xy.algo.PolyPixel","new",0xec900dd8,"pi_xy.algo.PolyPixel.new","pi_xy/algo/PolyPixel.hx",250,0xb2bee0f8)
namespace pi_xy{
namespace algo{

void PolyPixel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a9c3b9acb1af3506_250_new)
HXLINE( 276)		this->_fillRadialPolyBuild = ::pi_xy::algo::_PolyPixel::PolyPixel_Fields__obj::fillRadialPolyBuild_dyn();
HXLINE( 266)		this->_tilePolygonBuild = ::pi_xy::algo::_PolyPixel::PolyPixel_Fields__obj::tilePolygonBuild_dyn();
HXLINE( 258)		this->_fillPolygonBuild = ::pi_xy::algo::_PolyPixel::PolyPixel_Fields__obj::fillPolygonBuild_dyn();
            	}

Dynamic PolyPixel_obj::__CreateEmpty() { return new PolyPixel_obj; }

void *PolyPixel_obj::_hx_vtable = 0;

Dynamic PolyPixel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PolyPixel_obj > _hx_result = new PolyPixel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PolyPixel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1242ae20;
}


::hx::ObjectPtr< PolyPixel_obj > PolyPixel_obj::__new() {
	::hx::ObjectPtr< PolyPixel_obj > __this = new PolyPixel_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PolyPixel_obj > PolyPixel_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PolyPixel_obj *__this = (PolyPixel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PolyPixel_obj), true, "pi_xy.algo.PolyPixel"));
	*(void **)__this = PolyPixel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PolyPixel_obj::PolyPixel_obj()
{
}

void PolyPixel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PolyPixel);
	HX_MARK_MEMBER_NAME(_fillPolygonBuild,"_fillPolygonBuild");
	HX_MARK_MEMBER_NAME(_tilePolygonBuild,"_tilePolygonBuild");
	HX_MARK_MEMBER_NAME(_fillRadialPolyBuild,"_fillRadialPolyBuild");
	HX_MARK_END_CLASS();
}

void PolyPixel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_fillPolygonBuild,"_fillPolygonBuild");
	HX_VISIT_MEMBER_NAME(_tilePolygonBuild,"_tilePolygonBuild");
	HX_VISIT_MEMBER_NAME(_fillRadialPolyBuild,"_fillRadialPolyBuild");
}

::hx::Val PolyPixel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"_fillPolygonBuild") ) { return ::hx::Val( _fillPolygonBuild ); }
		if (HX_FIELD_EQ(inName,"_tilePolygonBuild") ) { return ::hx::Val( _tilePolygonBuild ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_fillRadialPolyBuild") ) { return ::hx::Val( _fillRadialPolyBuild ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PolyPixel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"_fillPolygonBuild") ) { _fillPolygonBuild=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_tilePolygonBuild") ) { _tilePolygonBuild=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_fillRadialPolyBuild") ) { _fillRadialPolyBuild=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PolyPixel_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(PolyPixel_obj,_fillPolygonBuild),HX_("_fillPolygonBuild",d6,4f,70,33)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(PolyPixel_obj,_tilePolygonBuild),HX_("_tilePolygonBuild",01,21,cf,2f)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(PolyPixel_obj,_fillRadialPolyBuild),HX_("_fillRadialPolyBuild",21,62,0b,6e)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PolyPixel_obj_sStaticStorageInfo = 0;
#endif

static ::String PolyPixel_obj_sMemberFields[] = {
	HX_("_fillPolygonBuild",d6,4f,70,33),
	HX_("_tilePolygonBuild",01,21,cf,2f),
	HX_("_fillRadialPolyBuild",21,62,0b,6e),
	::String(null()) };

::hx::Class PolyPixel_obj::__mClass;

void PolyPixel_obj::__register()
{
	PolyPixel_obj _hx_dummy;
	PolyPixel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.algo.PolyPixel",e6,81,d6,0b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PolyPixel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PolyPixel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PolyPixel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PolyPixel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace algo
