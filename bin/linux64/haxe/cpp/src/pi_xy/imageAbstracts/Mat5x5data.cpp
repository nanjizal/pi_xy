// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_imageAbstracts_Mat5x5data
#include <pi_xy/imageAbstracts/Mat5x5data.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3db1aed536b387b0_50_new,"pi_xy.imageAbstracts.Mat5x5data","new",0xbfe734df,"pi_xy.imageAbstracts.Mat5x5data.new","pi_xy/imageAbstracts/Convolution.hx",50,0x505c58f7)
namespace pi_xy{
namespace imageAbstracts{

void Mat5x5data_obj::__construct(Float a,Float b,Float c,Float d,Float e,Float f,Float g,Float h,Float i,Float j,Float k,Float l,Float m,Float n,Float o,Float p,Float q,Float r,Float s,Float t,Float u,Float v,Float w,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_3db1aed536b387b0_50_new)
HXLINE(  51)		this->a = a;
HXLINE(  52)		this->b = b;
HXLINE(  53)		this->c = c;
HXLINE(  54)		this->d = d;
HXLINE(  55)		this->e = e;
HXLINE(  56)		this->f = f;
HXLINE(  57)		this->g = g;
HXLINE(  58)		this->h = h;
HXLINE(  59)		this->i = i;
HXLINE(  60)		this->j = j;
HXLINE(  61)		this->k = k;
HXLINE(  62)		this->l = l;
HXLINE(  63)		this->m = m;
HXLINE(  64)		this->n = n;
HXLINE(  65)		this->o = o;
HXLINE(  66)		this->p = p;
HXLINE(  67)		this->q = q;
HXLINE(  68)		this->r = r;
HXLINE(  69)		this->s = s;
HXLINE(  70)		this->t = t;
HXLINE(  71)		this->u = u;
HXLINE(  72)		this->v = v;
HXLINE(  73)		this->w = w;
HXLINE(  74)		this->x = x;
HXLINE(  75)		this->y = y;
            	}

Dynamic Mat5x5data_obj::__CreateEmpty() { return new Mat5x5data_obj; }

void *Mat5x5data_obj::_hx_vtable = 0;

Dynamic Mat5x5data_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Mat5x5data_obj > _hx_result = new Mat5x5data_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12],inArgs[13],inArgs[14],inArgs[15],inArgs[16],inArgs[17],inArgs[18],inArgs[19],inArgs[20],inArgs[21],inArgs[22],inArgs[23],inArgs[24]);
	return _hx_result;
}

bool Mat5x5data_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x29951291;
}


Mat5x5data_obj::Mat5x5data_obj()
{
}

::hx::Val Mat5x5data_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return ::hx::Val( a ); }
		if (HX_FIELD_EQ(inName,"b") ) { return ::hx::Val( b ); }
		if (HX_FIELD_EQ(inName,"c") ) { return ::hx::Val( c ); }
		if (HX_FIELD_EQ(inName,"d") ) { return ::hx::Val( d ); }
		if (HX_FIELD_EQ(inName,"e") ) { return ::hx::Val( e ); }
		if (HX_FIELD_EQ(inName,"f") ) { return ::hx::Val( f ); }
		if (HX_FIELD_EQ(inName,"g") ) { return ::hx::Val( g ); }
		if (HX_FIELD_EQ(inName,"h") ) { return ::hx::Val( h ); }
		if (HX_FIELD_EQ(inName,"i") ) { return ::hx::Val( i ); }
		if (HX_FIELD_EQ(inName,"j") ) { return ::hx::Val( j ); }
		if (HX_FIELD_EQ(inName,"k") ) { return ::hx::Val( k ); }
		if (HX_FIELD_EQ(inName,"l") ) { return ::hx::Val( l ); }
		if (HX_FIELD_EQ(inName,"m") ) { return ::hx::Val( m ); }
		if (HX_FIELD_EQ(inName,"n") ) { return ::hx::Val( n ); }
		if (HX_FIELD_EQ(inName,"o") ) { return ::hx::Val( o ); }
		if (HX_FIELD_EQ(inName,"p") ) { return ::hx::Val( p ); }
		if (HX_FIELD_EQ(inName,"q") ) { return ::hx::Val( q ); }
		if (HX_FIELD_EQ(inName,"r") ) { return ::hx::Val( r ); }
		if (HX_FIELD_EQ(inName,"s") ) { return ::hx::Val( s ); }
		if (HX_FIELD_EQ(inName,"t") ) { return ::hx::Val( t ); }
		if (HX_FIELD_EQ(inName,"u") ) { return ::hx::Val( u ); }
		if (HX_FIELD_EQ(inName,"v") ) { return ::hx::Val( v ); }
		if (HX_FIELD_EQ(inName,"w") ) { return ::hx::Val( w ); }
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Mat5x5data_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { a=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"c") ) { c=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"d") ) { d=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"e") ) { e=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"f") ) { f=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"g") ) { g=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"h") ) { h=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"i") ) { i=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"j") ) { j=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"k") ) { k=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"l") ) { l=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m") ) { m=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"n") ) { n=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"p") ) { p=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"q") ) { q=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"r") ) { r=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"s") ) { s=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"t") ) { t=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"u") ) { u=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"v") ) { v=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"w") ) { w=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Mat5x5data_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("a",61,00,00,00));
	outFields->push(HX_("b",62,00,00,00));
	outFields->push(HX_("c",63,00,00,00));
	outFields->push(HX_("d",64,00,00,00));
	outFields->push(HX_("e",65,00,00,00));
	outFields->push(HX_("f",66,00,00,00));
	outFields->push(HX_("g",67,00,00,00));
	outFields->push(HX_("h",68,00,00,00));
	outFields->push(HX_("i",69,00,00,00));
	outFields->push(HX_("j",6a,00,00,00));
	outFields->push(HX_("k",6b,00,00,00));
	outFields->push(HX_("l",6c,00,00,00));
	outFields->push(HX_("m",6d,00,00,00));
	outFields->push(HX_("n",6e,00,00,00));
	outFields->push(HX_("o",6f,00,00,00));
	outFields->push(HX_("p",70,00,00,00));
	outFields->push(HX_("q",71,00,00,00));
	outFields->push(HX_("r",72,00,00,00));
	outFields->push(HX_("s",73,00,00,00));
	outFields->push(HX_("t",74,00,00,00));
	outFields->push(HX_("u",75,00,00,00));
	outFields->push(HX_("v",76,00,00,00));
	outFields->push(HX_("w",77,00,00,00));
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Mat5x5data_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,a),HX_("a",61,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,b),HX_("b",62,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,c),HX_("c",63,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,d),HX_("d",64,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,e),HX_("e",65,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,f),HX_("f",66,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,g),HX_("g",67,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,h),HX_("h",68,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,i),HX_("i",69,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,j),HX_("j",6a,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,k),HX_("k",6b,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,l),HX_("l",6c,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,m),HX_("m",6d,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,n),HX_("n",6e,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,o),HX_("o",6f,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,p),HX_("p",70,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,q),HX_("q",71,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,r),HX_("r",72,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,s),HX_("s",73,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,t),HX_("t",74,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,u),HX_("u",75,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,v),HX_("v",76,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,w),HX_("w",77,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsFloat,(int)offsetof(Mat5x5data_obj,y),HX_("y",79,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Mat5x5data_obj_sStaticStorageInfo = 0;
#endif

static ::String Mat5x5data_obj_sMemberFields[] = {
	HX_("a",61,00,00,00),
	HX_("b",62,00,00,00),
	HX_("c",63,00,00,00),
	HX_("d",64,00,00,00),
	HX_("e",65,00,00,00),
	HX_("f",66,00,00,00),
	HX_("g",67,00,00,00),
	HX_("h",68,00,00,00),
	HX_("i",69,00,00,00),
	HX_("j",6a,00,00,00),
	HX_("k",6b,00,00,00),
	HX_("l",6c,00,00,00),
	HX_("m",6d,00,00,00),
	HX_("n",6e,00,00,00),
	HX_("o",6f,00,00,00),
	HX_("p",70,00,00,00),
	HX_("q",71,00,00,00),
	HX_("r",72,00,00,00),
	HX_("s",73,00,00,00),
	HX_("t",74,00,00,00),
	HX_("u",75,00,00,00),
	HX_("v",76,00,00,00),
	HX_("w",77,00,00,00),
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	::String(null()) };

::hx::Class Mat5x5data_obj::__mClass;

void Mat5x5data_obj::__register()
{
	Mat5x5data_obj _hx_dummy;
	Mat5x5data_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.imageAbstracts.Mat5x5data",6d,d9,1d,18);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Mat5x5data_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Mat5x5data_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mat5x5data_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mat5x5data_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace imageAbstracts
