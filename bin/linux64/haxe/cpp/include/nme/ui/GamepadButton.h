// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_ui_GamepadButton
#define INCLUDED_nme_ui_GamepadButton

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,ui,GamepadButton)

namespace nme{
namespace ui{


class HXCPP_CLASS_ATTRIBUTES GamepadButton_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GamepadButton_obj OBJ_;
		GamepadButton_obj();

	public:
		enum { _hx_ClassId = 0x7617339d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="nme.ui.GamepadButton")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"nme.ui.GamepadButton"); }

		inline static ::hx::ObjectPtr< GamepadButton_obj > __new() {
			::hx::ObjectPtr< GamepadButton_obj > __this = new GamepadButton_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< GamepadButton_obj > __alloc(::hx::Ctx *_hx_ctx) {
			GamepadButton_obj *__this = (GamepadButton_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GamepadButton_obj), false, "nme.ui.GamepadButton"));
			*(void **)__this = GamepadButton_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GamepadButton_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GamepadButton",53,b5,92,40); }

		static void __boot();
		static int A;
		static int B;
		static int X;
		static int Y;
		static int LEFT_SHOULDER;
		static int RIGHT_SHOULDER;
		static int BACK;
		static int START;
		static int LEFT_STICK;
		static int RIGHT_STICK;
		static int GUIDE;
		static int DPAD_UP;
		static int DPAD_DOWN;
		static int DPAD_LEFT;
		static int DPAD_RIGHT;
		static ::String toString(int id);
		static ::Dynamic toString_dyn();

};

} // end namespace nme
} // end namespace ui

#endif /* INCLUDED_nme_ui_GamepadButton */ 
