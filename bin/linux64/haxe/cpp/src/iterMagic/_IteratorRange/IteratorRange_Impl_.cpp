// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_IntIterator
#include <IntIterator.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_iterMagic_IntIterStart
#include <iterMagic/IntIterStart.h>
#endif
#ifndef INCLUDED_iterMagic__IteratorRange_IteratorRange_Impl_
#include <iterMagic/_IteratorRange/IteratorRange_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_21_startLength,"iterMagic._IteratorRange.IteratorRange_Impl_","startLength",0xc240b2a4,"iterMagic._IteratorRange.IteratorRange_Impl_.startLength","iterMagic/IteratorRange.hx",21,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_23__new,"iterMagic._IteratorRange.IteratorRange_Impl_","_new",0x79bfb625,"iterMagic._IteratorRange.IteratorRange_Impl_._new","iterMagic/IteratorRange.hx",23,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_30_fromIterator,"iterMagic._IteratorRange.IteratorRange_Impl_","fromIterator",0x70c62a3c,"iterMagic._IteratorRange.IteratorRange_Impl_.fromIterator","iterMagic/IteratorRange.hx",30,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_34_toIterStart,"iterMagic._IteratorRange.IteratorRange_Impl_","toIterStart",0x95f7daeb,"iterMagic._IteratorRange.IteratorRange_Impl_.toIterStart","iterMagic/IteratorRange.hx",34,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_37_iterator,"iterMagic._IteratorRange.IteratorRange_Impl_","iterator",0x95949cb2,"iterMagic._IteratorRange.IteratorRange_Impl_.iterator","iterMagic/IteratorRange.hx",37,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_41_adding,"iterMagic._IteratorRange.IteratorRange_Impl_","adding",0x3bb6bf25,"iterMagic._IteratorRange.IteratorRange_Impl_.adding","iterMagic/IteratorRange.hx",41,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_44_add,"iterMagic._IteratorRange.IteratorRange_Impl_","add",0x2e7895dd,"iterMagic._IteratorRange.IteratorRange_Impl_.add","iterMagic/IteratorRange.hx",44,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_53_get_length,"iterMagic._IteratorRange.IteratorRange_Impl_","get_length",0xc2d69073,"iterMagic._IteratorRange.IteratorRange_Impl_.get_length","iterMagic/IteratorRange.hx",53,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_56_set_length,"iterMagic._IteratorRange.IteratorRange_Impl_","set_length",0xc6542ee7,"iterMagic._IteratorRange.IteratorRange_Impl_.set_length","iterMagic/IteratorRange.hx",56,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_62_contains,"iterMagic._IteratorRange.IteratorRange_Impl_","contains",0x2e75ace3,"iterMagic._IteratorRange.IteratorRange_Impl_.contains","iterMagic/IteratorRange.hx",62,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_66_containsF,"iterMagic._IteratorRange.IteratorRange_Impl_","containsF",0x78819a03,"iterMagic._IteratorRange.IteratorRange_Impl_.containsF","iterMagic/IteratorRange.hx",66,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_70_isWithin,"iterMagic._IteratorRange.IteratorRange_Impl_","isWithin",0xb0eacdb9,"iterMagic._IteratorRange.IteratorRange_Impl_.isWithin","iterMagic/IteratorRange.hx",70,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_73_moveRange,"iterMagic._IteratorRange.IteratorRange_Impl_","moveRange",0x5af48da8,"iterMagic._IteratorRange.IteratorRange_Impl_.moveRange","iterMagic/IteratorRange.hx",73,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_79_addAssign,"iterMagic._IteratorRange.IteratorRange_Impl_","addAssign",0xbd3893ec,"iterMagic._IteratorRange.IteratorRange_Impl_.addAssign","iterMagic/IteratorRange.hx",79,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_86_minusAssign,"iterMagic._IteratorRange.IteratorRange_Impl_","minusAssign",0x5f19ee7b,"iterMagic._IteratorRange.IteratorRange_Impl_.minusAssign","iterMagic/IteratorRange.hx",86,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_89_ifContainMove,"iterMagic._IteratorRange.IteratorRange_Impl_","ifContainMove",0xf307eee4,"iterMagic._IteratorRange.IteratorRange_Impl_.ifContainMove","iterMagic/IteratorRange.hx",89,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_97_toString,"iterMagic._IteratorRange.IteratorRange_Impl_","toString",0x3a692370,"iterMagic._IteratorRange.IteratorRange_Impl_.toString","iterMagic/IteratorRange.hx",97,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_99_map,"iterMagic._IteratorRange.IteratorRange_Impl_","map",0x2e81ae58,"iterMagic._IteratorRange.IteratorRange_Impl_.map","iterMagic/IteratorRange.hx",99,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_111_filter,"iterMagic._IteratorRange.IteratorRange_Impl_","filter",0x21d2797c,"iterMagic._IteratorRange.IteratorRange_Impl_.filter","iterMagic/IteratorRange.hx",111,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_122_find,"iterMagic._IteratorRange.IteratorRange_Impl_","find",0x7e5c70fd,"iterMagic._IteratorRange.IteratorRange_Impl_.find","iterMagic/IteratorRange.hx",122,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_137_remapArray,"iterMagic._IteratorRange.IteratorRange_Impl_","remapArray",0xaa8137d4,"iterMagic._IteratorRange.IteratorRange_Impl_.remapArray","iterMagic/IteratorRange.hx",137,0x1b2e96e9)
HX_LOCAL_STACK_FRAME(_hx_pos_2044886ca9bd259d_142_mapArray,"iterMagic._IteratorRange.IteratorRange_Impl_","mapArray",0x9ecc3021,"iterMagic._IteratorRange.IteratorRange_Impl_.mapArray","iterMagic/IteratorRange.hx",142,0x1b2e96e9)
namespace iterMagic{
namespace _IteratorRange{

void IteratorRange_Impl__obj::__construct() { }

Dynamic IteratorRange_Impl__obj::__CreateEmpty() { return new IteratorRange_Impl__obj; }

void *IteratorRange_Impl__obj::_hx_vtable = 0;

Dynamic IteratorRange_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IteratorRange_Impl__obj > _hx_result = new IteratorRange_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool IteratorRange_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x554bb3ca;
}

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::startLength(int min,int len){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_21_startLength)
HXDLIN(  21)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,min,((min + len) - 1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,startLength,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::_new(int min,int max){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_23__new)
HXDLIN(  23)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,min,max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,_new,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::fromIterator( ::IntIterator ii){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_30_fromIterator)
HXDLIN(  30)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,ii->min,ii->max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IteratorRange_Impl__obj,fromIterator,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::toIterStart( ::iterMagic::IntIterStart this1){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_34_toIterStart)
HXDLIN(  34)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,this1->start,this1->max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IteratorRange_Impl__obj,toIterStart,return )

 ::IntIterator IteratorRange_Impl__obj::iterator( ::iterMagic::IntIterStart this1){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_37_iterator)
HXDLIN(  37)		return  ::IntIterator_obj::__alloc( HX_CTX ,this1->start,this1->max);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IteratorRange_Impl__obj,iterator,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::adding( ::iterMagic::IntIterStart a, ::iterMagic::IntIterStart b){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_41_adding)
HXDLIN(  41)		int begin = ::Std_obj::_hx_int(::Math_obj::min(( (Float)(a->start) ),( (Float)(b->max) )));
HXDLIN(  41)		int end;
HXDLIN(  41)		if ((begin == a->start)) {
HXDLIN(  41)			end = b->max;
            		}
            		else {
HXDLIN(  41)			end = a->max;
            		}
HXDLIN(  41)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,begin,end);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,adding,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::add( ::iterMagic::IntIterStart this1, ::iterMagic::IntIterStart b){
            	HX_GC_STACKFRAME(&_hx_pos_2044886ca9bd259d_44_add)
HXLINE(  45)		int begin = ::Std_obj::_hx_int(::Math_obj::min(( (Float)(this1->start) ),( (Float)(b->max) )));
HXLINE(  46)		int end;
HXDLIN(  46)		if ((begin == this1->start)) {
HXLINE(  46)			end = b->max;
            		}
            		else {
HXLINE(  46)			end = this1->max;
            		}
HXLINE(  47)		return  ::iterMagic::IntIterStart_obj::__alloc( HX_CTX ,begin,end);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,add,return )

int IteratorRange_Impl__obj::get_length( ::iterMagic::IntIterStart this1){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_53_get_length)
HXDLIN(  53)		return (this1->max - this1->start);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IteratorRange_Impl__obj,get_length,return )

int IteratorRange_Impl__obj::set_length( ::iterMagic::IntIterStart this1,int l){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_56_set_length)
HXLINE(  57)		this1->max = (l + this1->start);
HXLINE(  58)		return l;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,set_length,return )

bool IteratorRange_Impl__obj::contains( ::iterMagic::IntIterStart this1,int v){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_62_contains)
HXDLIN(  62)		if ((v > (this1->start - 1))) {
HXDLIN(  62)			return (v < (this1->max + 1));
            		}
            		else {
HXDLIN(  62)			return false;
            		}
HXDLIN(  62)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,contains,return )

bool IteratorRange_Impl__obj::containsF( ::iterMagic::IntIterStart this1,Float v){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_66_containsF)
HXDLIN(  66)		if ((v > (this1->start - 1))) {
HXDLIN(  66)			return (v < (this1->max + 1));
            		}
            		else {
HXDLIN(  66)			return false;
            		}
HXDLIN(  66)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,containsF,return )

bool IteratorRange_Impl__obj::isWithin( ::iterMagic::IntIterStart this1, ::iterMagic::IntIterStart ir){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_70_isWithin)
HXDLIN(  70)		int v = ir->start;
HXDLIN(  70)		bool _hx_tmp;
HXDLIN(  70)		if ((v > (this1->start - 1))) {
HXDLIN(  70)			_hx_tmp = (v < (this1->max + 1));
            		}
            		else {
HXDLIN(  70)			_hx_tmp = false;
            		}
HXDLIN(  70)		if (_hx_tmp) {
HXDLIN(  70)			int v1 = ir->max;
HXDLIN(  70)			if ((v1 > (this1->start - 1))) {
HXDLIN(  70)				return (v1 < (this1->max + 1));
            			}
            			else {
HXDLIN(  70)				return false;
            			}
            		}
            		else {
HXDLIN(  70)			return false;
            		}
HXDLIN(  70)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,isWithin,return )

void IteratorRange_Impl__obj::moveRange( ::iterMagic::IntIterStart this1,int v){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_73_moveRange)
HXLINE(  74)		 ::iterMagic::IntIterStart this2 = this1;
HXDLIN(  74)		this2->start = (this2->start + v);
HXLINE(  75)		 ::iterMagic::IntIterStart this3 = this1;
HXDLIN(  75)		this3->max = (this3->max + v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,moveRange,(void))

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::addAssign( ::iterMagic::IntIterStart a,int v){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_79_addAssign)
HXLINE(  80)		{
HXLINE(  80)			 ::iterMagic::IntIterStart a1 = a;
HXDLIN(  80)			a1->start = (a1->start + v);
HXDLIN(  80)			 ::iterMagic::IntIterStart a2 = a;
HXDLIN(  80)			a2->max = (a2->max + v);
            		}
HXLINE(  81)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,addAssign,return )

 ::iterMagic::IntIterStart IteratorRange_Impl__obj::minusAssign( ::iterMagic::IntIterStart a,int v){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_86_minusAssign)
HXDLIN(  86)		int v1 = -(v);
HXDLIN(  86)		{
HXDLIN(  86)			 ::iterMagic::IntIterStart a1 = a;
HXDLIN(  86)			a1->start = (a1->start + v1);
HXDLIN(  86)			 ::iterMagic::IntIterStart a2 = a;
HXDLIN(  86)			a2->max = (a2->max + v1);
            		}
HXDLIN(  86)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IteratorRange_Impl__obj,minusAssign,return )

bool IteratorRange_Impl__obj::ifContainMove( ::iterMagic::IntIterStart this1,int v,int amount){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_89_ifContainMove)
HXLINE(  90)		bool ifHas;
HXDLIN(  90)		if ((v > (this1->start - 1))) {
HXLINE(  90)			ifHas = (v < (this1->max + 1));
            		}
            		else {
HXLINE(  90)			ifHas = false;
            		}
HXLINE(  91)		if (ifHas) {
HXLINE(  91)			 ::iterMagic::IntIterStart this2 = this1;
HXDLIN(  91)			this2->start = (this2->start + amount);
HXDLIN(  91)			 ::iterMagic::IntIterStart this3 = this1;
HXDLIN(  91)			this3->max = (this3->max + amount);
            		}
HXLINE(  92)		return ifHas;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,ifContainMove,return )

::String IteratorRange_Impl__obj::toString( ::iterMagic::IntIterStart this1){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_97_toString)
HXDLIN(  97)		::String _hx_tmp = (::Std_obj::string(this1->start) + HX_("...",ee,0f,23,00));
HXDLIN(  97)		return (_hx_tmp + ::Std_obj::string(this1->max));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IteratorRange_Impl__obj,toString,return )

::cpp::VirtualArray IteratorRange_Impl__obj::map( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_99_map)
HXLINE( 100)		int count = 0;
HXLINE( 101)		::cpp::VirtualArray arr = ::cpp::VirtualArray_obj::__new();
HXLINE( 102)		{
HXLINE( 102)			 ::Dynamic i = it->__Field(HX_("iterator",ee,49,9a,93),::hx::paccDynamic)();
HXDLIN( 102)			while(( (bool)(i->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 102)				 ::Dynamic i1 = i->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXLINE( 103)				if ((count >= this1->start)) {
HXLINE( 103)					arr->push(f(i1));
            				}
HXLINE( 104)				if ((count == this1->max)) {
HXLINE( 104)					goto _hx_goto_17;
            				}
HXLINE( 105)				count = (count + 1);
            			}
            			_hx_goto_17:;
            		}
HXLINE( 107)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,map,return )

::cpp::VirtualArray IteratorRange_Impl__obj::filter( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_111_filter)
HXLINE( 112)		int count = 0;
HXLINE( 113)		::cpp::VirtualArray arr = ::cpp::VirtualArray_obj::__new();
HXLINE( 114)		{
HXLINE( 114)			 ::Dynamic i = it->__Field(HX_("iterator",ee,49,9a,93),::hx::paccDynamic)();
HXDLIN( 114)			while(( (bool)(i->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 114)				 ::Dynamic i1 = i->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXLINE( 115)				if ((count >= this1->start)) {
HXLINE( 115)					if (( (bool)(f(i1)) )) {
HXLINE( 115)						arr->push(i1);
            					}
            				}
HXLINE( 116)				if ((count == this1->max)) {
HXLINE( 116)					goto _hx_goto_19;
            				}
HXLINE( 117)				count = (count + 1);
            			}
            			_hx_goto_19:;
            		}
HXLINE( 119)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,filter,return )

 ::Dynamic IteratorRange_Impl__obj::find( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_122_find)
HXLINE( 123)		int count = 0;
HXLINE( 124)		 ::Dynamic v = null();
HXLINE( 125)		{
HXLINE( 125)			 ::Dynamic i = it->__Field(HX_("iterator",ee,49,9a,93),::hx::paccDynamic)();
HXDLIN( 125)			while(( (bool)(i->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 125)				 ::Dynamic i1 = i->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXLINE( 126)				if ((count >= this1->start)) {
HXLINE( 127)					if (( (bool)(f(i1)) )) {
HXLINE( 128)						v = i1;
HXLINE( 129)						goto _hx_goto_21;
            					}
            				}
HXLINE( 131)				if ((count == this1->max)) {
HXLINE( 131)					goto _hx_goto_21;
            				}
HXLINE( 132)				count = (count + 1);
            			}
            			_hx_goto_21:;
            		}
HXLINE( 134)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,find,return )

::cpp::VirtualArray IteratorRange_Impl__obj::remapArray( ::iterMagic::IntIterStart this1,::cpp::VirtualArray arr, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_137_remapArray)
HXLINE( 138)		{
HXLINE( 138)			int _g = this1->start;
HXDLIN( 138)			int _g1 = this1->max;
HXDLIN( 138)			while((_g < _g1)){
HXLINE( 138)				_g = (_g + 1);
HXDLIN( 138)				int i = (_g - 1);
HXDLIN( 138)				arr->set(i,f(arr->__get(i)));
            			}
            		}
HXLINE( 139)		return arr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,remapArray,return )

::cpp::VirtualArray IteratorRange_Impl__obj::mapArray( ::iterMagic::IntIterStart this1,::cpp::VirtualArray arr, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_2044886ca9bd259d_142_mapArray)
HXLINE( 143)		::cpp::VirtualArray arr2 = ::cpp::VirtualArray_obj::__new();
HXLINE( 144)		int count = 0;
HXLINE( 145)		{
HXLINE( 145)			int _g = this1->start;
HXDLIN( 145)			int _g1 = this1->max;
HXDLIN( 145)			while((_g < _g1)){
HXLINE( 145)				_g = (_g + 1);
HXDLIN( 145)				int i = (_g - 1);
HXLINE( 146)				arr2->set(count,f(arr->__get(i)));
HXLINE( 147)				count = (count + 1);
            			}
            		}
HXLINE( 149)		return arr2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(IteratorRange_Impl__obj,mapArray,return )


IteratorRange_Impl__obj::IteratorRange_Impl__obj()
{
}

bool IteratorRange_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"find") ) { outValue = find_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"adding") ) { outValue = adding_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"filter") ) { outValue = filter_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"contains") ) { outValue = contains_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isWithin") ) { outValue = isWithin_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mapArray") ) { outValue = mapArray_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"containsF") ) { outValue = containsF_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveRange") ) { outValue = moveRange_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addAssign") ) { outValue = addAssign_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_length") ) { outValue = set_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remapArray") ) { outValue = remapArray_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"startLength") ) { outValue = startLength_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toIterStart") ) { outValue = toIterStart_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"minusAssign") ) { outValue = minusAssign_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"fromIterator") ) { outValue = fromIterator_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ifContainMove") ) { outValue = ifContainMove_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *IteratorRange_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *IteratorRange_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class IteratorRange_Impl__obj::__mClass;

static ::String IteratorRange_Impl__obj_sStaticFields[] = {
	HX_("startLength",e8,f2,ed,16),
	HX_("_new",61,15,1f,3f),
	HX_("fromIterator",78,25,b1,33),
	HX_("toIterStart",2f,1b,a5,ea),
	HX_("iterator",ee,49,9a,93),
	HX_("adding",61,65,19,9f),
	HX_("add",21,f2,49,00),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	HX_("contains",1f,5a,7b,2c),
	HX_("containsF",47,81,73,bf),
	HX_("isWithin",f5,7a,f0,ae),
	HX_("moveRange",ec,74,e6,a1),
	HX_("addAssign",30,7b,2a,04),
	HX_("minusAssign",bf,2e,c7,b3),
	HX_("ifContainMove",28,c8,b8,bd),
	HX_("toString",ac,d0,6e,38),
	HX_("map",9c,0a,53,00),
	HX_("filter",b8,1f,35,85),
	HX_("find",39,d0,bb,43),
	HX_("remapArray",10,ac,39,77),
	HX_("mapArray",5d,dd,d1,9c),
	::String(null())
};

void IteratorRange_Impl__obj::__register()
{
	IteratorRange_Impl__obj _hx_dummy;
	IteratorRange_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("iterMagic._IteratorRange.IteratorRange_Impl_",2a,76,ff,ac);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IteratorRange_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(IteratorRange_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< IteratorRange_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IteratorRange_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IteratorRange_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iterMagic
} // end namespace _IteratorRange
