// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_AlphaMode
#define INCLUDED_nme_AlphaMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(nme,AlphaMode)
namespace nme{


class AlphaMode_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef AlphaMode_obj OBJ_;

	public:
		AlphaMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.AlphaMode",99,02,87,e0); }
		::String __ToString() const { return HX_("AlphaMode.",4d,7b,ae,23) + _hx_tag; }

		static ::nme::AlphaMode AlphaDefault;
		static inline ::nme::AlphaMode AlphaDefault_dyn() { return AlphaDefault; }
		static ::nme::AlphaMode AlphaIsPremultiplied;
		static inline ::nme::AlphaMode AlphaIsPremultiplied_dyn() { return AlphaIsPremultiplied; }
		static ::nme::AlphaMode AlphaPostprocess;
		static inline ::nme::AlphaMode AlphaPostprocess_dyn() { return AlphaPostprocess; }
		static ::nme::AlphaMode AlphaPreprocess;
		static inline ::nme::AlphaMode AlphaPreprocess_dyn() { return AlphaPreprocess; }
		static ::nme::AlphaMode AlphaUnmultiplied;
		static inline ::nme::AlphaMode AlphaUnmultiplied_dyn() { return AlphaUnmultiplied; }
};

} // end namespace nme

#endif /* INCLUDED_nme_AlphaMode */ 
