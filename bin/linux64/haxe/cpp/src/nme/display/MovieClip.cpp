// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObjectContainer
#include <nme/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_nme_display_FrameLabel
#include <nme/display/FrameLabel.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_display_MovieClip
#include <nme/display/MovieClip.h>
#endif
#ifndef INCLUDED_nme_display_Sprite
#include <nme/display/Sprite.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5eb564658b96943a_34_new,"nme.display.MovieClip","new",0xfbb1f11e,"nme.display.MovieClip.new","nme/display/MovieClip.hx",34,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_21_get___currentFrame,"nme.display.MovieClip","get___currentFrame",0x632e261f,"nme.display.MovieClip.get___currentFrame","nme/display/MovieClip.hx",21,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_22_set___currentFrame,"nme.display.MovieClip","set___currentFrame",0x3fdd5893,"nme.display.MovieClip.set___currentFrame","nme/display/MovieClip.hx",22,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_24_get___totalFrames,"nme.display.MovieClip","get___totalFrames",0xac3a9fff,"nme.display.MovieClip.get___totalFrames","nme/display/MovieClip.hx",24,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_25_set___totalFrames,"nme.display.MovieClip","set___totalFrames",0xcfa8780b,"nme.display.MovieClip.set___totalFrames","nme/display/MovieClip.hx",25,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_44_gotoAndPlay,"nme.display.MovieClip","gotoAndPlay",0x352e73c6,"nme.display.MovieClip.gotoAndPlay","nme/display/MovieClip.hx",44,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_48_gotoAndStop,"nme.display.MovieClip","gotoAndStop",0x373035d4,"nme.display.MovieClip.gotoAndStop","nme/display/MovieClip.hx",48,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_52_nextFrame,"nme.display.MovieClip","nextFrame",0x0f6cd578,"nme.display.MovieClip.nextFrame","nme/display/MovieClip.hx",52,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_56_nmeGetType,"nme.display.MovieClip","nmeGetType",0xfca39acc,"nme.display.MovieClip.nmeGetType","nme/display/MovieClip.hx",56,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_60_play,"nme.display.MovieClip","play",0x4158b376,"nme.display.MovieClip.play","nme/display/MovieClip.hx",60,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_64_prevFrame,"nme.display.MovieClip","prevFrame",0x537e5b78,"nme.display.MovieClip.prevFrame","nme/display/MovieClip.hx",64,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_68_stop,"nme.display.MovieClip","stop",0x435a7584,"nme.display.MovieClip.stop","nme/display/MovieClip.hx",68,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_72_get_currentFrame,"nme.display.MovieClip","get_currentFrame",0x3b200a3f,"nme.display.MovieClip.get_currentFrame","nme/display/MovieClip.hx",72,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_73_get_framesLoaded,"nme.display.MovieClip","get_framesLoaded",0xfbf25956,"nme.display.MovieClip.get_framesLoaded","nme/display/MovieClip.hx",73,0xc5770014)
HX_LOCAL_STACK_FRAME(_hx_pos_5eb564658b96943a_74_get_totalFrames,"nme.display.MovieClip","get_totalFrames",0x98889fdf,"nme.display.MovieClip.get_totalFrames","nme/display/MovieClip.hx",74,0xc5770014)
namespace nme{
namespace display{

void MovieClip_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_34_new)
HXLINE(  35)		super::__construct();
HXLINE(  37)		this->mCurrentFrame = 0;
HXLINE(  38)		this->mTotalFrames = 0;
HXLINE(  39)		this->_hx___currentLabels = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  40)		this->enabled = true;
            	}

Dynamic MovieClip_obj::__CreateEmpty() { return new MovieClip_obj; }

void *MovieClip_obj::_hx_vtable = 0;

Dynamic MovieClip_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MovieClip_obj > _hx_result = new MovieClip_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MovieClip_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x169017a6) {
		if (inClassId<=(int)0x0ff07575) {
			if (inClassId<=(int)0x048b25c1) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x048b25c1;
			} else {
				return inClassId==(int)0x0ff07575;
			}
		} else {
			return inClassId==(int)0x169017a6;
		}
	} else {
		if (inClassId<=(int)0x5a2ce121) {
			return inClassId==(int)0x4c4ee220 || inClassId==(int)0x5a2ce121;
		} else {
			return inClassId==(int)0x5e732244;
		}
	}
}

int MovieClip_obj::get___currentFrame(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_21_get___currentFrame)
HXDLIN(  21)		return this->mCurrentFrame;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,get___currentFrame,return )

int MovieClip_obj::set___currentFrame(int f){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_22_set___currentFrame)
HXDLIN(  22)		return (this->mCurrentFrame = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MovieClip_obj,set___currentFrame,return )

int MovieClip_obj::get___totalFrames(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_24_get___totalFrames)
HXDLIN(  24)		return this->mTotalFrames;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,get___totalFrames,return )

int MovieClip_obj::set___totalFrames(int f){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_25_set___totalFrames)
HXDLIN(  25)		return (this->mTotalFrames = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MovieClip_obj,set___totalFrames,return )

void MovieClip_obj::gotoAndPlay( ::Dynamic frame,::String scene){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_44_gotoAndPlay)
            	}


HX_DEFINE_DYNAMIC_FUNC2(MovieClip_obj,gotoAndPlay,(void))

void MovieClip_obj::gotoAndStop( ::Dynamic frame,::String scene){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_48_gotoAndStop)
            	}


HX_DEFINE_DYNAMIC_FUNC2(MovieClip_obj,gotoAndStop,(void))

void MovieClip_obj::nextFrame(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_52_nextFrame)
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,nextFrame,(void))

::String MovieClip_obj::nmeGetType(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_56_nmeGetType)
HXDLIN(  56)		return HX_("MovieClip",80,e2,ed,b9);
            	}


void MovieClip_obj::play(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_60_play)
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,play,(void))

void MovieClip_obj::prevFrame(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_64_prevFrame)
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,prevFrame,(void))

void MovieClip_obj::stop(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_68_stop)
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,stop,(void))

int MovieClip_obj::get_currentFrame(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_72_get_currentFrame)
HXDLIN(  72)		return this->mCurrentFrame;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,get_currentFrame,return )

int MovieClip_obj::get_framesLoaded(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_73_get_framesLoaded)
HXDLIN(  73)		return this->mTotalFrames;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,get_framesLoaded,return )

int MovieClip_obj::get_totalFrames(){
            	HX_STACKFRAME(&_hx_pos_5eb564658b96943a_74_get_totalFrames)
HXDLIN(  74)		return this->mTotalFrames;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MovieClip_obj,get_totalFrames,return )


::hx::ObjectPtr< MovieClip_obj > MovieClip_obj::__new() {
	::hx::ObjectPtr< MovieClip_obj > __this = new MovieClip_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MovieClip_obj > MovieClip_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MovieClip_obj *__this = (MovieClip_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MovieClip_obj), true, "nme.display.MovieClip"));
	*(void **)__this = MovieClip_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MovieClip_obj::MovieClip_obj()
{
}

void MovieClip_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MovieClip);
	HX_MARK_MEMBER_NAME(currentFrame,"currentFrame");
	HX_MARK_MEMBER_NAME(enabled,"enabled");
	HX_MARK_MEMBER_NAME(framesLoaded,"framesLoaded");
	HX_MARK_MEMBER_NAME(totalFrames,"totalFrames");
	HX_MARK_MEMBER_NAME(mCurrentFrame,"mCurrentFrame");
	HX_MARK_MEMBER_NAME(mTotalFrames,"mTotalFrames");
	HX_MARK_MEMBER_NAME(_hx___frameScripts,"__frameScripts");
	HX_MARK_MEMBER_NAME(_hx___currentLabels,"__currentLabels");
	HX_MARK_MEMBER_NAME(_hx___currentFrameLabel,"__currentFrameLabel");
	HX_MARK_MEMBER_NAME(_hx___currentLabel,"__currentLabel");
	 ::nme::display::DisplayObjectContainer_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MovieClip_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(currentFrame,"currentFrame");
	HX_VISIT_MEMBER_NAME(enabled,"enabled");
	HX_VISIT_MEMBER_NAME(framesLoaded,"framesLoaded");
	HX_VISIT_MEMBER_NAME(totalFrames,"totalFrames");
	HX_VISIT_MEMBER_NAME(mCurrentFrame,"mCurrentFrame");
	HX_VISIT_MEMBER_NAME(mTotalFrames,"mTotalFrames");
	HX_VISIT_MEMBER_NAME(_hx___frameScripts,"__frameScripts");
	HX_VISIT_MEMBER_NAME(_hx___currentLabels,"__currentLabels");
	HX_VISIT_MEMBER_NAME(_hx___currentFrameLabel,"__currentFrameLabel");
	HX_VISIT_MEMBER_NAME(_hx___currentLabel,"__currentLabel");
	 ::nme::display::DisplayObjectContainer_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val MovieClip_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"play") ) { return ::hx::Val( play_dyn() ); }
		if (HX_FIELD_EQ(inName,"stop") ) { return ::hx::Val( stop_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"enabled") ) { return ::hx::Val( enabled ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nextFrame") ) { return ::hx::Val( nextFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"prevFrame") ) { return ::hx::Val( prevFrame_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"nmeGetType") ) { return ::hx::Val( nmeGetType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalFrames") ) { return ::hx::Val( inCallProp != ::hx::paccNever ? get_totalFrames() : totalFrames ); }
		if (HX_FIELD_EQ(inName,"gotoAndPlay") ) { return ::hx::Val( gotoAndPlay_dyn() ); }
		if (HX_FIELD_EQ(inName,"gotoAndStop") ) { return ::hx::Val( gotoAndStop_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentFrame") ) { return ::hx::Val( inCallProp != ::hx::paccNever ? get_currentFrame() : currentFrame ); }
		if (HX_FIELD_EQ(inName,"framesLoaded") ) { return ::hx::Val( inCallProp != ::hx::paccNever ? get_framesLoaded() : framesLoaded ); }
		if (HX_FIELD_EQ(inName,"mTotalFrames") ) { return ::hx::Val( mTotalFrames ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mCurrentFrame") ) { return ::hx::Val( mCurrentFrame ); }
		if (HX_FIELD_EQ(inName,"__totalFrames") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( get___totalFrames() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"__currentFrame") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( get___currentFrame() ); }
		if (HX_FIELD_EQ(inName,"__frameScripts") ) { return ::hx::Val( _hx___frameScripts ); }
		if (HX_FIELD_EQ(inName,"__currentLabel") ) { return ::hx::Val( _hx___currentLabel ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__currentLabels") ) { return ::hx::Val( _hx___currentLabels ); }
		if (HX_FIELD_EQ(inName,"get_totalFrames") ) { return ::hx::Val( get_totalFrames_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_currentFrame") ) { return ::hx::Val( get_currentFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_framesLoaded") ) { return ::hx::Val( get_framesLoaded_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get___totalFrames") ) { return ::hx::Val( get___totalFrames_dyn() ); }
		if (HX_FIELD_EQ(inName,"set___totalFrames") ) { return ::hx::Val( set___totalFrames_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get___currentFrame") ) { return ::hx::Val( get___currentFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"set___currentFrame") ) { return ::hx::Val( set___currentFrame_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"__currentFrameLabel") ) { return ::hx::Val( _hx___currentFrameLabel ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val MovieClip_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"enabled") ) { enabled=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalFrames") ) { totalFrames=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentFrame") ) { currentFrame=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"framesLoaded") ) { framesLoaded=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mTotalFrames") ) { mTotalFrames=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"mCurrentFrame") ) { mCurrentFrame=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__totalFrames") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( set___totalFrames(inValue.Cast< int >()) ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"__currentFrame") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( set___currentFrame(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"__frameScripts") ) { _hx___frameScripts=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__currentLabel") ) { _hx___currentLabel=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"__currentLabels") ) { _hx___currentLabels=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"__currentFrameLabel") ) { _hx___currentFrameLabel=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MovieClip_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("currentFrame",34,5d,8f,4d));
	outFields->push(HX_("enabled",81,04,31,7e));
	outFields->push(HX_("framesLoaded",4b,ac,61,0e));
	outFields->push(HX_("totalFrames",8a,a2,bb,72));
	outFields->push(HX_("mCurrentFrame",41,19,97,c8));
	outFields->push(HX_("mTotalFrames",1d,e7,6f,55));
	outFields->push(HX_("__currentFrame",54,e0,4f,6e));
	outFields->push(HX_("__totalFrames",6a,e3,33,bb));
	outFields->push(HX_("__frameScripts",7b,3e,2f,ee));
	outFields->push(HX_("__currentLabels",f8,e1,8b,b4));
	outFields->push(HX_("__currentFrameLabel",00,ed,fa,dc));
	outFields->push(HX_("__currentLabel",1b,76,7b,d7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MovieClip_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(MovieClip_obj,currentFrame),HX_("currentFrame",34,5d,8f,4d)},
	{::hx::fsBool,(int)offsetof(MovieClip_obj,enabled),HX_("enabled",81,04,31,7e)},
	{::hx::fsInt,(int)offsetof(MovieClip_obj,framesLoaded),HX_("framesLoaded",4b,ac,61,0e)},
	{::hx::fsInt,(int)offsetof(MovieClip_obj,totalFrames),HX_("totalFrames",8a,a2,bb,72)},
	{::hx::fsInt,(int)offsetof(MovieClip_obj,mCurrentFrame),HX_("mCurrentFrame",41,19,97,c8)},
	{::hx::fsInt,(int)offsetof(MovieClip_obj,mTotalFrames),HX_("mTotalFrames",1d,e7,6f,55)},
	{::hx::fsObject /*  ::haxe::ds::IntMap */ ,(int)offsetof(MovieClip_obj,_hx___frameScripts),HX_("__frameScripts",7b,3e,2f,ee)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(MovieClip_obj,_hx___currentLabels),HX_("__currentLabels",f8,e1,8b,b4)},
	{::hx::fsString,(int)offsetof(MovieClip_obj,_hx___currentFrameLabel),HX_("__currentFrameLabel",00,ed,fa,dc)},
	{::hx::fsString,(int)offsetof(MovieClip_obj,_hx___currentLabel),HX_("__currentLabel",1b,76,7b,d7)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MovieClip_obj_sStaticStorageInfo = 0;
#endif

static ::String MovieClip_obj_sMemberFields[] = {
	HX_("currentFrame",34,5d,8f,4d),
	HX_("enabled",81,04,31,7e),
	HX_("framesLoaded",4b,ac,61,0e),
	HX_("totalFrames",8a,a2,bb,72),
	HX_("mCurrentFrame",41,19,97,c8),
	HX_("mTotalFrames",1d,e7,6f,55),
	HX_("get___currentFrame",1d,c1,e9,09),
	HX_("set___currentFrame",91,f3,98,e6),
	HX_("get___totalFrames",c1,ee,a3,c1),
	HX_("set___totalFrames",cd,c6,11,e5),
	HX_("__frameScripts",7b,3e,2f,ee),
	HX_("__currentLabels",f8,e1,8b,b4),
	HX_("__currentFrameLabel",00,ed,fa,dc),
	HX_("__currentLabel",1b,76,7b,d7),
	HX_("gotoAndPlay",08,65,84,ef),
	HX_("gotoAndStop",16,27,86,f1),
	HX_("nextFrame",3a,92,c8,ad),
	HX_("nmeGetType",ca,07,8d,ee),
	HX_("play",f4,2d,5a,4a),
	HX_("prevFrame",3a,18,da,f1),
	HX_("stop",02,f0,5b,4c),
	HX_("get_currentFrame",bd,49,2e,52),
	HX_("get_framesLoaded",d4,98,00,13),
	HX_("get_totalFrames",21,5a,9d,33),
	::String(null()) };

::hx::Class MovieClip_obj::__mClass;

void MovieClip_obj::__register()
{
	MovieClip_obj _hx_dummy;
	MovieClip_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.display.MovieClip",2c,ca,a7,b6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MovieClip_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MovieClip_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MovieClip_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MovieClip_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace display
