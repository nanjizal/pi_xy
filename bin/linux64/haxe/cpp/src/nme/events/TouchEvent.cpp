// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_140af2720004096a
#define INCLUDED_140af2720004096a
#include "nme/Event.h"
#endif
#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_events_Event
#include <nme/events/Event.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_MouseEvent
#include <nme/events/MouseEvent.h>
#endif
#ifndef INCLUDED_nme_events_TouchEvent
#include <nme/events/TouchEvent.h>
#endif
#ifndef INCLUDED_nme_geom_Point
#include <nme/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e4c411b986101dbf_27_new,"nme.events.TouchEvent","new",0xfc6c0cfa,"nme.events.TouchEvent.new","nme/events/TouchEvent.hx",27,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_47_nmeCreateSimilar,"nme.events.TouchEvent","nmeCreateSimilar",0xc7244e8f,"nme.events.TouchEvent.nmeCreateSimilar","nme/events/TouchEvent.hx",47,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_37_nmeCreate,"nme.events.TouchEvent","nmeCreate",0x40a816fc,"nme.events.TouchEvent.nmeCreate","nme/events/TouchEvent.hx",37,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_11_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",11,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_12_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",12,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_13_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",13,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_14_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",14,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_15_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",15,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_16_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",16,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_17_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",17,0xc9dae996)
HX_LOCAL_STACK_FRAME(_hx_pos_e4c411b986101dbf_18_boot,"nme.events.TouchEvent","boot",0xda384e58,"nme.events.TouchEvent.boot","nme/events/TouchEvent.hx",18,0xc9dae996)
namespace nme{
namespace events{

void TouchEvent_obj::__construct(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< Float >  __o_in_localX,::hx::Null< Float >  __o_in_localY,::hx::Null< Float >  __o_in_sizeX,::hx::Null< Float >  __o_in_sizeY, ::nme::display::InteractiveObject in_relatedObject,::hx::Null< bool >  __o_in_ctrlKey,::hx::Null< bool >  __o_in_altKey,::hx::Null< bool >  __o_in_shiftKey,::hx::Null< bool >  __o_in_buttonDown,::hx::Null< int >  __o_in_delta,::hx::Null< bool >  __o_in_commandKey,::hx::Null< int >  __o_in_clickCount){
            		bool bubbles = __o_bubbles.Default(true);
            		bool cancelable = __o_cancelable.Default(false);
            		Float in_localX = __o_in_localX.Default(0);
            		Float in_localY = __o_in_localY.Default(0);
            		Float in_sizeX = __o_in_sizeX.Default(1);
            		Float in_sizeY = __o_in_sizeY.Default(1);
            		bool in_ctrlKey = __o_in_ctrlKey.Default(false);
            		bool in_altKey = __o_in_altKey.Default(false);
            		bool in_shiftKey = __o_in_shiftKey.Default(false);
            		bool in_buttonDown = __o_in_buttonDown.Default(false);
            		int in_delta = __o_in_delta.Default(0);
            		bool in_commandKey = __o_in_commandKey.Default(false);
            		int in_clickCount = __o_in_clickCount.Default(0);
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_27_new)
HXLINE(  28)		super::__construct(type,bubbles,cancelable,in_localX,in_localY,in_relatedObject,in_ctrlKey,in_altKey,in_shiftKey,in_buttonDown,in_delta,in_commandKey,in_clickCount);
HXLINE(  30)		this->touchPointID = 0;
HXLINE(  31)		this->isPrimaryTouchPoint = true;
HXLINE(  32)		this->sizeX = in_sizeX;
HXLINE(  33)		this->sizeY = in_sizeY;
            	}

Dynamic TouchEvent_obj::__CreateEmpty() { return new TouchEvent_obj; }

void *TouchEvent_obj::_hx_vtable = 0;

Dynamic TouchEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TouchEvent_obj > _hx_result = new TouchEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12],inArgs[13],inArgs[14]);
	return _hx_result;
}

bool TouchEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x113d0d1f) {
		if (inClassId<=(int)0x04c82490) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x04c82490;
		} else {
			return inClassId==(int)0x113d0d1f;
		}
	} else {
		return inClassId==(int)0x6eb4499a;
	}
}

 ::nme::events::MouseEvent TouchEvent_obj::nmeCreateSimilar(::String inType, ::nme::display::InteractiveObject related, ::nme::display::InteractiveObject targ){
            	HX_GC_STACKFRAME(&_hx_pos_e4c411b986101dbf_47_nmeCreateSimilar)
HXLINE(  48)		bool result = this->get_bubbles();
HXDLIN(  48)		bool result1 = this->get_cancelable();
HXDLIN(  48)		 ::nme::display::InteractiveObject result2;
HXDLIN(  48)		if (::hx::IsNull( related )) {
HXLINE(  48)			result2 = this->relatedObject;
            		}
            		else {
HXLINE(  48)			result2 = related;
            		}
HXDLIN(  48)		 ::nme::events::TouchEvent result3 =  ::nme::events::TouchEvent_obj::__alloc( HX_CTX ,inType,result,result1,this->localX,this->localY,this->sizeX,this->sizeY,result2,this->ctrlKey,this->altKey,this->shiftKey,this->buttonDown,this->delta,this->commandKey,this->clickCount);
HXLINE(  50)		result3->touchPointID = this->touchPointID;
HXLINE(  51)		result3->isPrimaryTouchPoint = this->isPrimaryTouchPoint;
HXLINE(  52)		if (::hx::IsNotNull( targ )) {
HXLINE(  53)			result3->set_target(targ);
            		}
HXLINE(  54)		return result3;
            	}


::String TouchEvent_obj::TOUCH_BEGIN;

::String TouchEvent_obj::TOUCH_END;

::String TouchEvent_obj::TOUCH_MOVE;

::String TouchEvent_obj::TOUCH_OUT;

::String TouchEvent_obj::TOUCH_OVER;

::String TouchEvent_obj::TOUCH_ROLL_OUT;

::String TouchEvent_obj::TOUCH_ROLL_OVER;

::String TouchEvent_obj::TOUCH_TAP;

 ::nme::events::TouchEvent TouchEvent_obj::nmeCreate(::String inType,::cpp::Pointer<  nme::Event > inEvent, ::nme::geom::Point inLocal, ::nme::display::InteractiveObject inTarget,Float sizeX,Float sizeY){
            	HX_GC_STACKFRAME(&_hx_pos_e4c411b986101dbf_37_nmeCreate)
HXLINE(  38)		int flags = inEvent->get_ref().flags;
HXLINE(  39)		 ::nme::events::TouchEvent evt =  ::nme::events::TouchEvent_obj::__alloc( HX_CTX ,inType,true,true,inLocal->x,inLocal->y,sizeX,sizeY,null(),((flags & ::nme::events::MouseEvent_obj::efCtrlDown) != 0),((flags & ::nme::events::MouseEvent_obj::efAltDown) != 0),((flags & ::nme::events::MouseEvent_obj::efShiftDown) != 0),((flags & ::nme::events::MouseEvent_obj::efLeftDown) != 0),0,null(),0);
HXLINE(  40)		evt->stageX = ( (Float)(inEvent->get_ref().x) );
HXLINE(  41)		evt->stageY = ( (Float)(inEvent->get_ref().y) );
HXLINE(  42)		evt->set_target(inTarget);
HXLINE(  43)		return evt;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(TouchEvent_obj,nmeCreate,return )


::hx::ObjectPtr< TouchEvent_obj > TouchEvent_obj::__new(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< Float >  __o_in_localX,::hx::Null< Float >  __o_in_localY,::hx::Null< Float >  __o_in_sizeX,::hx::Null< Float >  __o_in_sizeY, ::nme::display::InteractiveObject in_relatedObject,::hx::Null< bool >  __o_in_ctrlKey,::hx::Null< bool >  __o_in_altKey,::hx::Null< bool >  __o_in_shiftKey,::hx::Null< bool >  __o_in_buttonDown,::hx::Null< int >  __o_in_delta,::hx::Null< bool >  __o_in_commandKey,::hx::Null< int >  __o_in_clickCount) {
	::hx::ObjectPtr< TouchEvent_obj > __this = new TouchEvent_obj();
	__this->__construct(type,__o_bubbles,__o_cancelable,__o_in_localX,__o_in_localY,__o_in_sizeX,__o_in_sizeY,in_relatedObject,__o_in_ctrlKey,__o_in_altKey,__o_in_shiftKey,__o_in_buttonDown,__o_in_delta,__o_in_commandKey,__o_in_clickCount);
	return __this;
}

::hx::ObjectPtr< TouchEvent_obj > TouchEvent_obj::__alloc(::hx::Ctx *_hx_ctx,::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< Float >  __o_in_localX,::hx::Null< Float >  __o_in_localY,::hx::Null< Float >  __o_in_sizeX,::hx::Null< Float >  __o_in_sizeY, ::nme::display::InteractiveObject in_relatedObject,::hx::Null< bool >  __o_in_ctrlKey,::hx::Null< bool >  __o_in_altKey,::hx::Null< bool >  __o_in_shiftKey,::hx::Null< bool >  __o_in_buttonDown,::hx::Null< int >  __o_in_delta,::hx::Null< bool >  __o_in_commandKey,::hx::Null< int >  __o_in_clickCount) {
	TouchEvent_obj *__this = (TouchEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TouchEvent_obj), true, "nme.events.TouchEvent"));
	*(void **)__this = TouchEvent_obj::_hx_vtable;
	__this->__construct(type,__o_bubbles,__o_cancelable,__o_in_localX,__o_in_localY,__o_in_sizeX,__o_in_sizeY,in_relatedObject,__o_in_ctrlKey,__o_in_altKey,__o_in_shiftKey,__o_in_buttonDown,__o_in_delta,__o_in_commandKey,__o_in_clickCount);
	return __this;
}

TouchEvent_obj::TouchEvent_obj()
{
}

::hx::Val TouchEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"sizeX") ) { return ::hx::Val( sizeX ); }
		if (HX_FIELD_EQ(inName,"sizeY") ) { return ::hx::Val( sizeY ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"touchPointID") ) { return ::hx::Val( touchPointID ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"nmeCreateSimilar") ) { return ::hx::Val( nmeCreateSimilar_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"isPrimaryTouchPoint") ) { return ::hx::Val( isPrimaryTouchPoint ); }
	}
	return super::__Field(inName,inCallProp);
}

bool TouchEvent_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"nmeCreate") ) { outValue = nmeCreate_dyn(); return true; }
	}
	return false;
}

::hx::Val TouchEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"sizeX") ) { sizeX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sizeY") ) { sizeY=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"touchPointID") ) { touchPointID=inValue.Cast< int >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"isPrimaryTouchPoint") ) { isPrimaryTouchPoint=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TouchEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("isPrimaryTouchPoint",29,3f,07,49));
	outFields->push(HX_("touchPointID",2c,be,83,7b));
	outFields->push(HX_("sizeX",77,08,d9,7c));
	outFields->push(HX_("sizeY",78,08,d9,7c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TouchEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(TouchEvent_obj,isPrimaryTouchPoint),HX_("isPrimaryTouchPoint",29,3f,07,49)},
	{::hx::fsInt,(int)offsetof(TouchEvent_obj,touchPointID),HX_("touchPointID",2c,be,83,7b)},
	{::hx::fsFloat,(int)offsetof(TouchEvent_obj,sizeX),HX_("sizeX",77,08,d9,7c)},
	{::hx::fsFloat,(int)offsetof(TouchEvent_obj,sizeY),HX_("sizeY",78,08,d9,7c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo TouchEvent_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_BEGIN,HX_("TOUCH_BEGIN",29,ba,86,7e)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_END,HX_("TOUCH_END",db,ef,2a,2a)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_MOVE,HX_("TOUCH_MOVE",f1,76,b1,c0)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_OUT,HX_("TOUCH_OUT",8e,8c,32,2a)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_OVER,HX_("TOUCH_OVER",34,25,09,c2)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_ROLL_OUT,HX_("TOUCH_ROLL_OUT",4c,73,76,de)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_ROLL_OVER,HX_("TOUCH_ROLL_OVER",b6,24,2f,c9)},
	{::hx::fsString,(void *) &TouchEvent_obj::TOUCH_TAP,HX_("TOUCH_TAP",63,46,36,2a)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String TouchEvent_obj_sMemberFields[] = {
	HX_("isPrimaryTouchPoint",29,3f,07,49),
	HX_("touchPointID",2c,be,83,7b),
	HX_("sizeX",77,08,d9,7c),
	HX_("sizeY",78,08,d9,7c),
	HX_("nmeCreateSimilar",69,e3,6d,b6),
	::String(null()) };

static void TouchEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_BEGIN,"TOUCH_BEGIN");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_END,"TOUCH_END");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_MOVE,"TOUCH_MOVE");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_OUT,"TOUCH_OUT");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_OVER,"TOUCH_OVER");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_ROLL_OUT,"TOUCH_ROLL_OUT");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_ROLL_OVER,"TOUCH_ROLL_OVER");
	HX_MARK_MEMBER_NAME(TouchEvent_obj::TOUCH_TAP,"TOUCH_TAP");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TouchEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_BEGIN,"TOUCH_BEGIN");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_END,"TOUCH_END");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_MOVE,"TOUCH_MOVE");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_OUT,"TOUCH_OUT");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_OVER,"TOUCH_OVER");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_ROLL_OUT,"TOUCH_ROLL_OUT");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_ROLL_OVER,"TOUCH_ROLL_OVER");
	HX_VISIT_MEMBER_NAME(TouchEvent_obj::TOUCH_TAP,"TOUCH_TAP");
};

#endif

::hx::Class TouchEvent_obj::__mClass;

static ::String TouchEvent_obj_sStaticFields[] = {
	HX_("TOUCH_BEGIN",29,ba,86,7e),
	HX_("TOUCH_END",db,ef,2a,2a),
	HX_("TOUCH_MOVE",f1,76,b1,c0),
	HX_("TOUCH_OUT",8e,8c,32,2a),
	HX_("TOUCH_OVER",34,25,09,c2),
	HX_("TOUCH_ROLL_OUT",4c,73,76,de),
	HX_("TOUCH_ROLL_OVER",b6,24,2f,c9),
	HX_("TOUCH_TAP",63,46,36,2a),
	HX_("nmeCreate",e2,6a,d1,16),
	::String(null())
};

void TouchEvent_obj::__register()
{
	TouchEvent_obj _hx_dummy;
	TouchEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.events.TouchEvent",08,c8,f7,d6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TouchEvent_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TouchEvent_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TouchEvent_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TouchEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TouchEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TouchEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TouchEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TouchEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TouchEvent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_11_boot)
HXDLIN(  11)		TOUCH_BEGIN = HX_("touchBegin",ea,cd,e6,a9);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_12_boot)
HXDLIN(  12)		TOUCH_END = HX_("touchEnd",5c,c5,09,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_13_boot)
HXDLIN(  13)		TOUCH_MOVE = HX_("touchMove",70,72,cd,0d);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_14_boot)
HXDLIN(  14)		TOUCH_OUT = HX_("touchOut",0f,62,11,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_15_boot)
HXDLIN(  15)		TOUCH_OVER = HX_("touchOver",b3,20,25,0f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_16_boot)
HXDLIN(  16)		TOUCH_ROLL_OUT = HX_("touchRollOut",12,0f,74,87);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_17_boot)
HXDLIN(  17)		TOUCH_ROLL_OVER = HX_("touchRollOver",50,d6,19,fe);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e4c411b986101dbf_18_boot)
HXDLIN(  18)		TOUCH_TAP = HX_("touchTap",e4,1b,15,00);
            	}
}

} // end namespace nme
} // end namespace events
