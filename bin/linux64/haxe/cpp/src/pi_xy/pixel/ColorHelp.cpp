// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_pixel_ColorHelp
#include <pi_xy/pixel/ColorHelp.h>
#endif
#ifndef INCLUDED_pi_xy_pixel__ColorHelp_ColorHelp_Fields_
#include <pi_xy/pixel/_ColorHelp/ColorHelp_Fields_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ff668c472553e2ec_119_new,"pi_xy.pixel.ColorHelp","new",0x5763e187,"pi_xy.pixel.ColorHelp.new","pi_xy/pixel/ColorHelp.hx",119,0x6c7c7d8b)
namespace pi_xy{
namespace pixel{

void ColorHelp_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ff668c472553e2ec_119_new)
HXLINE( 134)		this->argbIntAvg_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::argbIntAvg_dyn();
HXLINE( 133)		this->blueAvg_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::blueAvg_dyn();
HXLINE( 132)		this->greenAvg_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::greenAvg_dyn();
HXLINE( 131)		this->redAvg_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::redAvg_dyn();
HXLINE( 130)		this->alphaAvg_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::alphaAvg_dyn();
HXLINE( 129)		this->argbInt_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::argbInt_dyn();
HXLINE( 127)		this->blueChannel_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::blueChannel_dyn();
HXLINE( 126)		this->greenChannel_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::greenChannel_dyn();
HXLINE( 125)		this->redChannel_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::redChannel_dyn();
HXLINE( 124)		this->alphaChannel_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::alphaChannel_dyn();
HXLINE( 123)		this->toHexInt_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::toHexInt_dyn();
HXLINE( 122)		this->from_argb_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::from_argb_dyn();
HXLINE( 121)		this->colorAlpha_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::colorAlpha_dyn();
HXLINE( 120)		this->rgbInt_ = ::pi_xy::pixel::_ColorHelp::ColorHelp_Fields__obj::rgbInt_dyn();
            	}

Dynamic ColorHelp_obj::__CreateEmpty() { return new ColorHelp_obj; }

void *ColorHelp_obj::_hx_vtable = 0;

Dynamic ColorHelp_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ColorHelp_obj > _hx_result = new ColorHelp_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ColorHelp_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1b6362a5;
}


::hx::ObjectPtr< ColorHelp_obj > ColorHelp_obj::__new() {
	::hx::ObjectPtr< ColorHelp_obj > __this = new ColorHelp_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ColorHelp_obj > ColorHelp_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ColorHelp_obj *__this = (ColorHelp_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ColorHelp_obj), true, "pi_xy.pixel.ColorHelp"));
	*(void **)__this = ColorHelp_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ColorHelp_obj::ColorHelp_obj()
{
}

void ColorHelp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ColorHelp);
	HX_MARK_MEMBER_NAME(rgbInt_,"rgbInt_");
	HX_MARK_MEMBER_NAME(colorAlpha_,"colorAlpha_");
	HX_MARK_MEMBER_NAME(from_argb_,"from_argb_");
	HX_MARK_MEMBER_NAME(toHexInt_,"toHexInt_");
	HX_MARK_MEMBER_NAME(alphaChannel_,"alphaChannel_");
	HX_MARK_MEMBER_NAME(redChannel_,"redChannel_");
	HX_MARK_MEMBER_NAME(greenChannel_,"greenChannel_");
	HX_MARK_MEMBER_NAME(blueChannel_,"blueChannel_");
	HX_MARK_MEMBER_NAME(argbInt_,"argbInt_");
	HX_MARK_MEMBER_NAME(alphaAvg_,"alphaAvg_");
	HX_MARK_MEMBER_NAME(redAvg_,"redAvg_");
	HX_MARK_MEMBER_NAME(greenAvg_,"greenAvg_");
	HX_MARK_MEMBER_NAME(blueAvg_,"blueAvg_");
	HX_MARK_MEMBER_NAME(argbIntAvg_,"argbIntAvg_");
	HX_MARK_END_CLASS();
}

void ColorHelp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(rgbInt_,"rgbInt_");
	HX_VISIT_MEMBER_NAME(colorAlpha_,"colorAlpha_");
	HX_VISIT_MEMBER_NAME(from_argb_,"from_argb_");
	HX_VISIT_MEMBER_NAME(toHexInt_,"toHexInt_");
	HX_VISIT_MEMBER_NAME(alphaChannel_,"alphaChannel_");
	HX_VISIT_MEMBER_NAME(redChannel_,"redChannel_");
	HX_VISIT_MEMBER_NAME(greenChannel_,"greenChannel_");
	HX_VISIT_MEMBER_NAME(blueChannel_,"blueChannel_");
	HX_VISIT_MEMBER_NAME(argbInt_,"argbInt_");
	HX_VISIT_MEMBER_NAME(alphaAvg_,"alphaAvg_");
	HX_VISIT_MEMBER_NAME(redAvg_,"redAvg_");
	HX_VISIT_MEMBER_NAME(greenAvg_,"greenAvg_");
	HX_VISIT_MEMBER_NAME(blueAvg_,"blueAvg_");
	HX_VISIT_MEMBER_NAME(argbIntAvg_,"argbIntAvg_");
}

::hx::Val ColorHelp_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"rgbInt_") ) { return ::hx::Val( rgbInt_ ); }
		if (HX_FIELD_EQ(inName,"redAvg_") ) { return ::hx::Val( redAvg_ ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"argbInt_") ) { return ::hx::Val( argbInt_ ); }
		if (HX_FIELD_EQ(inName,"blueAvg_") ) { return ::hx::Val( blueAvg_ ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"toHexInt_") ) { return ::hx::Val( toHexInt_ ); }
		if (HX_FIELD_EQ(inName,"alphaAvg_") ) { return ::hx::Val( alphaAvg_ ); }
		if (HX_FIELD_EQ(inName,"greenAvg_") ) { return ::hx::Val( greenAvg_ ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"from_argb_") ) { return ::hx::Val( from_argb_ ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"colorAlpha_") ) { return ::hx::Val( colorAlpha_ ); }
		if (HX_FIELD_EQ(inName,"redChannel_") ) { return ::hx::Val( redChannel_ ); }
		if (HX_FIELD_EQ(inName,"argbIntAvg_") ) { return ::hx::Val( argbIntAvg_ ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"blueChannel_") ) { return ::hx::Val( blueChannel_ ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"alphaChannel_") ) { return ::hx::Val( alphaChannel_ ); }
		if (HX_FIELD_EQ(inName,"greenChannel_") ) { return ::hx::Val( greenChannel_ ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ColorHelp_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"rgbInt_") ) { rgbInt_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"redAvg_") ) { redAvg_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"argbInt_") ) { argbInt_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"blueAvg_") ) { blueAvg_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"toHexInt_") ) { toHexInt_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"alphaAvg_") ) { alphaAvg_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"greenAvg_") ) { greenAvg_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"from_argb_") ) { from_argb_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"colorAlpha_") ) { colorAlpha_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"redChannel_") ) { redChannel_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"argbIntAvg_") ) { argbIntAvg_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"blueChannel_") ) { blueChannel_=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"alphaChannel_") ) { alphaChannel_=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"greenChannel_") ) { greenChannel_=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ColorHelp_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,rgbInt_),HX_("rgbInt_",3d,56,2a,51)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,colorAlpha_),HX_("colorAlpha_",04,5d,64,fc)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,from_argb_),HX_("from_argb_",be,ed,1d,30)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,toHexInt_),HX_("toHexInt_",d0,f4,01,bf)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,alphaChannel_),HX_("alphaChannel_",ba,9b,5a,dc)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,redChannel_),HX_("redChannel_",ad,78,5a,eb)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,greenChannel_),HX_("greenChannel_",1f,70,2e,f5)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,blueChannel_),HX_("blueChannel_",f6,d2,04,e9)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,argbInt_),HX_("argbInt_",fc,93,47,fd)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,alphaAvg_),HX_("alphaAvg_",cb,70,71,da)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,redAvg_),HX_("redAvg_",3e,18,fd,a5)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,greenAvg_),HX_("greenAvg_",b0,ee,ff,a2)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,blueAvg_),HX_("blueAvg_",07,5a,e8,8a)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ColorHelp_obj,argbIntAvg_),HX_("argbIntAvg_",f0,8e,8d,06)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ColorHelp_obj_sStaticStorageInfo = 0;
#endif

static ::String ColorHelp_obj_sMemberFields[] = {
	HX_("rgbInt_",3d,56,2a,51),
	HX_("colorAlpha_",04,5d,64,fc),
	HX_("from_argb_",be,ed,1d,30),
	HX_("toHexInt_",d0,f4,01,bf),
	HX_("alphaChannel_",ba,9b,5a,dc),
	HX_("redChannel_",ad,78,5a,eb),
	HX_("greenChannel_",1f,70,2e,f5),
	HX_("blueChannel_",f6,d2,04,e9),
	HX_("argbInt_",fc,93,47,fd),
	HX_("alphaAvg_",cb,70,71,da),
	HX_("redAvg_",3e,18,fd,a5),
	HX_("greenAvg_",b0,ee,ff,a2),
	HX_("blueAvg_",07,5a,e8,8a),
	HX_("argbIntAvg_",f0,8e,8d,06),
	::String(null()) };

::hx::Class ColorHelp_obj::__mClass;

void ColorHelp_obj::__register()
{
	ColorHelp_obj _hx_dummy;
	ColorHelp_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.pixel.ColorHelp",15,12,4d,40);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ColorHelp_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ColorHelp_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ColorHelp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ColorHelp_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace pixel
