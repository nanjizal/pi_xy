// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_algo__QuadPoints_QuadPoints_Impl_
#define INCLUDED_pi_xy_algo__QuadPoints_QuadPoints_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(pi_xy,algo,HitQuad)
HX_DECLARE_CLASS2(pi_xy,algo,IhitObj)
HX_DECLARE_CLASS2(pi_xy,algo,LineInfo)
HX_DECLARE_CLASS2(pi_xy,algo,LineXYinfo)
HX_DECLARE_CLASS2(pi_xy,algo,QuadPoints_)
HX_DECLARE_CLASS3(pi_xy,algo,_QuadPoints,QuadPoints_Impl_)

namespace pi_xy{
namespace algo{
namespace _QuadPoints{


class HXCPP_CLASS_ATTRIBUTES QuadPoints_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef QuadPoints_Impl__obj OBJ_;
		QuadPoints_Impl__obj();

	public:
		enum { _hx_ClassId = 0x5b7683b9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.algo._QuadPoints.QuadPoints_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.algo._QuadPoints.QuadPoints_Impl_"); }

		inline static ::hx::ObjectPtr< QuadPoints_Impl__obj > __new() {
			::hx::ObjectPtr< QuadPoints_Impl__obj > __this = new QuadPoints_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< QuadPoints_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			QuadPoints_Impl__obj *__this = (QuadPoints_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(QuadPoints_Impl__obj), false, "pi_xy.algo._QuadPoints.QuadPoints_Impl_"));
			*(void **)__this = QuadPoints_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~QuadPoints_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("QuadPoints_Impl_",8a,fa,2c,f4); }

		static  ::pi_xy::algo::QuadPoints_ _new( ::pi_xy::algo::QuadPoints_ qp);
		static ::Dynamic _new_dyn();

		static  ::pi_xy::algo::QuadPoints_ fromLineXYinfo( ::pi_xy::algo::LineXYinfo lineXYinfo);
		static ::Dynamic fromLineXYinfo_dyn();

		static  ::pi_xy::algo::QuadPoints_ fromLineInfo( ::pi_xy::algo::LineInfo lineInfo);
		static ::Dynamic fromLineInfo_dyn();

		static void rotate( ::pi_xy::algo::QuadPoints_ this1,Float theta,Float centreX,Float centreY);
		static ::Dynamic rotate_dyn();

		static  ::pi_xy::algo::HitQuad getHit( ::pi_xy::algo::QuadPoints_ this1,::hx::Null< bool >  preCalculated);
		static ::Dynamic getHit_dyn();

};

} // end namespace pi_xy
} // end namespace algo
} // end namespace _QuadPoints

#endif /* INCLUDED_pi_xy_algo__QuadPoints_QuadPoints_Impl_ */ 
