// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_utils__Floats3264_Floats3264_Impl_
#define INCLUDED_nme_utils__Floats3264_Floats3264_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(nme,utils,ByteArray)
HX_DECLARE_CLASS2(nme,utils,Float32Buffer)
HX_DECLARE_CLASS2(nme,utils,IDataInput)
HX_DECLARE_CLASS2(nme,utils,IDataOutput)
HX_DECLARE_CLASS2(nme,utils,IMemoryRange)
HX_DECLARE_CLASS3(nme,utils,_Floats3264,Floats3264_Impl_)

namespace nme{
namespace utils{
namespace _Floats3264{


class HXCPP_CLASS_ATTRIBUTES Floats3264_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Floats3264_Impl__obj OBJ_;
		Floats3264_Impl__obj();

	public:
		enum { _hx_ClassId = 0x22f9955c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="nme.utils._Floats3264.Floats3264_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"nme.utils._Floats3264.Floats3264_Impl_"); }

		inline static ::hx::ObjectPtr< Floats3264_Impl__obj > __new() {
			::hx::ObjectPtr< Floats3264_Impl__obj > __this = new Floats3264_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Floats3264_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Floats3264_Impl__obj *__this = (Floats3264_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Floats3264_Impl__obj), false, "nme.utils._Floats3264.Floats3264_Impl_"));
			*(void **)__this = Floats3264_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Floats3264_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Floats3264_Impl_",34,04,97,28); }

		static  ::Dynamic _new( ::Dynamic d);
		static ::Dynamic _new_dyn();

		static  ::Dynamic toDynamic( ::Dynamic this1);
		static ::Dynamic toDynamic_dyn();

		static  ::Dynamic fromArrayFloat(::Array< Float > f);
		static ::Dynamic fromArrayFloat_dyn();

		static  ::Dynamic fromArrayFloat32Buffer( ::nme::utils::Float32Buffer f);
		static ::Dynamic fromArrayFloat32Buffer_dyn();

		static  ::Dynamic fromArray32Float(::Array< float > f);
		static ::Dynamic fromArray32Float_dyn();

};

} // end namespace nme
} // end namespace utils
} // end namespace _Floats3264

#endif /* INCLUDED_nme_utils__Floats3264_Floats3264_Impl_ */ 
