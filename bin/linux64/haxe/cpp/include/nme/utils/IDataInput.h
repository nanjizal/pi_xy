// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_utils_IDataInput
#define INCLUDED_nme_utils_IDataInput

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(nme,utils,ByteArray)
HX_DECLARE_CLASS2(nme,utils,IDataInput)
HX_DECLARE_CLASS2(nme,utils,IDataOutput)
HX_DECLARE_CLASS2(nme,utils,IMemoryRange)

namespace nme{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES IDataInput_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		bool (::hx::Object :: *_hx_readBoolean)(); 
		static inline bool readBoolean( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readBoolean)();
		}
		int (::hx::Object :: *_hx_readByte)(); 
		static inline int readByte( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readByte)();
		}
		void (::hx::Object :: *_hx_readBytes)( ::nme::utils::ByteArray outData,::hx::Null< int >  inOffset,::hx::Null< int >  inLen); 
		static inline void readBytes( ::Dynamic _hx_, ::nme::utils::ByteArray outData,::hx::Null< int >  inOffset,::hx::Null< int >  inLen) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readBytes)(outData,inOffset,inLen);
		}
		Float (::hx::Object :: *_hx_readDouble)(); 
		static inline Float readDouble( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readDouble)();
		}
		Float (::hx::Object :: *_hx_readFloat)(); 
		static inline Float readFloat( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readFloat)();
		}
		int (::hx::Object :: *_hx_readInt)(); 
		static inline int readInt( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readInt)();
		}
		int (::hx::Object :: *_hx_readShort)(); 
		static inline int readShort( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readShort)();
		}
		int (::hx::Object :: *_hx_readUnsignedByte)(); 
		static inline int readUnsignedByte( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readUnsignedByte)();
		}
		int (::hx::Object :: *_hx_readUnsignedInt)(); 
		static inline int readUnsignedInt( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readUnsignedInt)();
		}
		int (::hx::Object :: *_hx_readUnsignedShort)(); 
		static inline int readUnsignedShort( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readUnsignedShort)();
		}
		::String (::hx::Object :: *_hx_readUTF)(); 
		static inline ::String readUTF( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readUTF)();
		}
		::String (::hx::Object :: *_hx_readUTFBytes)(int inLen); 
		static inline ::String readUTFBytes( ::Dynamic _hx_,int inLen) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_readUTFBytes)(inLen);
		}
		int (::hx::Object :: *_hx_get_bytesAvailable)(); 
		static inline int get_bytesAvailable( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_get_bytesAvailable)();
		}
		::String (::hx::Object :: *_hx_get_endian)(); 
		static inline ::String get_endian( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_get_endian)();
		}
		::String (::hx::Object :: *_hx_set_endian)(::String s); 
		static inline ::String set_endian( ::Dynamic _hx_,::String s) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::nme::utils::IDataInput_obj *>(_hx_.mPtr->_hx_getInterface(0x74db6822)))->_hx_set_endian)(s);
		}
};

} // end namespace nme
} // end namespace utils

#endif /* INCLUDED_nme_utils_IDataInput */ 
