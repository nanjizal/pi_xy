// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_media_AudioSampleFormat
#include <nme/media/AudioSampleFormat.h>
#endif
namespace nme{
namespace media{

::nme::media::AudioSampleFormat AudioSampleFormat_obj::Float32;

::nme::media::AudioSampleFormat AudioSampleFormat_obj::SInt16;

::nme::media::AudioSampleFormat AudioSampleFormat_obj::UInt8;

bool AudioSampleFormat_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Float32",1b,b9,59,b7)) { outValue = AudioSampleFormat_obj::Float32; return true; }
	if (inName==HX_("SInt16",41,f4,ec,80)) { outValue = AudioSampleFormat_obj::SInt16; return true; }
	if (inName==HX_("UInt8",5e,bf,a3,21)) { outValue = AudioSampleFormat_obj::UInt8; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(AudioSampleFormat_obj)

int AudioSampleFormat_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Float32",1b,b9,59,b7)) return 2;
	if (inName==HX_("SInt16",41,f4,ec,80)) return 1;
	if (inName==HX_("UInt8",5e,bf,a3,21)) return 0;
	return super::__FindIndex(inName);
}

int AudioSampleFormat_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Float32",1b,b9,59,b7)) return 0;
	if (inName==HX_("SInt16",41,f4,ec,80)) return 0;
	if (inName==HX_("UInt8",5e,bf,a3,21)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val AudioSampleFormat_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Float32",1b,b9,59,b7)) return Float32;
	if (inName==HX_("SInt16",41,f4,ec,80)) return SInt16;
	if (inName==HX_("UInt8",5e,bf,a3,21)) return UInt8;
	return super::__Field(inName,inCallProp);
}

static ::String AudioSampleFormat_obj_sStaticFields[] = {
	HX_("UInt8",5e,bf,a3,21),
	HX_("SInt16",41,f4,ec,80),
	HX_("Float32",1b,b9,59,b7),
	::String(null())
};

::hx::Class AudioSampleFormat_obj::__mClass;

Dynamic __Create_AudioSampleFormat_obj() { return new AudioSampleFormat_obj; }

void AudioSampleFormat_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.media.AudioSampleFormat",a5,85,43,62), ::hx::TCanCast< AudioSampleFormat_obj >,AudioSampleFormat_obj_sStaticFields,0,
	&__Create_AudioSampleFormat_obj, &__Create,
	&super::__SGetClass(), &CreateAudioSampleFormat_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &AudioSampleFormat_obj::__GetStatic;
}

void AudioSampleFormat_obj::__boot()
{
Float32 = ::hx::CreateConstEnum< AudioSampleFormat_obj >(HX_("Float32",1b,b9,59,b7),2);
SInt16 = ::hx::CreateConstEnum< AudioSampleFormat_obj >(HX_("SInt16",41,f4,ec,80),1);
UInt8 = ::hx::CreateConstEnum< AudioSampleFormat_obj >(HX_("UInt8",5e,bf,a3,21),0);
}


} // end namespace nme
} // end namespace media
