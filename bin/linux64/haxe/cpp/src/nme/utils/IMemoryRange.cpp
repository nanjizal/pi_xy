// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_nme_utils_ByteArray
#include <nme/utils/ByteArray.h>
#endif
#ifndef INCLUDED_nme_utils_IDataInput
#include <nme/utils/IDataInput.h>
#endif
#ifndef INCLUDED_nme_utils_IDataOutput
#include <nme/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_nme_utils_IMemoryRange
#include <nme/utils/IMemoryRange.h>
#endif

namespace nme{
namespace utils{


static ::String IMemoryRange_obj_sMemberFields[] = {
	HX_("getByteBuffer",5e,a2,0b,05),
	HX_("getStart",ec,83,e2,e3),
	HX_("getLength",1c,1e,5e,1b),
	::String(null()) };

::hx::Class IMemoryRange_obj::__mClass;

void IMemoryRange_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.utils.IMemoryRange",b8,69,c1,6f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(IMemoryRange_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TIsInterface< (int)0x915e561e >;
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace utils
