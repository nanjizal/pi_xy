// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_nme_Loader
#include <nme/Loader.h>
#endif
#ifndef INCLUDED_nme_app_Application
#include <nme/app/Application.h>
#endif
#ifndef INCLUDED_nme_app_IPollClient
#include <nme/app/IPollClient.h>
#endif
#ifndef INCLUDED_nme_app_Window
#include <nme/app/Window.h>
#endif
#ifndef INCLUDED_nme_display_BitmapData
#include <nme/display/BitmapData.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_sys_thread_Mutex
#include <sys/thread/Mutex.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_127_createWindow,"nme.app.Application","createWindow",0x45ba019f,"nme.app.Application.createWindow","nme/app/Application.hx",127,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_100_createWindow,"nme.app.Application","createWindow",0x45ba019f,"nme.app.Application.createWindow","nme/app/Application.hx",100,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_137_close,"nme.app.Application","close",0xc2e275c5,"nme.app.Application.close","nme/app/Application.hx",137,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_144_addPollClient,"nme.app.Application","addPollClient",0xd9147278,"nme.app.Application.addPollClient","nme/app/Application.hx",144,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_156_removePollClient,"nme.app.Application","removePollClient",0x04fe8661,"nme.app.Application.removePollClient","nme/app/Application.hx",156,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_162_pollThreadJobs,"nme.app.Application","pollThreadJobs",0x972e6132,"nme.app.Application.pollThreadJobs","nme/app/Application.hx",162,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_178_pollClients,"nme.app.Application","pollClients",0x8b7c9d16,"nme.app.Application.pollClients","nme/app/Application.hx",178,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_192_getNextWake,"nme.app.Application","getNextWake",0x02a3ab3a,"nme.app.Application.getNextWake","nme/app/Application.hx",192,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_211_setFixedOrientation,"nme.app.Application","setFixedOrientation",0xf680304b,"nme.app.Application.setFixedOrientation","nme/app/Application.hx",211,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_216_exit,"nme.app.Application","exit",0xdea4d9b1,"nme.app.Application.exit","nme/app/Application.hx",216,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_230_forceClose,"nme.app.Application","forceClose",0xb6e794a0,"nme.app.Application.forceClose","nme/app/Application.hx",230,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_238_pause,"nme.app.Application","pause",0x37d73503,"nme.app.Application.pause","nme/app/Application.hx",238,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_243_setNativeWindow,"nme.app.Application","setNativeWindow",0x8c45bff6,"nme.app.Application.setNativeWindow","nme/app/Application.hx",243,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_247_runOnMainThread,"nme.app.Application","runOnMainThread",0x34a2021a,"nme.app.Application.runOnMainThread","nme/app/Application.hx",247,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_264_postUICallback,"nme.app.Application","postUICallback",0x89c7c8ec,"nme.app.Application.postUICallback","nme/app/Application.hx",264,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_270_resume,"nme.app.Application","resume",0xbd775700,"nme.app.Application.resume","nme/app/Application.hx",270,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_280_setIcon,"nme.app.Application","setIcon",0xaad3e388,"nme.app.Application.setIcon","nme/app/Application.hx",280,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_287_setPackage,"nme.app.Application","setPackage",0x6c3fe2d7,"nme.app.Application.setPackage","nme/app/Application.hx",287,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_329_get_build,"nme.app.Application","get_build",0x4b502012,"nme.app.Application.get_build","nme/app/Application.hx",329,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_330_get_ndllVersion,"nme.app.Application","get_ndllVersion",0x0cda7166,"nme.app.Application.get_ndllVersion","nme/app/Application.hx",330,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_331_get_nmeStateVersion,"nme.app.Application","get_nmeStateVersion",0x2ab4ab51,"nme.app.Application.get_nmeStateVersion","nme/app/Application.hx",331,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_332_get_bits,"nme.app.Application","get_bits",0xca58dea2,"nme.app.Application.get_bits","nme/app/Application.hx",332,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_37_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",37,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_38_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",38,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_39_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",39,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_40_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",40,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_41_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",41,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_42_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",42,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_43_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",43,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_44_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",44,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_45_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",45,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_48_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",48,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_49_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",49,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_50_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",50,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_51_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",51,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_52_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",52,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_53_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",53,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_54_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",54,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_55_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",55,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_56_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",56,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_57_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",57,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_58_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",58,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_59_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",59,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_60_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",60,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_61_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",61,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_63_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",63,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_64_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",64,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_65_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",65,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_66_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",66,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_83_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",83,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_84_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",84,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_85_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",85,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_88_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",88,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_90_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",90,0xcbe016e5)
HX_LOCAL_STACK_FRAME(_hx_pos_cb5a70b1fd1c19f7_9_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/PrimeLoader.hx",9,0xcf416155)
HX_LOCAL_STACK_FRAME(_hx_pos_190218778fd2b94c_343_boot,"nme.app.Application","boot",0xdca266c5,"nme.app.Application.boot","nme/app/Application.hx",343,0xcbe016e5)
namespace nme{
namespace app{

void Application_obj::__construct() { }

Dynamic Application_obj::__CreateEmpty() { return new Application_obj; }

void *Application_obj::_hx_vtable = 0;

Dynamic Application_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Application_obj > _hx_result = new Application_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Application_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x26273011;
}

int Application_obj::OrientationPortrait;

int Application_obj::OrientationPortraitUpsideDown;

int Application_obj::OrientationLandscapeRight;

int Application_obj::OrientationLandscapeLeft;

int Application_obj::OrientationFaceUp;

int Application_obj::OrientationFaceDown;

int Application_obj::OrientationPortraitAny;

int Application_obj::OrientationLandscapeAny;

int Application_obj::OrientationAny;

int Application_obj::FULLSCREEN;

int Application_obj::BORDERLESS;

int Application_obj::RESIZABLE;

int Application_obj::HARDWARE;

int Application_obj::VSYNC;

int Application_obj::HW_AA;

int Application_obj::HW_AA_HIRES;

int Application_obj::DEPTH_BUFFER;

int Application_obj::STENCIL_BUFFER;

int Application_obj::SINGLE_INSTANCE;

int Application_obj::SCALE_BASE;

int Application_obj::HARDWARE_METAL;

int Application_obj::ALWAYS_ON_TOP;

int Application_obj::HIGH_DPI;

 ::Dynamic Application_obj::nmeFrameHandle;

 ::nme::app::Window Application_obj::nmeWindow;

bool Application_obj::silentRecreate;

bool Application_obj::sIsInit;

int Application_obj::initHeight;

int Application_obj::initWidth;

Float Application_obj::initFrameRate;

::String Application_obj::company;

::String Application_obj::version;

::String Application_obj::packageName;

::String Application_obj::file;

::String Application_obj::build;

int Application_obj::ndllVersion;

::String Application_obj::nmeStateVersion;

int Application_obj::bits;

 ::Dynamic Application_obj::onQuit;

bool Application_obj::nmeQuitting;

 ::Dynamic Application_obj::asyncPing;

::Array< ::Dynamic> Application_obj::pollClientList;

::Array< ::Dynamic> Application_obj::mainThreadJobs;

 ::sys::thread::Mutex Application_obj::mainThreadJobMutex;

void Application_obj::createWindow( ::Dynamic inOnLoaded, ::Dynamic inParams,::hx::Null< bool >  __o_isSecondary){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::Dynamic,inOnLoaded, ::Dynamic,inParams) HXARGC(1)
            		void _hx_run( ::Dynamic inFrameHandle){
            			HX_GC_STACKFRAME(&_hx_pos_190218778fd2b94c_127_createWindow)
HXLINE( 128)			::nme::app::Application_obj::onQuit = ::nme::app::Application_obj::close_dyn();
HXLINE( 129)			::nme::app::Application_obj::nmeFrameHandle = inFrameHandle;
HXLINE( 130)			::nme::app::Application_obj::nmeWindow =  ::nme::app::Window_obj::__alloc( HX_CTX ,::nme::app::Application_obj::nmeFrameHandle,::nme::app::Application_obj::initWidth,::nme::app::Application_obj::initHeight);
HXLINE( 131)			::nme::app::Application_obj::nmeWindow->setBackground(inParams->__Field(HX_("color",63,71,5c,4a),::hx::paccDynamic));
HXLINE( 132)			inOnLoaded(::nme::app::Application_obj::nmeWindow);
            		}
            		HX_END_LOCAL_FUNC1((void))

            		bool isSecondary = __o_isSecondary.Default(false);
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_100_createWindow)
HXLINE( 101)		if (isSecondary) {
HXLINE( 103)			if (!(::nme::app::Application_obj::sIsInit)) {
HXLINE( 104)				HX_STACK_DO_THROW(HX_("Secondary window created before main window.",7c,c6,1d,ce));
            			}
            		}
            		else {
HXLINE( 106)			if (::nme::app::Application_obj::sIsInit) {
HXLINE( 108)				if (::nme::app::Application_obj::silentRecreate) {
HXLINE( 110)					inOnLoaded(::nme::app::Application_obj::nmeWindow);
HXLINE( 111)					return;
            				}
HXLINE( 114)				HX_STACK_DO_THROW(HX_("nme.app.Application.createWindow called multiple times. This function is automatically called by the project code.",42,8f,00,b7));
            			}
            		}
HXLINE( 117)		::nme::app::Application_obj::sIsInit = true;
HXLINE( 118)		int _hx_tmp;
HXDLIN( 118)		if (::hx::IsNull( inParams->__Field(HX_("width",06,b6,62,ca),::hx::paccDynamic) )) {
HXLINE( 118)			_hx_tmp = 640;
            		}
            		else {
HXLINE( 118)			_hx_tmp = ( (int)(inParams->__Field(HX_("width",06,b6,62,ca),::hx::paccDynamic)) );
            		}
HXDLIN( 118)		::nme::app::Application_obj::initWidth = _hx_tmp;
HXLINE( 119)		int _hx_tmp1;
HXDLIN( 119)		if (::hx::IsNull( inParams->__Field(HX_("height",e7,07,4c,02),::hx::paccDynamic) )) {
HXLINE( 119)			_hx_tmp1 = 480;
            		}
            		else {
HXLINE( 119)			_hx_tmp1 = ( (int)(inParams->__Field(HX_("height",e7,07,4c,02),::hx::paccDynamic)) );
            		}
HXDLIN( 119)		::nme::app::Application_obj::initHeight = _hx_tmp1;
HXLINE( 120)		Float _hx_tmp2;
HXDLIN( 120)		if (::hx::IsNull( inParams->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic) )) {
HXLINE( 120)			_hx_tmp2 = ( (Float)(60) );
            		}
            		else {
HXLINE( 120)			_hx_tmp2 = ( (Float)(inParams->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) );
            		}
HXDLIN( 120)		::nme::app::Application_obj::initFrameRate = _hx_tmp2;
HXLINE( 121)		 ::Dynamic flags;
HXDLIN( 121)		if (::hx::IsNull( inParams->__Field(HX_("flags",47,2b,8c,02),::hx::paccDynamic) )) {
HXLINE( 121)			flags = 15;
            		}
            		else {
HXLINE( 121)			flags = inParams->__Field(HX_("flags",47,2b,8c,02),::hx::paccDynamic);
            		}
HXLINE( 122)		::String title;
HXDLIN( 122)		if (::hx::IsNull( inParams->__Field(HX_("title",98,15,3b,10),::hx::paccDynamic) )) {
HXLINE( 122)			title = HX_("NME",26,73,3b,00);
            		}
            		else {
HXLINE( 122)			title = ( (::String)(inParams->__Field(HX_("title",98,15,3b,10),::hx::paccDynamic)) );
            		}
HXLINE( 123)		 ::hx::Object * icon;
HXDLIN( 123)		if (::hx::IsNull( inParams->__Field(HX_("icon",79,e7,b2,45),::hx::paccDynamic) )) {
HXLINE( 123)			icon = ::hx::DynamicPtr(null());
            		}
            		else {
HXLINE( 123)			icon = ::hx::DynamicPtr(( ( ::nme::display::BitmapData)(inParams->__Field(HX_("icon",79,e7,b2,45),::hx::paccDynamic)) )->nmeHandle);
            		}
HXLINE( 125)		::cpp::Function< void  ( ::hx::Object *,int,int,int,::String, ::hx::Object *) > create_main_frame = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_create_main_frame",91,3d,39,26),HX_("oiiisov",20,55,19,be),false);
HXLINE( 127)		create_main_frame(::hx::DynamicPtr( ::Dynamic(new _hx_Closure_0(inOnLoaded,inParams))),::nme::app::Application_obj::initWidth,::nme::app::Application_obj::initHeight,( (int)(flags) ),title,icon);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Application_obj,createWindow,(void))

void Application_obj::close(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_137_close)
HXLINE( 138)		::nme::app::Application_obj::nmeQuitting = true;
HXLINE( 139)		::cpp::Function< void  () > close = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_close",bf,ee,77,aa),HX_("v",76,00,00,00),false);
HXLINE( 140)		close();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,close,(void))

void Application_obj::addPollClient(::Dynamic client,::hx::Null< bool >  __o_inAtEnd){
            		bool inAtEnd = __o_inAtEnd.Default(false);
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_144_addPollClient)
HXLINE( 145)		if (::hx::IsNull( ::nme::app::Application_obj::pollClientList )) {
HXLINE( 146)			::nme::app::Application_obj::pollClientList = ::Array_obj< ::Dynamic>::__new(0);
            		}
HXLINE( 148)		if (inAtEnd) {
HXLINE( 149)			::nme::app::Application_obj::pollClientList->push(client);
            		}
            		else {
HXLINE( 151)			::nme::app::Application_obj::pollClientList->insert(0,client);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Application_obj,addPollClient,(void))

void Application_obj::removePollClient(::Dynamic client){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_156_removePollClient)
HXDLIN( 156)		if (::hx::IsNotNull( ::nme::app::Application_obj::pollClientList )) {
HXLINE( 157)			::nme::app::Application_obj::pollClientList->remove(client);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,removePollClient,(void))

void Application_obj::pollThreadJobs(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_162_pollThreadJobs)
HXDLIN( 162)		while(true){
HXDLIN( 162)			bool _hx_tmp;
HXDLIN( 162)			if (!(::nme::app::Application_obj::nmeQuitting)) {
HXDLIN( 162)				_hx_tmp = (::nme::app::Application_obj::mainThreadJobs->length > 0);
            			}
            			else {
HXDLIN( 162)				_hx_tmp = false;
            			}
HXDLIN( 162)			if (!(_hx_tmp)) {
HXDLIN( 162)				goto _hx_goto_5;
            			}
HXLINE( 164)			 ::Dynamic job = null();
HXLINE( 166)			::nme::app::Application_obj::mainThreadJobMutex->acquire();
HXLINE( 167)			job = ::nme::app::Application_obj::mainThreadJobs->shift();
HXLINE( 168)			::nme::app::Application_obj::mainThreadJobMutex->release();
HXLINE( 172)			if (::hx::IsNotNull( job )) {
HXLINE( 173)				job();
            			}
            		}
            		_hx_goto_5:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,pollThreadJobs,(void))

void Application_obj::pollClients(Float timestamp){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_178_pollClients)
HXLINE( 179)		if ((::nme::app::Application_obj::mainThreadJobs->length > 0)) {
HXLINE( 180)			::nme::app::Application_obj::pollThreadJobs();
            		}
HXLINE( 181)		bool _hx_tmp;
HXDLIN( 181)		if (::hx::IsNotNull( ::nme::app::Application_obj::pollClientList )) {
HXLINE( 181)			_hx_tmp = !(::nme::app::Application_obj::nmeQuitting);
            		}
            		else {
HXLINE( 181)			_hx_tmp = false;
            		}
HXDLIN( 181)		if (_hx_tmp) {
HXLINE( 183)			int _g = 0;
HXDLIN( 183)			::Array< ::Dynamic> _g1 = ::nme::app::Application_obj::pollClientList;
HXDLIN( 183)			while((_g < _g1->length)){
HXLINE( 183)				::Dynamic client = _g1->__get(_g);
HXDLIN( 183)				_g = (_g + 1);
HXLINE( 184)				::nme::app::IPollClient_obj::onPoll(client,timestamp);
            			}
            		}
HXLINE( 186)		if ((::nme::app::Application_obj::mainThreadJobs->length > 0)) {
HXLINE( 187)			::nme::app::Application_obj::pollThreadJobs();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,pollClients,(void))

Float Application_obj::getNextWake(Float timestamp){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_192_getNextWake)
HXLINE( 193)		Float nextWake = ((Float)1e30);
HXLINE( 195)		bool _hx_tmp;
HXDLIN( 195)		if (::hx::IsNotNull( ::nme::app::Application_obj::pollClientList )) {
HXLINE( 195)			_hx_tmp = !(::nme::app::Application_obj::nmeQuitting);
            		}
            		else {
HXLINE( 195)			_hx_tmp = false;
            		}
HXDLIN( 195)		if (_hx_tmp) {
HXLINE( 197)			int _g = 0;
HXDLIN( 197)			::Array< ::Dynamic> _g1 = ::nme::app::Application_obj::pollClientList;
HXDLIN( 197)			while((_g < _g1->length)){
HXLINE( 197)				::Dynamic client = _g1->__get(_g);
HXDLIN( 197)				_g = (_g + 1);
HXLINE( 199)				Float wake = ::nme::app::IPollClient_obj::getNextWake(client,nextWake,timestamp);
HXLINE( 200)				if ((wake <= 0)) {
HXLINE( 201)					return ( (Float)(0) );
            				}
HXLINE( 202)				if ((wake < nextWake)) {
HXLINE( 203)					nextWake = wake;
            				}
            			}
            		}
HXLINE( 206)		return nextWake;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,getNextWake,return )

void Application_obj::setFixedOrientation(int inOrientation){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_211_setFixedOrientation)
HXDLIN( 211)		::nme::app::Application_obj::nme_stage_set_fixed_orientation(inOrientation);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,setFixedOrientation,(void))

void Application_obj::exit(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_216_exit)
HXDLIN( 216)		if (::hx::IsNotNull( ::nme::app::Application_obj::onQuit )) {
HXLINE( 225)			::nme::app::Application_obj::onQuit();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,exit,(void))

void Application_obj::forceClose(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_230_forceClose)
HXLINE( 232)		::cpp::Function< void  () > terminate = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_terminate",e8,98,6c,28),HX_("v",76,00,00,00),false);
HXLINE( 233)		terminate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,forceClose,(void))

void Application_obj::pause(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_238_pause)
HXDLIN( 238)		::nme::app::Application_obj::nme_pause_animation();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,pause,(void))

void Application_obj::setNativeWindow( ::Dynamic window){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_243_setNativeWindow)
HXDLIN( 243)		::nme::app::Application_obj::nme_set_native_window(::hx::DynamicPtr(window));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,setNativeWindow,(void))

void Application_obj::runOnMainThread( ::Dynamic inCallback){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_247_runOnMainThread)
HXLINE( 249)		::nme::app::Application_obj::mainThreadJobMutex->acquire();
HXLINE( 250)		::nme::app::Application_obj::mainThreadJobs->push(inCallback);
HXLINE( 251)		::nme::app::Application_obj::mainThreadJobMutex->release();
HXLINE( 255)		if (::hx::IsNotNull( ::nme::app::Application_obj::asyncPing )) {
HXLINE( 256)			::nme::app::Application_obj::asyncPing();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,runOnMainThread,(void))

void Application_obj::postUICallback( ::Dynamic inCallback){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_264_postUICallback)
HXDLIN( 264)		::nme::app::Application_obj::runOnMainThread(inCallback);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,postUICallback,(void))

void Application_obj::resume(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_270_resume)
HXDLIN( 270)		::nme::app::Application_obj::nme_resume_animation();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,resume,(void))

void Application_obj::setIcon(::String path){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_280_setIcon)
HXLINE( 282)		 ::Dynamic set_icon = ::nme::Loader_obj::load(HX_("nme_set_icon",cf,03,b7,b7),1);
HXLINE( 283)		set_icon(path);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Application_obj,setIcon,(void))

void Application_obj::setPackage(::String inCompany,::String inFile,::String inPack,::String inVersion){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_287_setPackage)
HXLINE( 288)		::nme::app::Application_obj::company = inCompany;
HXLINE( 289)		::nme::app::Application_obj::file = inFile;
HXLINE( 290)		::nme::app::Application_obj::packageName = inPack;
HXLINE( 291)		::nme::app::Application_obj::version = inVersion;
HXLINE( 293)		::nme::app::Application_obj::nme_set_package(inCompany,inFile,inPack,inVersion);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Application_obj,setPackage,(void))

::String Application_obj::get_build(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_329_get_build)
HXDLIN( 329)		return HX_("6.3.43",12,22,8d,35);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_build,return )

int Application_obj::get_ndllVersion(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_330_get_ndllVersion)
HXDLIN( 330)		return ::nme::app::Application_obj::nme_get_ndll_version();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_ndllVersion,return )

::String Application_obj::get_nmeStateVersion(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_331_get_nmeStateVersion)
HXDLIN( 331)		return ( (::String)(::nme::app::Application_obj::nme_get_nme_state_version()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_nmeStateVersion,return )

int Application_obj::get_bits(){
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_332_get_bits)
HXDLIN( 332)		return ::nme::app::Application_obj::nme_get_bits();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_bits,return )

::cpp::Function< void  (::String,::String,::String,::String) > Application_obj::nme_set_package;

::cpp::Function< void  () > Application_obj::nme_pause_animation;

::cpp::Function< void  () > Application_obj::nme_resume_animation;

::cpp::Function< int  () > Application_obj::nme_get_ndll_version;

 ::Dynamic Application_obj::nme_get_nme_state_version;

::cpp::Function< void  (int) > Application_obj::nme_stage_set_fixed_orientation;

::cpp::Function< int  () > Application_obj::nme_get_bits;

::cpp::Function< void  ( ::hx::Object *) > Application_obj::nme_set_native_window;


Application_obj::Application_obj()
{
}

bool Application_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { outValue = ( file ); return true; }
		if (HX_FIELD_EQ(inName,"bits") ) { outValue = ( inCallProp != ::hx::paccNever ? get_bits() : bits ); return true; }
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"build") ) { outValue = ( inCallProp != ::hx::paccNever ? get_build() : build ); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { outValue = close_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { outValue = pause_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onQuit") ) { outValue = ( onQuit ); return true; }
		if (HX_FIELD_EQ(inName,"resume") ) { outValue = resume_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"sIsInit") ) { outValue = ( sIsInit ); return true; }
		if (HX_FIELD_EQ(inName,"company") ) { outValue = ( company ); return true; }
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( version ); return true; }
		if (HX_FIELD_EQ(inName,"setIcon") ) { outValue = setIcon_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_bits") ) { outValue = get_bits_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nmeWindow") ) { outValue = ( nmeWindow ); return true; }
		if (HX_FIELD_EQ(inName,"initWidth") ) { outValue = ( initWidth ); return true; }
		if (HX_FIELD_EQ(inName,"asyncPing") ) { outValue = ( asyncPing ); return true; }
		if (HX_FIELD_EQ(inName,"get_build") ) { outValue = get_build_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"initHeight") ) { outValue = ( initHeight ); return true; }
		if (HX_FIELD_EQ(inName,"forceClose") ) { outValue = forceClose_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setPackage") ) { outValue = setPackage_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"packageName") ) { outValue = ( packageName ); return true; }
		if (HX_FIELD_EQ(inName,"ndllVersion") ) { outValue = ( inCallProp != ::hx::paccNever ? get_ndllVersion() : ndllVersion ); return true; }
		if (HX_FIELD_EQ(inName,"nmeQuitting") ) { outValue = ( nmeQuitting ); return true; }
		if (HX_FIELD_EQ(inName,"pollClients") ) { outValue = pollClients_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getNextWake") ) { outValue = getNextWake_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createWindow") ) { outValue = createWindow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nme_get_bits") ) { outValue = ( nme_get_bits ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"initFrameRate") ) { outValue = ( initFrameRate ); return true; }
		if (HX_FIELD_EQ(inName,"addPollClient") ) { outValue = addPollClient_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"nmeFrameHandle") ) { outValue = ( nmeFrameHandle ); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { outValue = ( silentRecreate ); return true; }
		if (HX_FIELD_EQ(inName,"pollClientList") ) { outValue = ( pollClientList ); return true; }
		if (HX_FIELD_EQ(inName,"mainThreadJobs") ) { outValue = ( mainThreadJobs ); return true; }
		if (HX_FIELD_EQ(inName,"pollThreadJobs") ) { outValue = pollThreadJobs_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"postUICallback") ) { outValue = postUICallback_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"nmeStateVersion") ) { outValue = ( inCallProp != ::hx::paccNever ? get_nmeStateVersion() : nmeStateVersion ); return true; }
		if (HX_FIELD_EQ(inName,"setNativeWindow") ) { outValue = setNativeWindow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"runOnMainThread") ) { outValue = runOnMainThread_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_ndllVersion") ) { outValue = get_ndllVersion_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nme_set_package") ) { outValue = ( nme_set_package ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"removePollClient") ) { outValue = removePollClient_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"mainThreadJobMutex") ) { outValue = ( mainThreadJobMutex ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"setFixedOrientation") ) { outValue = setFixedOrientation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_nmeStateVersion") ) { outValue = get_nmeStateVersion_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nme_pause_animation") ) { outValue = ( nme_pause_animation ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"nme_resume_animation") ) { outValue = ( nme_resume_animation ); return true; }
		if (HX_FIELD_EQ(inName,"nme_get_ndll_version") ) { outValue = ( nme_get_ndll_version ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"nme_set_native_window") ) { outValue = ( nme_set_native_window ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"nme_get_nme_state_version") ) { outValue = ( nme_get_nme_state_version ); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"nme_stage_set_fixed_orientation") ) { outValue = ( nme_stage_set_fixed_orientation ); return true; }
	}
	return false;
}

bool Application_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { file=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"bits") ) { bits=ioValue.Cast< int >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"build") ) { build=ioValue.Cast< ::String >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onQuit") ) { onQuit=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"sIsInit") ) { sIsInit=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"company") ) { company=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nmeWindow") ) { nmeWindow=ioValue.Cast<  ::nme::app::Window >(); return true; }
		if (HX_FIELD_EQ(inName,"initWidth") ) { initWidth=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"asyncPing") ) { asyncPing=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"initHeight") ) { initHeight=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"packageName") ) { packageName=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"ndllVersion") ) { ndllVersion=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"nmeQuitting") ) { nmeQuitting=ioValue.Cast< bool >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"nme_get_bits") ) { nme_get_bits=ioValue.Cast< ::cpp::Function< int  () > >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"initFrameRate") ) { initFrameRate=ioValue.Cast< Float >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"nmeFrameHandle") ) { nmeFrameHandle=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { silentRecreate=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"pollClientList") ) { pollClientList=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"mainThreadJobs") ) { mainThreadJobs=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"nmeStateVersion") ) { nmeStateVersion=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_set_package") ) { nme_set_package=ioValue.Cast< ::cpp::Function< void  (::String,::String,::String,::String) > >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"mainThreadJobMutex") ) { mainThreadJobMutex=ioValue.Cast<  ::sys::thread::Mutex >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"nme_pause_animation") ) { nme_pause_animation=ioValue.Cast< ::cpp::Function< void  () > >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"nme_resume_animation") ) { nme_resume_animation=ioValue.Cast< ::cpp::Function< void  () > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_get_ndll_version") ) { nme_get_ndll_version=ioValue.Cast< ::cpp::Function< int  () > >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"nme_set_native_window") ) { nme_set_native_window=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *) > >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"nme_get_nme_state_version") ) { nme_get_nme_state_version=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"nme_stage_set_fixed_orientation") ) { nme_stage_set_fixed_orientation=ioValue.Cast< ::cpp::Function< void  (int) > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Application_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Application_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &Application_obj::OrientationPortrait,HX_("OrientationPortrait",2b,94,80,f0)},
	{::hx::fsInt,(void *) &Application_obj::OrientationPortraitUpsideDown,HX_("OrientationPortraitUpsideDown",ff,1e,9c,fe)},
	{::hx::fsInt,(void *) &Application_obj::OrientationLandscapeRight,HX_("OrientationLandscapeRight",71,bc,02,9a)},
	{::hx::fsInt,(void *) &Application_obj::OrientationLandscapeLeft,HX_("OrientationLandscapeLeft",12,41,e3,43)},
	{::hx::fsInt,(void *) &Application_obj::OrientationFaceUp,HX_("OrientationFaceUp",28,3f,72,08)},
	{::hx::fsInt,(void *) &Application_obj::OrientationFaceDown,HX_("OrientationFaceDown",6f,5e,a1,ad)},
	{::hx::fsInt,(void *) &Application_obj::OrientationPortraitAny,HX_("OrientationPortraitAny",81,cb,b1,4f)},
	{::hx::fsInt,(void *) &Application_obj::OrientationLandscapeAny,HX_("OrientationLandscapeAny",41,ec,09,4c)},
	{::hx::fsInt,(void *) &Application_obj::OrientationAny,HX_("OrientationAny",1c,7a,8d,d9)},
	{::hx::fsInt,(void *) &Application_obj::FULLSCREEN,HX_("FULLSCREEN",3b,ae,bd,eb)},
	{::hx::fsInt,(void *) &Application_obj::BORDERLESS,HX_("BORDERLESS",45,ba,7a,09)},
	{::hx::fsInt,(void *) &Application_obj::RESIZABLE,HX_("RESIZABLE",4b,a7,a8,a4)},
	{::hx::fsInt,(void *) &Application_obj::HARDWARE,HX_("HARDWARE",a8,72,59,cf)},
	{::hx::fsInt,(void *) &Application_obj::VSYNC,HX_("VSYNC",b1,65,96,bb)},
	{::hx::fsInt,(void *) &Application_obj::HW_AA,HX_("HW_AA",50,a3,a3,ae)},
	{::hx::fsInt,(void *) &Application_obj::HW_AA_HIRES,HX_("HW_AA_HIRES",70,13,75,95)},
	{::hx::fsInt,(void *) &Application_obj::DEPTH_BUFFER,HX_("DEPTH_BUFFER",1c,84,06,89)},
	{::hx::fsInt,(void *) &Application_obj::STENCIL_BUFFER,HX_("STENCIL_BUFFER",43,1c,95,64)},
	{::hx::fsInt,(void *) &Application_obj::SINGLE_INSTANCE,HX_("SINGLE_INSTANCE",6c,03,d6,5e)},
	{::hx::fsInt,(void *) &Application_obj::SCALE_BASE,HX_("SCALE_BASE",46,45,04,e1)},
	{::hx::fsInt,(void *) &Application_obj::HARDWARE_METAL,HX_("HARDWARE_METAL",d0,81,ae,b0)},
	{::hx::fsInt,(void *) &Application_obj::ALWAYS_ON_TOP,HX_("ALWAYS_ON_TOP",c5,e6,70,e7)},
	{::hx::fsInt,(void *) &Application_obj::HIGH_DPI,HX_("HIGH_DPI",a0,7c,fe,08)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Application_obj::nmeFrameHandle,HX_("nmeFrameHandle",0f,6a,6d,c4)},
	{::hx::fsObject /*  ::nme::app::Window */ ,(void *) &Application_obj::nmeWindow,HX_("nmeWindow",d6,97,4e,ed)},
	{::hx::fsBool,(void *) &Application_obj::silentRecreate,HX_("silentRecreate",a4,62,e5,0f)},
	{::hx::fsBool,(void *) &Application_obj::sIsInit,HX_("sIsInit",ed,cc,da,45)},
	{::hx::fsInt,(void *) &Application_obj::initHeight,HX_("initHeight",17,63,91,06)},
	{::hx::fsInt,(void *) &Application_obj::initWidth,HX_("initWidth",d6,d0,f4,e5)},
	{::hx::fsFloat,(void *) &Application_obj::initFrameRate,HX_("initFrameRate",7d,d4,24,b4)},
	{::hx::fsString,(void *) &Application_obj::company,HX_("company",3d,15,69,83)},
	{::hx::fsString,(void *) &Application_obj::version,HX_("version",18,e7,f1,7c)},
	{::hx::fsString,(void *) &Application_obj::packageName,HX_("packageName",f1,04,ad,04)},
	{::hx::fsString,(void *) &Application_obj::file,HX_("file",7c,ce,bb,43)},
	{::hx::fsString,(void *) &Application_obj::build,HX_("build",2e,db,ea,ba)},
	{::hx::fsInt,(void *) &Application_obj::ndllVersion,HX_("ndllVersion",82,69,0c,e6)},
	{::hx::fsString,(void *) &Application_obj::nmeStateVersion,HX_("nmeStateVersion",6d,e1,7a,6f)},
	{::hx::fsInt,(void *) &Application_obj::bits,HX_("bits",06,fb,16,41)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Application_obj::onQuit,HX_("onQuit",8e,48,94,ed)},
	{::hx::fsBool,(void *) &Application_obj::nmeQuitting,HX_("nmeQuitting",a3,e9,bb,a5)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Application_obj::asyncPing,HX_("asyncPing",ce,6b,e5,77)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(void *) &Application_obj::pollClientList,HX_("pollClientList",68,fb,29,ac)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(void *) &Application_obj::mainThreadJobs,HX_("mainThreadJobs",59,1f,b1,e1)},
	{::hx::fsObject /*  ::sys::thread::Mutex */ ,(void *) &Application_obj::mainThreadJobMutex,HX_("mainThreadJobMutex",45,89,4a,25)},
	{::hx::fsObject /* ::cpp::Function< void  (::String,::String,::String,::String) > */ ,(void *) &Application_obj::nme_set_package,HX_("nme_set_package",f0,e8,fe,a4)},
	{::hx::fsObject /* ::cpp::Function< void  () > */ ,(void *) &Application_obj::nme_pause_animation,HX_("nme_pause_animation",02,57,8e,6f)},
	{::hx::fsObject /* ::cpp::Function< void  () > */ ,(void *) &Application_obj::nme_resume_animation,HX_("nme_resume_animation",0b,17,60,4c)},
	{::hx::fsObject /* ::cpp::Function< int  () > */ ,(void *) &Application_obj::nme_get_ndll_version,HX_("nme_get_ndll_version",b1,93,67,6f)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Application_obj::nme_get_nme_state_version,HX_("nme_get_nme_state_version",8f,fd,cc,c2)},
	{::hx::fsObject /* ::cpp::Function< void  (int) > */ ,(void *) &Application_obj::nme_stage_set_fixed_orientation,HX_("nme_stage_set_fixed_orientation",ee,db,66,5d)},
	{::hx::fsObject /* ::cpp::Function< int  () > */ ,(void *) &Application_obj::nme_get_bits,HX_("nme_get_bits",e8,bd,bd,04)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *) > */ ,(void *) &Application_obj::nme_set_native_window,HX_("nme_set_native_window",c2,f5,5f,9e)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Application_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Application_obj::OrientationPortrait,"OrientationPortrait");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationPortraitUpsideDown,"OrientationPortraitUpsideDown");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationLandscapeRight,"OrientationLandscapeRight");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationLandscapeLeft,"OrientationLandscapeLeft");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationFaceUp,"OrientationFaceUp");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationFaceDown,"OrientationFaceDown");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationPortraitAny,"OrientationPortraitAny");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationLandscapeAny,"OrientationLandscapeAny");
	HX_MARK_MEMBER_NAME(Application_obj::OrientationAny,"OrientationAny");
	HX_MARK_MEMBER_NAME(Application_obj::FULLSCREEN,"FULLSCREEN");
	HX_MARK_MEMBER_NAME(Application_obj::BORDERLESS,"BORDERLESS");
	HX_MARK_MEMBER_NAME(Application_obj::RESIZABLE,"RESIZABLE");
	HX_MARK_MEMBER_NAME(Application_obj::HARDWARE,"HARDWARE");
	HX_MARK_MEMBER_NAME(Application_obj::VSYNC,"VSYNC");
	HX_MARK_MEMBER_NAME(Application_obj::HW_AA,"HW_AA");
	HX_MARK_MEMBER_NAME(Application_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_MARK_MEMBER_NAME(Application_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_MARK_MEMBER_NAME(Application_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_MARK_MEMBER_NAME(Application_obj::SINGLE_INSTANCE,"SINGLE_INSTANCE");
	HX_MARK_MEMBER_NAME(Application_obj::SCALE_BASE,"SCALE_BASE");
	HX_MARK_MEMBER_NAME(Application_obj::HARDWARE_METAL,"HARDWARE_METAL");
	HX_MARK_MEMBER_NAME(Application_obj::ALWAYS_ON_TOP,"ALWAYS_ON_TOP");
	HX_MARK_MEMBER_NAME(Application_obj::HIGH_DPI,"HIGH_DPI");
	HX_MARK_MEMBER_NAME(Application_obj::nmeFrameHandle,"nmeFrameHandle");
	HX_MARK_MEMBER_NAME(Application_obj::nmeWindow,"nmeWindow");
	HX_MARK_MEMBER_NAME(Application_obj::silentRecreate,"silentRecreate");
	HX_MARK_MEMBER_NAME(Application_obj::sIsInit,"sIsInit");
	HX_MARK_MEMBER_NAME(Application_obj::initHeight,"initHeight");
	HX_MARK_MEMBER_NAME(Application_obj::initWidth,"initWidth");
	HX_MARK_MEMBER_NAME(Application_obj::initFrameRate,"initFrameRate");
	HX_MARK_MEMBER_NAME(Application_obj::company,"company");
	HX_MARK_MEMBER_NAME(Application_obj::version,"version");
	HX_MARK_MEMBER_NAME(Application_obj::packageName,"packageName");
	HX_MARK_MEMBER_NAME(Application_obj::file,"file");
	HX_MARK_MEMBER_NAME(Application_obj::build,"build");
	HX_MARK_MEMBER_NAME(Application_obj::ndllVersion,"ndllVersion");
	HX_MARK_MEMBER_NAME(Application_obj::nmeStateVersion,"nmeStateVersion");
	HX_MARK_MEMBER_NAME(Application_obj::bits,"bits");
	HX_MARK_MEMBER_NAME(Application_obj::onQuit,"onQuit");
	HX_MARK_MEMBER_NAME(Application_obj::nmeQuitting,"nmeQuitting");
	HX_MARK_MEMBER_NAME(Application_obj::asyncPing,"asyncPing");
	HX_MARK_MEMBER_NAME(Application_obj::pollClientList,"pollClientList");
	HX_MARK_MEMBER_NAME(Application_obj::mainThreadJobs,"mainThreadJobs");
	HX_MARK_MEMBER_NAME(Application_obj::mainThreadJobMutex,"mainThreadJobMutex");
	HX_MARK_MEMBER_NAME(Application_obj::nme_set_package,"nme_set_package");
	HX_MARK_MEMBER_NAME(Application_obj::nme_pause_animation,"nme_pause_animation");
	HX_MARK_MEMBER_NAME(Application_obj::nme_resume_animation,"nme_resume_animation");
	HX_MARK_MEMBER_NAME(Application_obj::nme_get_ndll_version,"nme_get_ndll_version");
	HX_MARK_MEMBER_NAME(Application_obj::nme_get_nme_state_version,"nme_get_nme_state_version");
	HX_MARK_MEMBER_NAME(Application_obj::nme_stage_set_fixed_orientation,"nme_stage_set_fixed_orientation");
	HX_MARK_MEMBER_NAME(Application_obj::nme_get_bits,"nme_get_bits");
	HX_MARK_MEMBER_NAME(Application_obj::nme_set_native_window,"nme_set_native_window");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Application_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationPortrait,"OrientationPortrait");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationPortraitUpsideDown,"OrientationPortraitUpsideDown");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationLandscapeRight,"OrientationLandscapeRight");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationLandscapeLeft,"OrientationLandscapeLeft");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationFaceUp,"OrientationFaceUp");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationFaceDown,"OrientationFaceDown");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationPortraitAny,"OrientationPortraitAny");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationLandscapeAny,"OrientationLandscapeAny");
	HX_VISIT_MEMBER_NAME(Application_obj::OrientationAny,"OrientationAny");
	HX_VISIT_MEMBER_NAME(Application_obj::FULLSCREEN,"FULLSCREEN");
	HX_VISIT_MEMBER_NAME(Application_obj::BORDERLESS,"BORDERLESS");
	HX_VISIT_MEMBER_NAME(Application_obj::RESIZABLE,"RESIZABLE");
	HX_VISIT_MEMBER_NAME(Application_obj::HARDWARE,"HARDWARE");
	HX_VISIT_MEMBER_NAME(Application_obj::VSYNC,"VSYNC");
	HX_VISIT_MEMBER_NAME(Application_obj::HW_AA,"HW_AA");
	HX_VISIT_MEMBER_NAME(Application_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_VISIT_MEMBER_NAME(Application_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_VISIT_MEMBER_NAME(Application_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_VISIT_MEMBER_NAME(Application_obj::SINGLE_INSTANCE,"SINGLE_INSTANCE");
	HX_VISIT_MEMBER_NAME(Application_obj::SCALE_BASE,"SCALE_BASE");
	HX_VISIT_MEMBER_NAME(Application_obj::HARDWARE_METAL,"HARDWARE_METAL");
	HX_VISIT_MEMBER_NAME(Application_obj::ALWAYS_ON_TOP,"ALWAYS_ON_TOP");
	HX_VISIT_MEMBER_NAME(Application_obj::HIGH_DPI,"HIGH_DPI");
	HX_VISIT_MEMBER_NAME(Application_obj::nmeFrameHandle,"nmeFrameHandle");
	HX_VISIT_MEMBER_NAME(Application_obj::nmeWindow,"nmeWindow");
	HX_VISIT_MEMBER_NAME(Application_obj::silentRecreate,"silentRecreate");
	HX_VISIT_MEMBER_NAME(Application_obj::sIsInit,"sIsInit");
	HX_VISIT_MEMBER_NAME(Application_obj::initHeight,"initHeight");
	HX_VISIT_MEMBER_NAME(Application_obj::initWidth,"initWidth");
	HX_VISIT_MEMBER_NAME(Application_obj::initFrameRate,"initFrameRate");
	HX_VISIT_MEMBER_NAME(Application_obj::company,"company");
	HX_VISIT_MEMBER_NAME(Application_obj::version,"version");
	HX_VISIT_MEMBER_NAME(Application_obj::packageName,"packageName");
	HX_VISIT_MEMBER_NAME(Application_obj::file,"file");
	HX_VISIT_MEMBER_NAME(Application_obj::build,"build");
	HX_VISIT_MEMBER_NAME(Application_obj::ndllVersion,"ndllVersion");
	HX_VISIT_MEMBER_NAME(Application_obj::nmeStateVersion,"nmeStateVersion");
	HX_VISIT_MEMBER_NAME(Application_obj::bits,"bits");
	HX_VISIT_MEMBER_NAME(Application_obj::onQuit,"onQuit");
	HX_VISIT_MEMBER_NAME(Application_obj::nmeQuitting,"nmeQuitting");
	HX_VISIT_MEMBER_NAME(Application_obj::asyncPing,"asyncPing");
	HX_VISIT_MEMBER_NAME(Application_obj::pollClientList,"pollClientList");
	HX_VISIT_MEMBER_NAME(Application_obj::mainThreadJobs,"mainThreadJobs");
	HX_VISIT_MEMBER_NAME(Application_obj::mainThreadJobMutex,"mainThreadJobMutex");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_set_package,"nme_set_package");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_pause_animation,"nme_pause_animation");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_resume_animation,"nme_resume_animation");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_get_ndll_version,"nme_get_ndll_version");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_get_nme_state_version,"nme_get_nme_state_version");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_stage_set_fixed_orientation,"nme_stage_set_fixed_orientation");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_get_bits,"nme_get_bits");
	HX_VISIT_MEMBER_NAME(Application_obj::nme_set_native_window,"nme_set_native_window");
};

#endif

::hx::Class Application_obj::__mClass;

static ::String Application_obj_sStaticFields[] = {
	HX_("OrientationPortrait",2b,94,80,f0),
	HX_("OrientationPortraitUpsideDown",ff,1e,9c,fe),
	HX_("OrientationLandscapeRight",71,bc,02,9a),
	HX_("OrientationLandscapeLeft",12,41,e3,43),
	HX_("OrientationFaceUp",28,3f,72,08),
	HX_("OrientationFaceDown",6f,5e,a1,ad),
	HX_("OrientationPortraitAny",81,cb,b1,4f),
	HX_("OrientationLandscapeAny",41,ec,09,4c),
	HX_("OrientationAny",1c,7a,8d,d9),
	HX_("FULLSCREEN",3b,ae,bd,eb),
	HX_("BORDERLESS",45,ba,7a,09),
	HX_("RESIZABLE",4b,a7,a8,a4),
	HX_("HARDWARE",a8,72,59,cf),
	HX_("VSYNC",b1,65,96,bb),
	HX_("HW_AA",50,a3,a3,ae),
	HX_("HW_AA_HIRES",70,13,75,95),
	HX_("DEPTH_BUFFER",1c,84,06,89),
	HX_("STENCIL_BUFFER",43,1c,95,64),
	HX_("SINGLE_INSTANCE",6c,03,d6,5e),
	HX_("SCALE_BASE",46,45,04,e1),
	HX_("HARDWARE_METAL",d0,81,ae,b0),
	HX_("ALWAYS_ON_TOP",c5,e6,70,e7),
	HX_("HIGH_DPI",a0,7c,fe,08),
	HX_("nmeFrameHandle",0f,6a,6d,c4),
	HX_("nmeWindow",d6,97,4e,ed),
	HX_("silentRecreate",a4,62,e5,0f),
	HX_("sIsInit",ed,cc,da,45),
	HX_("initHeight",17,63,91,06),
	HX_("initWidth",d6,d0,f4,e5),
	HX_("initFrameRate",7d,d4,24,b4),
	HX_("company",3d,15,69,83),
	HX_("version",18,e7,f1,7c),
	HX_("packageName",f1,04,ad,04),
	HX_("file",7c,ce,bb,43),
	HX_("build",2e,db,ea,ba),
	HX_("ndllVersion",82,69,0c,e6),
	HX_("nmeStateVersion",6d,e1,7a,6f),
	HX_("bits",06,fb,16,41),
	HX_("onQuit",8e,48,94,ed),
	HX_("nmeQuitting",a3,e9,bb,a5),
	HX_("asyncPing",ce,6b,e5,77),
	HX_("pollClientList",68,fb,29,ac),
	HX_("mainThreadJobs",59,1f,b1,e1),
	HX_("mainThreadJobMutex",45,89,4a,25),
	HX_("createWindow",0c,d4,e1,74),
	HX_("close",b8,17,63,48),
	HX_("addPollClient",6b,bf,c4,ec),
	HX_("removePollClient",4e,93,24,3c),
	HX_("pollThreadJobs",df,68,c1,bd),
	HX_("pollClients",49,b7,8b,a9),
	HX_("getNextWake",6d,c5,b2,20),
	HX_("setFixedOrientation",7e,35,51,c6),
	HX_("exit",1e,f7,1d,43),
	HX_("forceClose",cd,01,38,df),
	HX_("pause",f6,d6,57,bd),
	HX_("setNativeWindow",a9,6f,59,26),
	HX_("runOnMainThread",cd,b1,b5,ce),
	HX_("postUICallback",99,d0,5a,b0),
	HX_("resume",ad,69,84,08),
	HX_("setIcon",3b,28,37,0b),
	HX_("setPackage",04,50,90,94),
	HX_("get_build",85,37,94,fe),
	HX_("get_ndllVersion",19,21,ee,a6),
	HX_("get_nmeStateVersion",84,b0,85,fa),
	HX_("get_bits",8f,b6,d1,c0),
	HX_("nme_set_package",f0,e8,fe,a4),
	HX_("nme_pause_animation",02,57,8e,6f),
	HX_("nme_resume_animation",0b,17,60,4c),
	HX_("nme_get_ndll_version",b1,93,67,6f),
	HX_("nme_get_nme_state_version",8f,fd,cc,c2),
	HX_("nme_stage_set_fixed_orientation",ee,db,66,5d),
	HX_("nme_get_bits",e8,bd,bd,04),
	HX_("nme_set_native_window",c2,f5,5f,9e),
	::String(null())
};

void Application_obj::__register()
{
	Application_obj _hx_dummy;
	Application_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.app.Application",bb,86,3e,77);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Application_obj::__GetStatic;
	__mClass->mSetStaticField = &Application_obj::__SetStatic;
	__mClass->mMarkFunc = Application_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Application_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Application_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Application_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Application_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Application_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Application_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_37_boot)
HXDLIN(  37)		OrientationPortrait = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_38_boot)
HXDLIN(  38)		OrientationPortraitUpsideDown = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_39_boot)
HXDLIN(  39)		OrientationLandscapeRight = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_40_boot)
HXDLIN(  40)		OrientationLandscapeLeft = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_41_boot)
HXDLIN(  41)		OrientationFaceUp = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_42_boot)
HXDLIN(  42)		OrientationFaceDown = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_43_boot)
HXDLIN(  43)		OrientationPortraitAny = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_44_boot)
HXDLIN(  44)		OrientationLandscapeAny = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_45_boot)
HXDLIN(  45)		OrientationAny = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_48_boot)
HXDLIN(  48)		FULLSCREEN = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_49_boot)
HXDLIN(  49)		BORDERLESS = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_50_boot)
HXDLIN(  50)		RESIZABLE = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_51_boot)
HXDLIN(  51)		HARDWARE = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_52_boot)
HXDLIN(  52)		VSYNC = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_53_boot)
HXDLIN(  53)		HW_AA = 32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_54_boot)
HXDLIN(  54)		HW_AA_HIRES = 96;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_55_boot)
HXDLIN(  55)		DEPTH_BUFFER = 512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_56_boot)
HXDLIN(  56)		STENCIL_BUFFER = 1024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_57_boot)
HXDLIN(  57)		SINGLE_INSTANCE = 2048;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_58_boot)
HXDLIN(  58)		SCALE_BASE = 4096;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_59_boot)
HXDLIN(  59)		HARDWARE_METAL = 65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_60_boot)
HXDLIN(  60)		ALWAYS_ON_TOP = 131072;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_61_boot)
HXDLIN(  61)		HIGH_DPI = 262144;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_63_boot)
HXDLIN(  63)		nmeFrameHandle = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_64_boot)
HXDLIN(  64)		nmeWindow = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_65_boot)
HXDLIN(  65)		silentRecreate = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_66_boot)
HXDLIN(  66)		sIsInit = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_83_boot)
HXDLIN(  83)		onQuit = ::nme::app::Application_obj::close_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_84_boot)
HXDLIN(  84)		nmeQuitting = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_85_boot)
HXDLIN(  85)		asyncPing = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_88_boot)
HXDLIN(  88)		mainThreadJobs = ::Array_obj< ::Dynamic>::__new(0);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_190218778fd2b94c_90_boot)
HXDLIN(  90)		mainThreadJobMutex =  ::sys::thread::Mutex_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_set_package = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_set_package",f0,e8,fe,a4),HX_("ssssv",36,e7,6f,83),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_pause_animation = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_pause_animation",02,57,8e,6f),HX_("v",76,00,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_resume_animation = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_resume_animation",0b,17,60,4c),HX_("v",76,00,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_get_ndll_version = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_get_ndll_version",b1,93,67,6f),HX_("i",69,00,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_190218778fd2b94c_343_boot)
HXDLIN( 343)		nme_get_nme_state_version = ::nme::Loader_obj::load(HX_("nme_get_nme_state_version",8f,fd,cc,c2),0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_stage_set_fixed_orientation = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_stage_set_fixed_orientation",ee,db,66,5d),HX_("iv",ed,5b,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_get_bits = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_get_bits",e8,bd,bd,04),HX_("i",69,00,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_cb5a70b1fd1c19f7_9_boot)
HXDLIN(   9)		nme_set_native_window = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_set_native_window",c2,f5,5f,9e),HX_("ov",27,61,00,00),false);
            	}
}

} // end namespace nme
} // end namespace app
