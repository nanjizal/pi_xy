// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_algo_SquareSampler
#include <pi_xy/algo/SquareSampler.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_6_get_x0,"pi_xy.algo.SquareSampler","get_x0",0x12b4de58,"pi_xy.algo.SquareSampler.get_x0","pi_xy/algo/SquareSampler.hx",6,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_10_get_x1,"pi_xy.algo.SquareSampler","get_x1",0x12b4de59,"pi_xy.algo.SquareSampler.get_x1","pi_xy/algo/SquareSampler.hx",10,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_14_get_x2,"pi_xy.algo.SquareSampler","get_x2",0x12b4de5a,"pi_xy.algo.SquareSampler.get_x2","pi_xy/algo/SquareSampler.hx",14,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_18_get_x3,"pi_xy.algo.SquareSampler","get_x3",0x12b4de5b,"pi_xy.algo.SquareSampler.get_x3","pi_xy/algo/SquareSampler.hx",18,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_23_get_y0,"pi_xy.algo.SquareSampler","get_y0",0x12b4df37,"pi_xy.algo.SquareSampler.get_y0","pi_xy/algo/SquareSampler.hx",23,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_27_get_y1,"pi_xy.algo.SquareSampler","get_y1",0x12b4df38,"pi_xy.algo.SquareSampler.get_y1","pi_xy/algo/SquareSampler.hx",27,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_31_get_y2,"pi_xy.algo.SquareSampler","get_y2",0x12b4df39,"pi_xy.algo.SquareSampler.get_y2","pi_xy/algo/SquareSampler.hx",31,0xcc159e47)
HX_LOCAL_STACK_FRAME(_hx_pos_da419ef19347e080_35_get_y3,"pi_xy.algo.SquareSampler","get_y3",0x12b4df3a,"pi_xy.algo.SquareSampler.get_y3","pi_xy/algo/SquareSampler.hx",35,0xcc159e47)
namespace pi_xy{
namespace algo{

void SquareSampler_obj::__construct() { }

Dynamic SquareSampler_obj::__CreateEmpty() { return new SquareSampler_obj; }

void *SquareSampler_obj::_hx_vtable = 0;

Dynamic SquareSampler_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SquareSampler_obj > _hx_result = new SquareSampler_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SquareSampler_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x06f57cd5;
}

Float SquareSampler_obj::x0;

Float SquareSampler_obj::get_x0(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_6_get_x0)
HXDLIN(   6)		return ((Float)-0.353553390593273564);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_x0,return )

Float SquareSampler_obj::x1;

Float SquareSampler_obj::get_x1(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_10_get_x1)
HXDLIN(  10)		return ((Float)-0.612372435695794359);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_x1,return )

Float SquareSampler_obj::x2;

Float SquareSampler_obj::get_x2(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_14_get_x2)
HXDLIN(  14)		return ((Float)-0.707106781186547462);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_x2,return )

Float SquareSampler_obj::x3;

Float SquareSampler_obj::get_x3(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_18_get_x3)
HXDLIN(  18)		return ((Float)-0.612372435695794581);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_x3,return )

Float SquareSampler_obj::y0;

Float SquareSampler_obj::get_y0(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_23_get_y0)
HXDLIN(  23)		return ((Float)0.61237243569579447);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_y0,return )

Float SquareSampler_obj::y1;

Float SquareSampler_obj::get_y1(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_27_get_y1)
HXDLIN(  27)		return ((Float)0.353553390593273953);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_y1,return )

Float SquareSampler_obj::y2;

Float SquareSampler_obj::get_y2(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_31_get_y2)
HXDLIN(  31)		return ((Float)8.65956056235493163e-17);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_y2,return )

Float SquareSampler_obj::y3;

Float SquareSampler_obj::get_y3(){
            	HX_STACKFRAME(&_hx_pos_da419ef19347e080_35_get_y3)
HXDLIN(  35)		return ((Float)-0.353553390593273509);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SquareSampler_obj,get_y3,return )


SquareSampler_obj::SquareSampler_obj()
{
}

bool SquareSampler_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_x0() : x0 ); return true; }
		if (HX_FIELD_EQ(inName,"x1") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_x1() : x1 ); return true; }
		if (HX_FIELD_EQ(inName,"x2") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_x2() : x2 ); return true; }
		if (HX_FIELD_EQ(inName,"x3") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_x3() : x3 ); return true; }
		if (HX_FIELD_EQ(inName,"y0") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_y0() : y0 ); return true; }
		if (HX_FIELD_EQ(inName,"y1") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_y1() : y1 ); return true; }
		if (HX_FIELD_EQ(inName,"y2") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_y2() : y2 ); return true; }
		if (HX_FIELD_EQ(inName,"y3") ) { outValue = ( inCallProp == ::hx::paccAlways ? get_y3() : y3 ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_x0") ) { outValue = get_x0_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_x1") ) { outValue = get_x1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_x2") ) { outValue = get_x2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_x3") ) { outValue = get_x3_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y0") ) { outValue = get_y0_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y1") ) { outValue = get_y1_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y2") ) { outValue = get_y2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_y3") ) { outValue = get_y3_dyn(); return true; }
	}
	return false;
}

bool SquareSampler_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"x0") ) { x0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"x1") ) { x1=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"x2") ) { x2=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"x3") ) { x3=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y0") ) { y0=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y1") ) { y1=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y2") ) { y2=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"y3") ) { y3=ioValue.Cast< Float >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SquareSampler_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo SquareSampler_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &SquareSampler_obj::x0,HX_("x0",b8,68,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::x1,HX_("x1",b9,68,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::x2,HX_("x2",ba,68,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::x3,HX_("x3",bb,68,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::y0,HX_("y0",97,69,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::y1,HX_("y1",98,69,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::y2,HX_("y2",99,69,00,00)},
	{::hx::fsFloat,(void *) &SquareSampler_obj::y3,HX_("y3",9a,69,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void SquareSampler_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SquareSampler_obj::x0,"x0");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::x1,"x1");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::x2,"x2");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::x3,"x3");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::y0,"y0");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::y1,"y1");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::y2,"y2");
	HX_MARK_MEMBER_NAME(SquareSampler_obj::y3,"y3");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SquareSampler_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::x0,"x0");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::x1,"x1");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::x2,"x2");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::x3,"x3");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::y0,"y0");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::y1,"y1");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::y2,"y2");
	HX_VISIT_MEMBER_NAME(SquareSampler_obj::y3,"y3");
};

#endif

::hx::Class SquareSampler_obj::__mClass;

static ::String SquareSampler_obj_sStaticFields[] = {
	HX_("x0",b8,68,00,00),
	HX_("get_x0",01,00,30,a3),
	HX_("x1",b9,68,00,00),
	HX_("get_x1",02,00,30,a3),
	HX_("x2",ba,68,00,00),
	HX_("get_x2",03,00,30,a3),
	HX_("x3",bb,68,00,00),
	HX_("get_x3",04,00,30,a3),
	HX_("y0",97,69,00,00),
	HX_("get_y0",e0,00,30,a3),
	HX_("y1",98,69,00,00),
	HX_("get_y1",e1,00,30,a3),
	HX_("y2",99,69,00,00),
	HX_("get_y2",e2,00,30,a3),
	HX_("y3",9a,69,00,00),
	HX_("get_y3",e3,00,30,a3),
	::String(null())
};

void SquareSampler_obj::__register()
{
	SquareSampler_obj _hx_dummy;
	SquareSampler_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.algo.SquareSampler",37,9d,6a,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SquareSampler_obj::__GetStatic;
	__mClass->mSetStaticField = &SquareSampler_obj::__SetStatic;
	__mClass->mMarkFunc = SquareSampler_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SquareSampler_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SquareSampler_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SquareSampler_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SquareSampler_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SquareSampler_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace algo
