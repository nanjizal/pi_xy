// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_QuadShape_
#define INCLUDED_pi_xy_triangleGML_triGML_shape_contour_QuadShape_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_pi_xy_triangleGML_triGML_BasicShape
#include <pi_xy/triangleGML/triGML/BasicShape.h>
#endif
HX_DECLARE_CLASS3(pi_xy,triangleGML,triGML,BasicShape)
HX_DECLARE_CLASS3(pi_xy,triangleGML,triGML,GroupShape)
HX_DECLARE_CLASS3(pi_xy,triangleGML,triGML,ShapeInterface)
HX_DECLARE_CLASS5(pi_xy,triangleGML,triGML,shape,contour,QuadShape_)

namespace pi_xy{
namespace triangleGML{
namespace triGML{
namespace shape{
namespace contour{


class HXCPP_CLASS_ATTRIBUTES QuadShape__obj : public  ::pi_xy::triangleGML::triGML::BasicShape_obj
{
	public:
		typedef  ::pi_xy::triangleGML::triGML::BasicShape_obj super;
		typedef QuadShape__obj OBJ_;
		QuadShape__obj();

	public:
		enum { _hx_ClassId = 0x3b57bb90 };

		void __construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_aX,::hx::Null< Float >  __o_aY,::hx::Null< Float >  __o_bX,::hx::Null< Float >  __o_bY,::hx::Null< Float >  __o_cX,::hx::Null< Float >  __o_cY,::hx::Null< Float >  __o_dX,::hx::Null< Float >  __o_dY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pi_xy.triangleGML.triGML.shape.contour.QuadShape_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pi_xy.triangleGML.triGML.shape.contour.QuadShape_"); }

		//~QuadShape__obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("QuadShape_",65,da,22,7c); }

		Float aX;
		Float aY;
		Float bX;
		Float bY;
		Float cX;
		Float cY;
		Float dX;
		Float dY;
		virtual void setParameter(::String name,::String value);

};

} // end namespace pi_xy
} // end namespace triangleGML
} // end namespace triGML
} // end namespace shape
} // end namespace contour

#endif /* INCLUDED_pi_xy_triangleGML_triGML_shape_contour_QuadShape_ */ 
