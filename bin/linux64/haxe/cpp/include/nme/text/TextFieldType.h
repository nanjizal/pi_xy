// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_text_TextFieldType
#define INCLUDED_nme_text_TextFieldType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,text,TextFieldType)
namespace nme{
namespace text{


class TextFieldType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef TextFieldType_obj OBJ_;

	public:
		TextFieldType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.text.TextFieldType",ae,6a,be,8c); }
		::String __ToString() const { return HX_("TextFieldType.",47,c8,53,7b) + _hx_tag; }

		static ::nme::text::TextFieldType DYNAMIC;
		static inline ::nme::text::TextFieldType DYNAMIC_dyn() { return DYNAMIC; }
		static ::nme::text::TextFieldType INPUT;
		static inline ::nme::text::TextFieldType INPUT_dyn() { return INPUT; }
};

} // end namespace nme
} // end namespace text

#endif /* INCLUDED_nme_text_TextFieldType */ 
