// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_display_GradientType
#define INCLUDED_nme_display_GradientType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,display,GradientType)
namespace nme{
namespace display{


class GradientType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef GradientType_obj OBJ_;

	public:
		GradientType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.display.GradientType",be,88,d0,db); }
		::String __ToString() const { return HX_("GradientType.",04,f0,81,94) + _hx_tag; }

		static ::nme::display::GradientType LINEAR;
		static inline ::nme::display::GradientType LINEAR_dyn() { return LINEAR; }
		static ::nme::display::GradientType RADIAL;
		static inline ::nme::display::GradientType RADIAL_dyn() { return RADIAL; }
};

} // end namespace nme
} // end namespace display

#endif /* INCLUDED_nme_display_GradientType */ 
