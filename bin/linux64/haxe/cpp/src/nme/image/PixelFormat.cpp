// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_image_PixelFormat
#include <nme/image/PixelFormat.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_38_channelCount,"nme.image.PixelFormat","channelCount",0x4437cf78,"nme.image.PixelFormat.channelCount","nme/image/PixelFormat.hx",38,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_53_getPixelSize,"nme.image.PixelFormat","getPixelSize",0x0a55a95d,"nme.image.PixelFormat.getPixelSize","nme/image/PixelFormat.hx",53,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_5_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",5,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_8_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",8,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_11_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",11,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_13_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",13,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_16_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",16,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_19_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",19,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_21_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",21,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_22_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",22,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_23_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",23,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_24_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",24,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_28_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",28,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_29_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",29,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_32_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",32,0x5d2f20be)
HX_LOCAL_STACK_FRAME(_hx_pos_60bb5d5a7ab52663_33_boot,"nme.image.PixelFormat","boot",0x58a2f69e,"nme.image.PixelFormat.boot","nme/image/PixelFormat.hx",33,0x5d2f20be)
namespace nme{
namespace image{

void PixelFormat_obj::__construct() { }

Dynamic PixelFormat_obj::__CreateEmpty() { return new PixelFormat_obj; }

void *PixelFormat_obj::_hx_vtable = 0;

Dynamic PixelFormat_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PixelFormat_obj > _hx_result = new PixelFormat_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PixelFormat_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2ac6a4a4;
}

int PixelFormat_obj::pfNone;

int PixelFormat_obj::pfRGB;

int PixelFormat_obj::pfBGRA;

int PixelFormat_obj::pfBGRPremA;

int PixelFormat_obj::pfAlpha;

int PixelFormat_obj::pfRenderToCount;

int PixelFormat_obj::pfLuma;

int PixelFormat_obj::pfLumaAlpha;

int PixelFormat_obj::pfRGB32f;

int PixelFormat_obj::pfRGBA32f;

int PixelFormat_obj::pfRGBPremA;

int PixelFormat_obj::pfRGBA;

int PixelFormat_obj::pfUInt16;

int PixelFormat_obj::pfUInt32;

int PixelFormat_obj::channelCount(int inFormat){
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_38_channelCount)
HXDLIN(  38)		switch((int)(inFormat)){
            			case (int)0: {
HXLINE(  42)				return 3;
            			}
            			break;
            			case (int)5: {
HXLINE(  41)				return 2;
            			}
            			break;
            			case (int)6: case (int)7: {
HXLINE(  44)				return 4;
            			}
            			break;
            			case (int)1: case (int)2: case (int)8: case (int)9: {
HXLINE(  43)				return 4;
            			}
            			break;
            			case (int)3: case (int)4: case (int)10: case (int)11: {
HXLINE(  40)				return 1;
            			}
            			break;
            			default:{
HXLINE(  46)				HX_STACK_DO_THROW((HX_("Unknown pixel format ",39,de,27,fe) + inFormat));
            			}
            		}
HXLINE(  38)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelFormat_obj,channelCount,return )

int PixelFormat_obj::getPixelSize(int inFormat){
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_53_getPixelSize)
HXDLIN(  53)		switch((int)(inFormat)){
            			case (int)0: {
HXLINE(  57)				return 3;
            			}
            			break;
            			case (int)3: case (int)4: {
HXLINE(  55)				return 1;
            			}
            			break;
            			case (int)6: case (int)7: {
HXLINE(  59)				return 16;
            			}
            			break;
            			case (int)5: case (int)10: {
HXLINE(  56)				return 2;
            			}
            			break;
            			case (int)1: case (int)2: case (int)8: case (int)9: case (int)11: {
HXLINE(  58)				return 4;
            			}
            			break;
            			default:{
HXLINE(  61)				HX_STACK_DO_THROW((HX_("Unknown pixel format size",7a,8f,99,b0) + inFormat));
            			}
            		}
HXLINE(  53)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelFormat_obj,getPixelSize,return )


PixelFormat_obj::PixelFormat_obj()
{
}

bool PixelFormat_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"channelCount") ) { outValue = channelCount_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getPixelSize") ) { outValue = getPixelSize_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PixelFormat_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo PixelFormat_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &PixelFormat_obj::pfNone,HX_("pfNone",ce,d3,ba,b6)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRGB,HX_("pfRGB",b7,32,8b,c0)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfBGRA,HX_("pfBGRA",aa,d1,ad,ae)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfBGRPremA,HX_("pfBGRPremA",e0,f7,32,99)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfAlpha,HX_("pfAlpha",88,d9,8e,ae)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRenderToCount,HX_("pfRenderToCount",c8,70,ea,19)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfLuma,HX_("pfLuma",33,f3,6c,b5)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfLumaAlpha,HX_("pfLumaAlpha",2b,ab,b9,f4)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRGB32f,HX_("pfRGB32f",90,f8,1c,6e)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRGBA32f,HX_("pfRGBA32f",7d,17,7e,f4)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRGBPremA,HX_("pfRGBPremA",e0,53,a4,c6)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfRGBA,HX_("pfRGBA",aa,2d,41,b9)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfUInt16,HX_("pfUInt16",75,eb,42,e5)},
	{::hx::fsInt,(void *) &PixelFormat_obj::pfUInt32,HX_("pfUInt32",2f,ed,42,e5)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void PixelFormat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfNone,"pfNone");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRGB,"pfRGB");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfBGRA,"pfBGRA");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfBGRPremA,"pfBGRPremA");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfAlpha,"pfAlpha");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRenderToCount,"pfRenderToCount");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfLuma,"pfLuma");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfLumaAlpha,"pfLumaAlpha");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRGB32f,"pfRGB32f");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRGBA32f,"pfRGBA32f");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRGBPremA,"pfRGBPremA");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfRGBA,"pfRGBA");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfUInt16,"pfUInt16");
	HX_MARK_MEMBER_NAME(PixelFormat_obj::pfUInt32,"pfUInt32");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PixelFormat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfNone,"pfNone");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRGB,"pfRGB");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfBGRA,"pfBGRA");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfBGRPremA,"pfBGRPremA");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfAlpha,"pfAlpha");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRenderToCount,"pfRenderToCount");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfLuma,"pfLuma");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfLumaAlpha,"pfLumaAlpha");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRGB32f,"pfRGB32f");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRGBA32f,"pfRGBA32f");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRGBPremA,"pfRGBPremA");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfRGBA,"pfRGBA");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfUInt16,"pfUInt16");
	HX_VISIT_MEMBER_NAME(PixelFormat_obj::pfUInt32,"pfUInt32");
};

#endif

::hx::Class PixelFormat_obj::__mClass;

static ::String PixelFormat_obj_sStaticFields[] = {
	HX_("pfNone",ce,d3,ba,b6),
	HX_("pfRGB",b7,32,8b,c0),
	HX_("pfBGRA",aa,d1,ad,ae),
	HX_("pfBGRPremA",e0,f7,32,99),
	HX_("pfAlpha",88,d9,8e,ae),
	HX_("pfRenderToCount",c8,70,ea,19),
	HX_("pfLuma",33,f3,6c,b5),
	HX_("pfLumaAlpha",2b,ab,b9,f4),
	HX_("pfRGB32f",90,f8,1c,6e),
	HX_("pfRGBA32f",7d,17,7e,f4),
	HX_("pfRGBPremA",e0,53,a4,c6),
	HX_("pfRGBA",aa,2d,41,b9),
	HX_("pfUInt16",75,eb,42,e5),
	HX_("pfUInt32",2f,ed,42,e5),
	HX_("channelCount",0c,11,16,4f),
	HX_("getPixelSize",f1,ea,33,15),
	::String(null())
};

void PixelFormat_obj::__register()
{
	PixelFormat_obj _hx_dummy;
	PixelFormat_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.image.PixelFormat",82,05,da,31);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PixelFormat_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PixelFormat_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(PixelFormat_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PixelFormat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PixelFormat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PixelFormat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PixelFormat_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void PixelFormat_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_5_boot)
HXDLIN(   5)		pfNone = -1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_8_boot)
HXDLIN(   8)		pfRGB = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_11_boot)
HXDLIN(  11)		pfBGRA = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_13_boot)
HXDLIN(  13)		pfBGRPremA = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_16_boot)
HXDLIN(  16)		pfAlpha = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_19_boot)
HXDLIN(  19)		pfRenderToCount = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_21_boot)
HXDLIN(  21)		pfLuma = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_22_boot)
HXDLIN(  22)		pfLumaAlpha = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_23_boot)
HXDLIN(  23)		pfRGB32f = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_24_boot)
HXDLIN(  24)		pfRGBA32f = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_28_boot)
HXDLIN(  28)		pfRGBPremA = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_29_boot)
HXDLIN(  29)		pfRGBA = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_32_boot)
HXDLIN(  32)		pfUInt16 = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_60bb5d5a7ab52663_33_boot)
HXDLIN(  33)		pfUInt32 = 11;
            	}
}

} // end namespace nme
} // end namespace image
