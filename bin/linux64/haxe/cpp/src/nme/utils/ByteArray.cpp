// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_haxe_zip_Compress
#include <haxe/zip/Compress.h>
#endif
#ifndef INCLUDED_haxe_zip_Uncompress
#include <haxe/zip/Uncompress.h>
#endif
#ifndef INCLUDED_nme_Loader
#include <nme/Loader.h>
#endif
#ifndef INCLUDED_nme_errors_EOFError
#include <nme/errors/EOFError.h>
#endif
#ifndef INCLUDED_nme_errors_Error
#include <nme/errors/Error.h>
#endif
#ifndef INCLUDED_nme_utils_ByteArray
#include <nme/utils/ByteArray.h>
#endif
#ifndef INCLUDED_nme_utils_CompressionAlgorithm
#include <nme/utils/CompressionAlgorithm.h>
#endif
#ifndef INCLUDED_nme_utils_IDataInput
#include <nme/utils/IDataInput.h>
#endif
#ifndef INCLUDED_nme_utils_IDataOutput
#include <nme/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_nme_utils_IMemoryRange
#include <nme/utils/IMemoryRange.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_78_new,"nme.utils.ByteArray","new",0xe50bea9e,"nme.utils.ByteArray.new","nme/utils/ByteArray.hx",78,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_6d488a5d9620c006_214___init__,"::nme::utils::ByteArray_obj","__init__",0xc14db300,"::nme::utils::ByteArray_obj.__init__","nme/utils/ByteArray.hx",214,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_6d488a5d9620c006_216___init__,"::nme::utils::ByteArray_obj","__init__",0xc14db300,"::nme::utils::ByteArray_obj.__init__","nme/utils/ByteArray.hx",216,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_6d488a5d9620c006_223___init__,"::nme::utils::ByteArray_obj","__init__",0xc14db300,"::nme::utils::ByteArray_obj.__init__","nme/utils/ByteArray.hx",223,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_6d488a5d9620c006_225___init__,"::nme::utils::ByteArray_obj","__init__",0xc14db300,"::nme::utils::ByteArray_obj.__init__","nme/utils/ByteArray.hx",225,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_6d488a5d9620c006_213___init__,"::nme::utils::ByteArray_obj","__init__",0xc14db300,"::nme::utils::ByteArray_obj.__init__","nme/utils/ByteArray.hx",213,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_121_get___length,"nme.utils.ByteArray","get___length",0xe2ce6211,"nme.utils.ByteArray.get___length","nme/utils/ByteArray.hx",121,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_122_set___length,"nme.utils.ByteArray","set___length",0xf7c78585,"nme.utils.ByteArray.set___length","nme/utils/ByteArray.hx",122,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_123___resize,"nme.utils.ByteArray","__resize",0xc274ca16,"nme.utils.ByteArray.__resize","nme/utils/ByteArray.hx",123,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_204___get,"nme.utils.ByteArray","__get",0x88cc8734,"nme.utils.ByteArray.__get","nme/utils/ByteArray.hx",204,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_238___set,"nme.utils.ByteArray","__set",0x88d5a240,"nme.utils.ByteArray.__set","nme/utils/ByteArray.hx",238,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_248_asString,"nme.utils.ByteArray","asString",0xb1d03865,"nme.utils.ByteArray.asString","nme/utils/ByteArray.hx",248,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_253_checkData,"nme.utils.ByteArray","checkData",0x153d7bd0,"nme.utils.ByteArray.checkData","nme/utils/ByteArray.hx",253,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_258_clear,"nme.utils.ByteArray","clear",0xdefd174b,"nme.utils.ByteArray.clear","nme/utils/ByteArray.hx",258,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_265_compress,"nme.utils.ByteArray","compress",0x95894ca4,"nme.utils.ByteArray.compress","nme/utils/ByteArray.hx",265,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_312_deflate,"nme.utils.ByteArray","deflate",0x619f1ca9,"nme.utils.ByteArray.deflate","nme/utils/ByteArray.hx",312,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_349_setAllocSize,"nme.utils.ByteArray","setAllocSize",0x3e11bdd6,"nme.utils.ByteArray.setAllocSize","nme/utils/ByteArray.hx",349,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_356_setByteSize,"nme.utils.ByteArray","setByteSize",0x753a61e9,"nme.utils.ByteArray.setByteSize","nme/utils/ByteArray.hx",356,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_362_ensureElem,"nme.utils.ByteArray","ensureElem",0xba417aef,"nme.utils.ByteArray.ensureElem","nme/utils/ByteArray.hx",362,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_384_getLength,"nme.utils.ByteArray","getLength",0x9a587ada,"nme.utils.ByteArray.getLength","nme/utils/ByteArray.hx",384,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_387_getByteBuffer,"nme.utils.ByteArray","getByteBuffer",0xcc86361c,"nme.utils.ByteArray.getByteBuffer","nme/utils/ByteArray.hx",387,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_388_getStart,"nme.utils.ByteArray","getStart",0xf5ac88ee,"nme.utils.ByteArray.getStart","nme/utils/ByteArray.hx",388,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_393_inflate,"nme.utils.ByteArray","inflate",0xcac0adc5,"nme.utils.ByteArray.inflate","nme/utils/ByteArray.hx",393,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_398_nmeFromBytes,"nme.utils.ByteArray","nmeFromBytes",0xf6c7907d,"nme.utils.ByteArray.nmeFromBytes","nme/utils/ByteArray.hx",398,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_413_readBoolean,"nme.utils.ByteArray","readBoolean",0xc8c40630,"nme.utils.ByteArray.readBoolean","nme/utils/ByteArray.hx",413,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_417_readByte,"nme.utils.ByteArray","readByte",0x7ae4fe80,"nme.utils.ByteArray.readByte","nme/utils/ByteArray.hx",417,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_423_readBytes,"nme.utils.ByteArray","readBytes",0x0d79b1f3,"nme.utils.ByteArray.readBytes","nme/utils/ByteArray.hx",423,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_450_readDouble,"nme.utils.ByteArray","readDouble",0xc85dd889,"nme.utils.ByteArray.readDouble","nme/utils/ByteArray.hx",450,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_484_readFloat,"nme.utils.ByteArray","readFloat",0x52786f24,"nme.utils.ByteArray.readFloat","nme/utils/ByteArray.hx",484,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_511_readInt,"nme.utils.ByteArray","readInt",0xc16ec477,"nme.utils.ByteArray.readInt","nme/utils/ByteArray.hx",511,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_523_readMultiByte,"nme.utils.ByteArray","readMultiByte",0xdd4413a9,"nme.utils.ByteArray.readMultiByte","nme/utils/ByteArray.hx",523,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_527_readShort,"nme.utils.ByteArray","readShort",0xcc092e04,"nme.utils.ByteArray.readShort","nme/utils/ByteArray.hx",527,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_538_readUnsignedByte,"nme.utils.ByteArray","readUnsignedByte",0xe487e215,"nme.utils.ByteArray.readUnsignedByte","nme/utils/ByteArray.hx",538,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_542_readUnsignedInt,"nme.utils.ByteArray","readUnsignedInt",0x8f652a82,"nme.utils.ByteArray.readUnsignedInt","nme/utils/ByteArray.hx",542,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_552_readUnsignedShort,"nme.utils.ByteArray","readUnsignedShort",0xd0ed6ccf,"nme.utils.ByteArray.readUnsignedShort","nme/utils/ByteArray.hx",552,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_560_readUTF,"nme.utils.ByteArray","readUTF",0xc177c8af,"nme.utils.ByteArray.readUTF","nme/utils/ByteArray.hx",560,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_566_readUTFBytes,"nme.utils.ByteArray","readUTFBytes",0x388cd53c,"nme.utils.ByteArray.readUTFBytes","nme/utils/ByteArray.hx",566,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_588_setLength,"nme.utils.ByteArray","setLength",0x7da966e6,"nme.utils.ByteArray.setLength","nme/utils/ByteArray.hx",588,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_596_slice,"nme.utils.ByteArray","slice",0x15696a10,"nme.utils.ByteArray.slice","nme/utils/ByteArray.hx",596,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_628_ThrowEOFi,"nme.utils.ByteArray","ThrowEOFi",0x8b620d11,"nme.utils.ByteArray.ThrowEOFi","nme/utils/ByteArray.hx",628,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_634_uncompress,"nme.utils.ByteArray","uncompress",0xa599f87d,"nme.utils.ByteArray.uncompress","nme/utils/ByteArray.hx",634,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_684_write_uncheck,"nme.utils.ByteArray","write_uncheck",0x2d6a60ed,"nme.utils.ByteArray.write_uncheck","nme/utils/ByteArray.hx",684,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_694_writeBoolean,"nme.utils.ByteArray","writeBoolean",0x29ab3d8b,"nme.utils.ByteArray.writeBoolean","nme/utils/ByteArray.hx",694,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_698_writeByte,"nme.utils.ByteArray","writeByte",0xc8d17045,"nme.utils.ByteArray.writeByte","nme/utils/ByteArray.hx",698,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_713_writeBytes,"nme.utils.ByteArray","writeBytes",0xee70cc8e,"nme.utils.ByteArray.writeBytes","nme/utils/ByteArray.hx",713,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_717_writeHaxeBytes,"nme.utils.ByteArray","writeHaxeBytes",0xbca18c08,"nme.utils.ByteArray.writeHaxeBytes","nme/utils/ByteArray.hx",717,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_727_writeDouble,"nme.utils.ByteArray","writeDouble",0xbf9e058e,"nme.utils.ByteArray.writeDouble","nme/utils/ByteArray.hx",727,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_742_writeFile,"nme.utils.ByteArray","writeFile",0xcb6a1fb9,"nme.utils.ByteArray.writeFile","nme/utils/ByteArray.hx",742,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_747_writeFloat,"nme.utils.ByteArray","writeFloat",0x336f89bf,"nme.utils.ByteArray.writeFloat","nme/utils/ByteArray.hx",747,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_759_writeInt,"nme.utils.ByteArray","writeInt",0x35ba7252,"nme.utils.ByteArray.writeInt","nme/utils/ByteArray.hx",759,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_782_writeShort,"nme.utils.ByteArray","writeShort",0xad00489f,"nme.utils.ByteArray.writeShort","nme/utils/ByteArray.hx",782,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_799_writeUnsignedInt,"nme.utils.ByteArray","writeUnsignedInt",0x5f2aab5d,"nme.utils.ByteArray.writeUnsignedInt","nme/utils/ByteArray.hx",799,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_803_writeUTF,"nme.utils.ByteArray","writeUTF",0x35c3768a,"nme.utils.ByteArray.writeUTF","nme/utils/ByteArray.hx",803,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_815_writeUTFBytes,"nme.utils.ByteArray","writeUTFBytes",0xa1f60d81,"nme.utils.ByteArray.writeUTFBytes","nme/utils/ByteArray.hx",815,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_826_get_bytesAvailable,"nme.utils.ByteArray","get_bytesAvailable",0x83564829,"nme.utils.ByteArray.get_bytesAvailable","nme/utils/ByteArray.hx",826,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_827_get_byteLength,"nme.utils.ByteArray","get_byteLength",0xb0c858d9,"nme.utils.ByteArray.get_byteLength","nme/utils/ByteArray.hx",827,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_828_get_endian,"nme.utils.ByteArray","get_endian",0x8726d1e6,"nme.utils.ByteArray.get_endian","nme/utils/ByteArray.hx",828,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_829_set_endian,"nme.utils.ByteArray","set_endian",0x8aa4705a,"nme.utils.ByteArray.set_endian","nme/utils/ByteArray.hx",829,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_378_fromBytes,"nme.utils.ByteArray","fromBytes",0xf11b4f5f,"nme.utils.ByteArray.fromBytes","nme/utils/ByteArray.hx",378,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_479_readFile,"nme.utils.ByteArray","readFile",0x7d7dadf4,"nme.utils.ByteArray.readFile","nme/utils/ByteArray.hx",479,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_838_boot,"nme.utils.ByteArray","boot",0x7d7a6034,"nme.utils.ByteArray.boot","nme/utils/ByteArray.hx",838,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_d96dc8dd765f46a4_839_boot,"nme.utils.ByteArray","boot",0x7d7a6034,"nme.utils.ByteArray.boot","nme/utils/ByteArray.hx",839,0x607e6454)
HX_LOCAL_STACK_FRAME(_hx_pos_472da2e751edd1cd_9_boot,"nme.utils.ByteArray","boot",0x7d7a6034,"nme.utils.ByteArray.boot","nme/PrimeLoader.hx",9,0xcf416155)

namespace {
   float mangleFloat(float f) {
      char *c = (char *)&f;
      std::swap(c[0],c[3]);
      std::swap(c[1],c[2]);
      return f;
   }
   double mangleDouble(double d) {
      char *c = (char *)&d;
      std::swap(c[0],c[7]);
      std::swap(c[1],c[6]);
      std::swap(c[2],c[5]);
      std::swap(c[3],c[4]);
      return d;
   }

}

namespace nme{
namespace utils{

void ByteArray_obj::__construct(::hx::Null< int >  __o_inSize,::hx::Null< bool >  __o_inWriteOnly){
            		int inSize = __o_inSize.Default(0);
            		bool inWriteOnly = __o_inWriteOnly.Default(false);
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_78_new)
HXLINE(  79)		this->bigEndian = true;
HXLINE(  80)		this->position = 0;
HXLINE(  82)		if ((inSize < 0)) {
HXLINE(  83)			inSize = 0;
            		}
HXLINE(  94)		::Array< unsigned char > data = ::Array_obj< unsigned char >::__new();
HXLINE(  95)		if ((inSize > 0)) {
HXLINE(  96)			data[(inSize - 1)] = ( (unsigned char)(0) );
            		}
HXLINE(  97)		super::__construct(inSize,data);
            	}

Dynamic ByteArray_obj::__CreateEmpty() { return new ByteArray_obj; }

void *ByteArray_obj::_hx_vtable = 0;

Dynamic ByteArray_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ByteArray_obj > _hx_result = new ByteArray_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ByteArray_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0cbcdce2) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0cbcdce2;
	} else {
		return inClassId==(int)0x195c64b7;
	}
}

static ::nme::utils::IMemoryRange_obj _hx_nme_utils_ByteArray__hx_nme_utils_IMemoryRange= {
	(  ::nme::utils::ByteArray (::hx::Object::*)())&::nme::utils::ByteArray_obj::getByteBuffer,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::getStart,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::getLength,
};

static ::nme::utils::IDataInput_obj _hx_nme_utils_ByteArray__hx_nme_utils_IDataInput= {
	( bool (::hx::Object::*)())&::nme::utils::ByteArray_obj::readBoolean,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readByte,
	( void (::hx::Object::*)( ::nme::utils::ByteArray,::hx::Null< int > ,::hx::Null< int > ))&::nme::utils::ByteArray_obj::readBytes,
	( Float (::hx::Object::*)())&::nme::utils::ByteArray_obj::readDouble,
	( Float (::hx::Object::*)())&::nme::utils::ByteArray_obj::readFloat,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readInt,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readShort,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readUnsignedByte,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readUnsignedInt,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::readUnsignedShort,
	( ::String (::hx::Object::*)())&::nme::utils::ByteArray_obj::readUTF,
	( ::String (::hx::Object::*)(int))&::nme::utils::ByteArray_obj::readUTFBytes,
	( int (::hx::Object::*)())&::nme::utils::ByteArray_obj::get_bytesAvailable,
	( ::String (::hx::Object::*)())&::nme::utils::ByteArray_obj::get_endian,
	( ::String (::hx::Object::*)(::String))&::nme::utils::ByteArray_obj::set_endian,
};

static ::nme::utils::IDataOutput_obj _hx_nme_utils_ByteArray__hx_nme_utils_IDataOutput= {
	( void (::hx::Object::*)(bool))&::nme::utils::ByteArray_obj::writeBoolean,
	( void (::hx::Object::*)(int))&::nme::utils::ByteArray_obj::writeByte,
	( void (::hx::Object::*)( ::nme::utils::ByteArray,::hx::Null< int > ,::hx::Null< int > ))&::nme::utils::ByteArray_obj::writeBytes_ec49e4ec,
	( void (::hx::Object::*)(Float))&::nme::utils::ByteArray_obj::writeDouble,
	( void (::hx::Object::*)(Float))&::nme::utils::ByteArray_obj::writeFloat,
	( void (::hx::Object::*)(int))&::nme::utils::ByteArray_obj::writeInt,
	( void (::hx::Object::*)(int))&::nme::utils::ByteArray_obj::writeShort,
	( void (::hx::Object::*)(int))&::nme::utils::ByteArray_obj::writeUnsignedInt,
	( void (::hx::Object::*)(::String))&::nme::utils::ByteArray_obj::writeUTF,
	( void (::hx::Object::*)(::String))&::nme::utils::ByteArray_obj::writeUTFBytes,
	( ::String (::hx::Object::*)())&::nme::utils::ByteArray_obj::get_endian,
	( ::String (::hx::Object::*)(::String))&::nme::utils::ByteArray_obj::set_endian,
};

void ByteArray_obj::writeBytes_ec49e4ec( ::nme::utils::ByteArray bytes,::hx::Null< int >  offset,::hx::Null< int >  length) {
			writeBytes(bytes,offset,length);
}
void *ByteArray_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x915e561e: return &_hx_nme_utils_ByteArray__hx_nme_utils_IMemoryRange;
		case (int)0x74db6822: return &_hx_nme_utils_ByteArray__hx_nme_utils_IDataInput;
		case (int)0x3bb2ffe9: return &_hx_nme_utils_ByteArray__hx_nme_utils_IDataOutput;
	}
	return super::_hx_getInterface(inHash);
}

void ByteArray_obj::__init__(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::nme::utils::ByteArray _hx_run(int inLen){
            			HX_GC_STACKFRAME(&_hx_pos_6d488a5d9620c006_214___init__)
HXLINE( 214)			return  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,inLen,null());
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(2)
            		void _hx_run( ::nme::utils::ByteArray inArray,int inLen){
            			HX_STACKFRAME(&_hx_pos_6d488a5d9620c006_216___init__)
HXLINE( 217)			if ((inLen > 0)) {
HXLINE( 218)				inArray->ensureElem((inLen - 1),true);
            			}
HXLINE( 219)			inArray->length = inLen;
            		}
            		HX_END_LOCAL_FUNC2((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		::Array< unsigned char > _hx_run( ::nme::utils::ByteArray inArray){
            			HX_STACKFRAME(&_hx_pos_6d488a5d9620c006_223___init__)
HXLINE( 223)			if (::hx::IsNull( inArray )) {
HXLINE( 223)				return null();
            			}
            			else {
HXLINE( 223)				return inArray->b;
            			}
HXDLIN( 223)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		int _hx_run( ::nme::utils::ByteArray inArray){
            			HX_STACKFRAME(&_hx_pos_6d488a5d9620c006_225___init__)
HXLINE( 225)			if (::hx::IsNull( inArray )) {
HXLINE( 225)				return 0;
            			}
            			else {
HXLINE( 225)				return inArray->length;
            			}
HXDLIN( 225)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_6d488a5d9620c006_213___init__)
HXLINE( 214)		 ::Dynamic factory =  ::Dynamic(new _hx_Closure_0());
HXLINE( 215)		 ::Dynamic resize =  ::Dynamic(new _hx_Closure_1());
HXLINE( 223)		 ::Dynamic bytes =  ::Dynamic(new _hx_Closure_2());
HXLINE( 225)		 ::Dynamic slen =  ::Dynamic(new _hx_Closure_3());
HXLINE( 227)		::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *) > init = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_byte_array_init",94,ff,90,5f),HX_("oooov",36,ae,2d,33),false);
HXLINE( 228)		if (::hx::IsNotNull( init )) {
HXLINE( 229)			init(::hx::DynamicPtr(factory),::hx::DynamicPtr(slen),::hx::DynamicPtr(resize),::hx::DynamicPtr(bytes));
            		}
            	}


int ByteArray_obj::get___length(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_121_get___length)
HXDLIN( 121)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get___length,return )

int ByteArray_obj::set___length(int inLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_122_set___length)
HXDLIN( 122)		return this->setLength(inLength);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,set___length,return )

void ByteArray_obj::_hx___resize(int inLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_123___resize)
HXDLIN( 123)		this->ensureElem((inLength - 1),true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,_hx___resize,(void))

int ByteArray_obj::__get(int pos){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_204___get)
HXDLIN( 204)		return ( (int)(this->b->__get(pos)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,__get,return )

void ByteArray_obj::__set(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_238___set)
HXDLIN( 238)		this->b[pos] = ( (unsigned char)(v) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,__set,(void))

::String ByteArray_obj::asString(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_248_asString)
HXDLIN( 248)		return this->readUTFBytes(this->length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,asString,return )

void ByteArray_obj::checkData(int inLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_253_checkData)
HXDLIN( 253)		if (((inLength + this->position) > this->length)) {
HXLINE( 254)			this->ThrowEOFi();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,checkData,(void))

void ByteArray_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_258_clear)
HXLINE( 259)		this->position = 0;
HXLINE( 260)		this->length = 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,clear,(void))

void ByteArray_obj::compress( ::nme::utils::CompressionAlgorithm algorithm){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_265_compress)
HXLINE( 269)		 ::nme::utils::ByteArray src = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 272)		 ::haxe::io::Bytes result;
HXLINE( 274)		if (::hx::IsPointerEq( algorithm,::nme::utils::CompressionAlgorithm_obj::LZMA_dyn() )) {
HXLINE( 276)			result = ::haxe::io::Bytes_obj::ofData(( ( ::Dynamic)(::nme::utils::ByteArray_obj::nme_lzma_encode(::hx::DynamicPtr(src->b))) ));
            		}
            		else {
HXLINE( 280)			int windowBits;
HXDLIN( 280)			if (::hx::IsNull( algorithm )) {
HXLINE( 280)				windowBits = 15;
            			}
            			else {
HXLINE( 280)				switch((int)(algorithm->_hx_getIndex())){
            					case (int)0: {
HXLINE( 280)						windowBits = -15;
            					}
            					break;
            					case (int)3: {
HXLINE( 280)						windowBits = 31;
            					}
            					break;
            					default:{
HXLINE( 280)						windowBits = 15;
            					}
            				}
            			}
HXLINE( 293)			result = ::haxe::zip::Compress_obj::run(src,8);
            		}
HXLINE( 301)		this->b = result->b;
HXLINE( 302)		this->length = result->length;
HXLINE( 303)		this->position = this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,compress,(void))

void ByteArray_obj::deflate(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_312_deflate)
HXDLIN( 312)		this->compress(::nme::utils::CompressionAlgorithm_obj::DEFLATE_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,deflate,(void))

void ByteArray_obj::setAllocSize(int inSize){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_349_setAllocSize)
HXDLIN( 349)		_hx_array_set_size_exact(this->b,inSize);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,setAllocSize,(void))

void ByteArray_obj::setByteSize(int inSize){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_356_setByteSize)
HXLINE( 357)		this->setAllocSize(inSize);
HXLINE( 358)		this->length = inSize;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,setByteSize,(void))

void ByteArray_obj::ensureElem(int inSize,bool inUpdateLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_362_ensureElem)
HXLINE( 363)		int len = (inSize + 1);
HXLINE( 369)		if ((this->b->length < len)) {
HXLINE( 370)			this->b->__SetSize(len);
            		}
HXLINE( 373)		bool _hx_tmp;
HXDLIN( 373)		if (inUpdateLength) {
HXLINE( 373)			_hx_tmp = (this->length < len);
            		}
            		else {
HXLINE( 373)			_hx_tmp = false;
            		}
HXDLIN( 373)		if (_hx_tmp) {
HXLINE( 374)			this->length = len;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,ensureElem,(void))

int ByteArray_obj::getLength(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_384_getLength)
HXDLIN( 384)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getLength,return )

 ::nme::utils::ByteArray ByteArray_obj::getByteBuffer(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_387_getByteBuffer)
HXDLIN( 387)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getByteBuffer,return )

int ByteArray_obj::getStart(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_388_getStart)
HXDLIN( 388)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,getStart,return )

void ByteArray_obj::inflate(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_393_inflate)
HXDLIN( 393)		this->uncompress(::nme::utils::CompressionAlgorithm_obj::DEFLATE_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,inflate,(void))

void ByteArray_obj::nmeFromBytes( ::haxe::io::Bytes inBytes){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_398_nmeFromBytes)
HXLINE( 399)		this->b = inBytes->b;
HXLINE( 400)		this->length = inBytes->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,nmeFromBytes,(void))

bool ByteArray_obj::readBoolean(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_413_readBoolean)
HXDLIN( 413)		if ((this->position < this->length)) {
HXDLIN( 413)			return (this->b->__get(this->position++) != 0);
            		}
            		else {
HXDLIN( 413)			return (this->ThrowEOFi() != 0);
            		}
HXDLIN( 413)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readBoolean,return )

int ByteArray_obj::readByte(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_417_readByte)
HXLINE( 418)		int val;
HXDLIN( 418)		if ((this->position < this->length)) {
HXLINE( 418)			val = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 418)			val = this->ThrowEOFi();
            		}
HXLINE( 419)		if (((val & 128) != 0)) {
HXLINE( 419)			return (val - 256);
            		}
            		else {
HXLINE( 419)			return val;
            		}
HXDLIN( 419)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readByte,return )

void ByteArray_obj::readBytes( ::nme::utils::ByteArray outData,::hx::Null< int >  __o_inOffset,::hx::Null< int >  __o_inLen){
            		int inOffset = __o_inOffset.Default(0);
            		int inLen = __o_inLen.Default(0);
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_423_readBytes)
HXLINE( 424)		if ((inLen == 0)) {
HXLINE( 425)			inLen = (this->length - this->position);
            		}
HXLINE( 427)		if (((this->position + inLen) > this->length)) {
HXLINE( 428)			this->ThrowEOFi();
            		}
HXLINE( 430)		if ((outData->length < (inOffset + inLen))) {
HXLINE( 431)			outData->ensureElem(((inOffset + inLen) - 1),true);
            		}
HXLINE( 439)		::Array< unsigned char > b1 = this->b;
HXLINE( 440)		::Array< unsigned char > b2 = outData->b;
HXLINE( 441)		int p = this->position;
HXLINE( 442)		{
HXLINE( 442)			int _g = 0;
HXDLIN( 442)			int _g1 = inLen;
HXDLIN( 442)			while((_g < _g1)){
HXLINE( 442)				_g = (_g + 1);
HXDLIN( 442)				int i = (_g - 1);
HXLINE( 443)				b2[(inOffset + i)] = b1->__get((p + i));
            			}
            		}
HXLINE( 446)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 446)		_hx_tmp->position = (_hx_tmp->position + inLen);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ByteArray_obj,readBytes,(void))

Float ByteArray_obj::readDouble(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_450_readDouble)
HXLINE( 451)		if (((this->position + 8) > this->length)) {
HXLINE( 452)			this->ThrowEOFi();
            		}
HXLINE( 465)		Float result =  ::__hxcpp_memory_get_double(this->b,this->position);
HXLINE( 466)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 466)		_hx_tmp->position = (_hx_tmp->position + 8);
HXLINE( 467)		if (this->bigEndian) {
HXLINE( 467)			return ::mangleDouble(result);
            		}
HXLINE( 468)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readDouble,return )

Float ByteArray_obj::readFloat(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_484_readFloat)
HXLINE( 485)		if (((this->position + 4) > this->length)) {
HXLINE( 486)			this->ThrowEOFi();
            		}
HXLINE( 498)		Float result =  ::__hxcpp_memory_get_float(this->b,this->position);
HXLINE( 499)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 499)		_hx_tmp->position = (_hx_tmp->position + 4);
HXLINE( 500)		if (this->bigEndian) {
HXLINE( 500)			return ::mangleFloat(result);
            		}
HXLINE( 501)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readFloat,return )

int ByteArray_obj::readInt(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_511_readInt)
HXLINE( 512)		int ch1;
HXDLIN( 512)		if ((this->position < this->length)) {
HXLINE( 512)			ch1 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 512)			ch1 = this->ThrowEOFi();
            		}
HXLINE( 513)		int ch2;
HXDLIN( 513)		if ((this->position < this->length)) {
HXLINE( 513)			ch2 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 513)			ch2 = this->ThrowEOFi();
            		}
HXLINE( 514)		int ch3;
HXDLIN( 514)		if ((this->position < this->length)) {
HXLINE( 514)			ch3 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 514)			ch3 = this->ThrowEOFi();
            		}
HXLINE( 515)		int ch4;
HXDLIN( 515)		if ((this->position < this->length)) {
HXLINE( 515)			ch4 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 515)			ch4 = this->ThrowEOFi();
            		}
HXLINE( 517)		if (this->bigEndian) {
HXLINE( 517)			return ((((ch1 << 24) | (ch2 << 16)) | (ch3 << 8)) | ch4);
            		}
            		else {
HXLINE( 517)			return ((((ch4 << 24) | (ch3 << 16)) | (ch2 << 8)) | ch1);
            		}
HXDLIN( 517)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readInt,return )

::String ByteArray_obj::readMultiByte(int inLen,::String charSet){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_523_readMultiByte)
HXDLIN( 523)		return this->readUTFBytes(inLen);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,readMultiByte,return )

int ByteArray_obj::readShort(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_527_readShort)
HXLINE( 528)		int ch1;
HXDLIN( 528)		if ((this->position < this->length)) {
HXLINE( 528)			ch1 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 528)			ch1 = this->ThrowEOFi();
            		}
HXLINE( 529)		int ch2;
HXDLIN( 529)		if ((this->position < this->length)) {
HXLINE( 529)			ch2 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 529)			ch2 = this->ThrowEOFi();
            		}
HXLINE( 531)		int val;
HXDLIN( 531)		if (this->bigEndian) {
HXLINE( 531)			val = ((ch1 << 8) | ch2);
            		}
            		else {
HXLINE( 531)			val = ((ch2 << 8) | ch1);
            		}
HXLINE( 533)		if (((val & 32768) != 0)) {
HXLINE( 533)			return (val - 65536);
            		}
            		else {
HXLINE( 533)			return val;
            		}
HXDLIN( 533)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readShort,return )

int ByteArray_obj::readUnsignedByte(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_538_readUnsignedByte)
HXDLIN( 538)		if ((this->position < this->length)) {
HXDLIN( 538)			return ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXDLIN( 538)			return this->ThrowEOFi();
            		}
HXDLIN( 538)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedByte,return )

int ByteArray_obj::readUnsignedInt(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_542_readUnsignedInt)
HXLINE( 543)		int ch1;
HXDLIN( 543)		if ((this->position < this->length)) {
HXLINE( 543)			ch1 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 543)			ch1 = this->ThrowEOFi();
            		}
HXLINE( 544)		int ch2;
HXDLIN( 544)		if ((this->position < this->length)) {
HXLINE( 544)			ch2 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 544)			ch2 = this->ThrowEOFi();
            		}
HXLINE( 545)		int ch3;
HXDLIN( 545)		if ((this->position < this->length)) {
HXLINE( 545)			ch3 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 545)			ch3 = this->ThrowEOFi();
            		}
HXLINE( 546)		int ch4;
HXDLIN( 546)		if ((this->position < this->length)) {
HXLINE( 546)			ch4 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 546)			ch4 = this->ThrowEOFi();
            		}
HXLINE( 548)		if (this->bigEndian) {
HXLINE( 548)			return ((((ch1 << 24) | (ch2 << 16)) | (ch3 << 8)) | ch4);
            		}
            		else {
HXLINE( 548)			return ((((ch4 << 24) | (ch3 << 16)) | (ch2 << 8)) | ch1);
            		}
HXDLIN( 548)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedInt,return )

int ByteArray_obj::readUnsignedShort(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_552_readUnsignedShort)
HXLINE( 553)		int ch1;
HXDLIN( 553)		if ((this->position < this->length)) {
HXLINE( 553)			ch1 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 553)			ch1 = this->ThrowEOFi();
            		}
HXLINE( 554)		int ch2;
HXDLIN( 554)		if ((this->position < this->length)) {
HXLINE( 554)			ch2 = ( (int)(this->b->__get(this->position++)) );
            		}
            		else {
HXLINE( 554)			ch2 = this->ThrowEOFi();
            		}
HXLINE( 556)		if (this->bigEndian) {
HXLINE( 556)			return ((ch1 << 8) | ch2);
            		}
            		else {
HXLINE( 556)			return ((ch2 << 8) + ch1);
            		}
HXDLIN( 556)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUnsignedShort,return )

::String ByteArray_obj::readUTF(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_560_readUTF)
HXLINE( 561)		int len = this->readUnsignedShort();
HXLINE( 562)		return this->readUTFBytes(len);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,readUTF,return )

::String ByteArray_obj::readUTFBytes(int inLen){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_566_readUTFBytes)
HXLINE( 567)		if (((this->position + inLen) > this->length)) {
HXLINE( 568)			this->ThrowEOFi();
            		}
HXLINE( 570)		int p = this->position;
HXLINE( 571)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 571)		_hx_tmp->position = (_hx_tmp->position + inLen);
HXLINE( 576)		::String result = HX_("",00,00,00,00);
HXLINE( 577)		 ::__hxcpp_string_of_bytes(this->b,result,p,inLen);
HXLINE( 578)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,readUTFBytes,return )

int ByteArray_obj::setLength(int inLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_588_setLength)
HXLINE( 589)		if ((inLength > 0)) {
HXLINE( 590)			this->ensureElem((inLength - 1),false);
            		}
HXLINE( 591)		return (this->length = inLength);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,setLength,return )

 ::nme::utils::ByteArray ByteArray_obj::slice(int inBegin, ::Dynamic inEnd){
            	HX_GC_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_596_slice)
HXLINE( 597)		int begin = inBegin;
HXLINE( 599)		if ((begin < 0)) {
HXLINE( 601)			begin = (begin + this->length);
HXLINE( 602)			if ((begin < 0)) {
HXLINE( 603)				begin = 0;
            			}
            		}
HXLINE( 606)		int end;
HXDLIN( 606)		if (::hx::IsNull( inEnd )) {
HXLINE( 606)			end = this->length;
            		}
            		else {
HXLINE( 606)			end = ( (int)(inEnd) );
            		}
HXLINE( 608)		if ((end < 0)) {
HXLINE( 610)			end = (end + this->length);
HXLINE( 612)			if ((end < 0)) {
HXLINE( 613)				end = 0;
            			}
            		}
HXLINE( 616)		if ((begin >= end)) {
HXLINE( 617)			return  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,null(),null());
            		}
HXLINE( 619)		 ::nme::utils::ByteArray result =  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,(end - begin),null());
HXLINE( 621)		int opos = this->position;
HXLINE( 622)		result->blit(0,::hx::ObjectPtr<OBJ_>(this),begin,(end - begin));
HXLINE( 624)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ByteArray_obj,slice,return )

int ByteArray_obj::ThrowEOFi(){
            	HX_GC_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_628_ThrowEOFi)
HXDLIN( 628)		HX_STACK_DO_THROW( ::nme::errors::EOFError_obj::__alloc( HX_CTX ));
HXDLIN( 628)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,ThrowEOFi,return )

void ByteArray_obj::uncompress( ::nme::utils::CompressionAlgorithm algorithm){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_634_uncompress)
HXLINE( 635)		if (::hx::IsNull( algorithm )) {
HXLINE( 635)			algorithm = ::nme::utils::CompressionAlgorithm_obj::GZIP_dyn();
            		}
HXLINE( 640)		 ::nme::utils::ByteArray src = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 643)		 ::haxe::io::Bytes result;
HXLINE( 645)		if (::hx::IsPointerEq( algorithm,::nme::utils::CompressionAlgorithm_obj::LZMA_dyn() )) {
HXLINE( 647)			result = ::haxe::io::Bytes_obj::ofData(( ( ::Dynamic)(::nme::utils::ByteArray_obj::nme_lzma_decode(::hx::DynamicPtr(src->b))) ));
            		}
            		else {
HXLINE( 651)			int windowBits;
HXDLIN( 651)			if (::hx::IsNull( algorithm )) {
HXLINE( 651)				windowBits = 15;
            			}
            			else {
HXLINE( 651)				switch((int)(algorithm->_hx_getIndex())){
            					case (int)0: {
HXLINE( 651)						windowBits = -15;
            					}
            					break;
            					case (int)3: {
HXLINE( 651)						windowBits = 31;
            					}
            					break;
            					default:{
HXLINE( 651)						windowBits = 15;
            					}
            				}
            			}
HXLINE( 665)			result = ::haxe::zip::Uncompress_obj::run(src,null());
            		}
HXLINE( 672)		this->b = result->b;
HXLINE( 673)		this->length = result->length;
HXLINE( 674)		this->position = 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,uncompress,(void))

void ByteArray_obj::write_uncheck(int inByte){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_684_write_uncheck)
HXDLIN( 684)		this->b->__unsafe_set(this->position++,inByte);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,write_uncheck,(void))

void ByteArray_obj::writeBoolean(bool value){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_694_writeBoolean)
HXDLIN( 694)		this->ensureElem(this->position,true);
HXDLIN( 694)		int _hx_tmp;
HXDLIN( 694)		if (value) {
HXDLIN( 694)			_hx_tmp = 1;
            		}
            		else {
HXDLIN( 694)			_hx_tmp = 0;
            		}
HXDLIN( 694)		this->b[this->position++] = ( (unsigned char)(_hx_tmp) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeBoolean,(void))

void ByteArray_obj::writeByte(int value){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_698_writeByte)
HXLINE( 699)		this->ensureElem(this->position,true);
HXLINE( 702)		this->b[this->position++] = ( (unsigned char)(value) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeByte,(void))

void ByteArray_obj::writeBytes( ::Dynamic bytes,::hx::Null< int >  __o_inOffset,::hx::Null< int >  __o_inLength){
            		int inOffset = __o_inOffset.Default(0);
            		int inLength = __o_inLength.Default(0);
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_713_writeBytes)
HXDLIN( 713)		this->writeHaxeBytes(( ( ::haxe::io::Bytes)(bytes) ),inOffset,inLength);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ByteArray_obj,writeBytes,(void))

void ByteArray_obj::writeHaxeBytes( ::haxe::io::Bytes bytes,int inOffset,int inLength){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_717_writeHaxeBytes)
HXLINE( 718)		if ((inLength == 0)) {
HXLINE( 718)			inLength = (bytes->length - inOffset);
            		}
HXLINE( 719)		this->ensureElem(((this->position + inLength) - 1),true);
HXLINE( 720)		int opos = this->position;
HXLINE( 721)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 721)		_hx_tmp->position = (_hx_tmp->position + inLength);
HXLINE( 722)		this->blit(opos,bytes,inOffset,inLength);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ByteArray_obj,writeHaxeBytes,(void))

void ByteArray_obj::writeDouble(Float x){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_727_writeDouble)
HXLINE( 728)		int end = (this->position + 8);
HXLINE( 729)		this->ensureElem((end - 1),true);
HXLINE( 733)		if (this->bigEndian) {
HXLINE( 733)			x = ::mangleDouble(x);
            		}
HXLINE( 735)		this->setDouble(this->position,x);
HXLINE( 736)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 736)		_hx_tmp->position = (_hx_tmp->position + 8);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeDouble,(void))

void ByteArray_obj::writeFile(::String inString){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_742_writeFile)
HXDLIN( 742)		::nme::utils::ByteArray_obj::nme_byte_array_overwrite_file(inString,::hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeFile,(void))

void ByteArray_obj::writeFloat(Float x){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_747_writeFloat)
HXLINE( 748)		int end = (this->position + 4);
HXLINE( 749)		this->ensureElem((end - 1),true);
HXLINE( 752)		if (this->bigEndian) {
HXLINE( 752)			x = ::mangleFloat(x);
            		}
HXLINE( 754)		this->setFloat(this->position,x);
HXLINE( 755)		 ::nme::utils::ByteArray _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 755)		_hx_tmp->position = (_hx_tmp->position + 4);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeFloat,(void))

void ByteArray_obj::writeInt(int value){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_759_writeInt)
HXLINE( 760)		this->ensureElem((this->position + 3),true);
HXLINE( 762)		if (this->bigEndian) {
HXLINE( 764)			this->b->__unsafe_set(this->position++,(value >> 24));
HXLINE( 765)			this->b->__unsafe_set(this->position++,(value >> 16));
HXLINE( 766)			this->b->__unsafe_set(this->position++,(value >> 8));
HXLINE( 767)			this->b->__unsafe_set(this->position++,value);
            		}
            		else {
HXLINE( 772)			this->b->__unsafe_set(this->position++,value);
HXLINE( 773)			this->b->__unsafe_set(this->position++,(value >> 8));
HXLINE( 774)			this->b->__unsafe_set(this->position++,(value >> 16));
HXLINE( 775)			this->b->__unsafe_set(this->position++,(value >> 24));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeInt,(void))

void ByteArray_obj::writeShort(int value){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_782_writeShort)
HXLINE( 783)		this->ensureElem((this->position + 1),true);
HXLINE( 785)		if (this->bigEndian) {
HXLINE( 787)			this->b->__unsafe_set(this->position++,(value >> 8));
HXLINE( 788)			this->b->__unsafe_set(this->position++,value);
            		}
            		else {
HXLINE( 792)			this->b->__unsafe_set(this->position++,value);
HXLINE( 793)			this->b->__unsafe_set(this->position++,(value >> 8));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeShort,(void))

void ByteArray_obj::writeUnsignedInt(int value){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_799_writeUnsignedInt)
HXDLIN( 799)		this->writeInt(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUnsignedInt,(void))

void ByteArray_obj::writeUTF(::String s){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_803_writeUTF)
HXLINE( 807)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(s,null());
HXLINE( 810)		this->writeShort(bytes->length);
HXLINE( 811)		this->writeHaxeBytes(bytes,0,0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUTF,(void))

void ByteArray_obj::writeUTFBytes(::String s){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_815_writeUTFBytes)
HXLINE( 819)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(s,null());
HXLINE( 822)		this->writeHaxeBytes(bytes,0,0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,writeUTFBytes,(void))

int ByteArray_obj::get_bytesAvailable(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_826_get_bytesAvailable)
HXDLIN( 826)		return (this->length - this->position);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_bytesAvailable,return )

int ByteArray_obj::get_byteLength(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_827_get_byteLength)
HXDLIN( 827)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_byteLength,return )

::String ByteArray_obj::get_endian(){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_828_get_endian)
HXDLIN( 828)		if (this->bigEndian) {
HXDLIN( 828)			return HX_("bigEndian",7b,d5,5a,20);
            		}
            		else {
HXDLIN( 828)			return HX_("littleEndian",31,2e,7b,07);
            		}
HXDLIN( 828)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ByteArray_obj,get_endian,return )

::String ByteArray_obj::set_endian(::String s){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_829_set_endian)
HXDLIN( 829)		this->bigEndian = (s == HX_("bigEndian",7b,d5,5a,20));
HXDLIN( 829)		return s;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,set_endian,return )

 ::nme::utils::ByteArray ByteArray_obj::fromBytes( ::haxe::io::Bytes inBytes){
            	HX_GC_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_378_fromBytes)
HXLINE( 379)		 ::nme::utils::ByteArray result =  ::nme::utils::ByteArray_obj::__alloc( HX_CTX ,-1,null());
HXLINE( 380)		{
HXLINE( 380)			result->b = inBytes->b;
HXDLIN( 380)			result->length = inBytes->length;
            		}
HXLINE( 381)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,fromBytes,return )

 ::nme::utils::ByteArray ByteArray_obj::readFile(::String inString){
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_479_readFile)
HXDLIN( 479)		return ( ( ::nme::utils::ByteArray)(::nme::utils::ByteArray_obj::nme_byte_array_read_file(inString)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_obj,readFile,return )

 ::Dynamic ByteArray_obj::nme_byte_array_overwrite_file;

 ::Dynamic ByteArray_obj::nme_byte_array_read_file;

::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > ByteArray_obj::nme_lzma_encode;

::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > ByteArray_obj::nme_lzma_decode;


::hx::ObjectPtr< ByteArray_obj > ByteArray_obj::__new(::hx::Null< int >  __o_inSize,::hx::Null< bool >  __o_inWriteOnly) {
	::hx::ObjectPtr< ByteArray_obj > __this = new ByteArray_obj();
	__this->__construct(__o_inSize,__o_inWriteOnly);
	return __this;
}

::hx::ObjectPtr< ByteArray_obj > ByteArray_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< int >  __o_inSize,::hx::Null< bool >  __o_inWriteOnly) {
	ByteArray_obj *__this = (ByteArray_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ByteArray_obj), true, "nme.utils.ByteArray"));
	*(void **)__this = ByteArray_obj::_hx_vtable;
	__this->__construct(__o_inSize,__o_inWriteOnly);
	return __this;
}

ByteArray_obj::ByteArray_obj()
{
}

::hx::Val ByteArray_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"__get") ) { return ::hx::Val( __get_dyn() ); }
		if (HX_FIELD_EQ(inName,"__set") ) { return ::hx::Val( __set_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"slice") ) { return ::hx::Val( slice_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"endian") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( get_endian() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"deflate") ) { return ::hx::Val( deflate_dyn() ); }
		if (HX_FIELD_EQ(inName,"inflate") ) { return ::hx::Val( inflate_dyn() ); }
		if (HX_FIELD_EQ(inName,"readInt") ) { return ::hx::Val( readInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"readUTF") ) { return ::hx::Val( readUTF_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { return ::hx::Val( position ); }
		if (HX_FIELD_EQ(inName,"__length") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( get___length() ); }
		if (HX_FIELD_EQ(inName,"__resize") ) { return ::hx::Val( _hx___resize_dyn() ); }
		if (HX_FIELD_EQ(inName,"asString") ) { return ::hx::Val( asString_dyn() ); }
		if (HX_FIELD_EQ(inName,"compress") ) { return ::hx::Val( compress_dyn() ); }
		if (HX_FIELD_EQ(inName,"getStart") ) { return ::hx::Val( getStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"readByte") ) { return ::hx::Val( readByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeInt") ) { return ::hx::Val( writeInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUTF") ) { return ::hx::Val( writeUTF_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bigEndian") ) { return ::hx::Val( bigEndian ); }
		if (HX_FIELD_EQ(inName,"checkData") ) { return ::hx::Val( checkData_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLength") ) { return ::hx::Val( getLength_dyn() ); }
		if (HX_FIELD_EQ(inName,"readBytes") ) { return ::hx::Val( readBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"readFloat") ) { return ::hx::Val( readFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"readShort") ) { return ::hx::Val( readShort_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLength") ) { return ::hx::Val( setLength_dyn() ); }
		if (HX_FIELD_EQ(inName,"ThrowEOFi") ) { return ::hx::Val( ThrowEOFi_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeByte") ) { return ::hx::Val( writeByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeFile") ) { return ::hx::Val( writeFile_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteLength") ) { return ::hx::Val( inCallProp != ::hx::paccNever ? get_byteLength() : byteLength ); }
		if (HX_FIELD_EQ(inName,"ensureElem") ) { return ::hx::Val( ensureElem_dyn() ); }
		if (HX_FIELD_EQ(inName,"readDouble") ) { return ::hx::Val( readDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"uncompress") ) { return ::hx::Val( uncompress_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeBytes") ) { return ::hx::Val( writeBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeFloat") ) { return ::hx::Val( writeFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeShort") ) { return ::hx::Val( writeShort_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_endian") ) { return ::hx::Val( get_endian_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_endian") ) { return ::hx::Val( set_endian_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setByteSize") ) { return ::hx::Val( setByteSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"readBoolean") ) { return ::hx::Val( readBoolean_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeDouble") ) { return ::hx::Val( writeDouble_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get___length") ) { return ::hx::Val( get___length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set___length") ) { return ::hx::Val( set___length_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAllocSize") ) { return ::hx::Val( setAllocSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"nmeFromBytes") ) { return ::hx::Val( nmeFromBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"readUTFBytes") ) { return ::hx::Val( readUTFBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeBoolean") ) { return ::hx::Val( writeBoolean_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getByteBuffer") ) { return ::hx::Val( getByteBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"readMultiByte") ) { return ::hx::Val( readMultiByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"write_uncheck") ) { return ::hx::Val( write_uncheck_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUTFBytes") ) { return ::hx::Val( writeUTFBytes_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bytesAvailable") ) { return ::hx::Val( inCallProp != ::hx::paccNever ? get_bytesAvailable() : bytesAvailable ); }
		if (HX_FIELD_EQ(inName,"writeHaxeBytes") ) { return ::hx::Val( writeHaxeBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_byteLength") ) { return ::hx::Val( get_byteLength_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"readUnsignedInt") ) { return ::hx::Val( readUnsignedInt_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"readUnsignedByte") ) { return ::hx::Val( readUnsignedByte_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeUnsignedInt") ) { return ::hx::Val( writeUnsignedInt_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"readUnsignedShort") ) { return ::hx::Val( readUnsignedShort_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_bytesAvailable") ) { return ::hx::Val( get_bytesAvailable_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ByteArray_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"readFile") ) { outValue = readFile_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"nme_lzma_encode") ) { outValue = ( nme_lzma_encode ); return true; }
		if (HX_FIELD_EQ(inName,"nme_lzma_decode") ) { outValue = ( nme_lzma_decode ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"nme_byte_array_read_file") ) { outValue = ( nme_byte_array_read_file ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"nme_byte_array_overwrite_file") ) { outValue = ( nme_byte_array_overwrite_file ); return true; }
	}
	return false;
}

::hx::Val ByteArray_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"endian") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( set_endian(inValue.Cast< ::String >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { position=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__length") ) { if (inCallProp != ::hx::paccNever) return ::hx::Val( set___length(inValue.Cast< int >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bigEndian") ) { bigEndian=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"byteLength") ) { byteLength=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"bytesAvailable") ) { bytesAvailable=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ByteArray_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"nme_lzma_encode") ) { nme_lzma_encode=ioValue.Cast< ::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_lzma_decode") ) { nme_lzma_decode=ioValue.Cast< ::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"nme_byte_array_read_file") ) { nme_byte_array_read_file=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"nme_byte_array_overwrite_file") ) { nme_byte_array_overwrite_file=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void ByteArray_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bigEndian",7b,d5,5a,20));
	outFields->push(HX_("bytesAvailable",de,4b,9d,9b));
	outFields->push(HX_("endian",9b,98,88,fa));
	outFields->push(HX_("position",a9,a0,fa,ca));
	outFields->push(HX_("byteLength",0e,1e,0c,77));
	outFields->push(HX_("__length",06,00,37,47));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ByteArray_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(ByteArray_obj,bigEndian),HX_("bigEndian",7b,d5,5a,20)},
	{::hx::fsInt,(int)offsetof(ByteArray_obj,bytesAvailable),HX_("bytesAvailable",de,4b,9d,9b)},
	{::hx::fsInt,(int)offsetof(ByteArray_obj,position),HX_("position",a9,a0,fa,ca)},
	{::hx::fsInt,(int)offsetof(ByteArray_obj,byteLength),HX_("byteLength",0e,1e,0c,77)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo ByteArray_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ByteArray_obj::nme_byte_array_overwrite_file,HX_("nme_byte_array_overwrite_file",f4,88,b6,2e)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ByteArray_obj::nme_byte_array_read_file,HX_("nme_byte_array_read_file",41,24,66,10)},
	{::hx::fsObject /* ::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > */ ,(void *) &ByteArray_obj::nme_lzma_encode,HX_("nme_lzma_encode",da,ac,7a,b9)},
	{::hx::fsObject /* ::cpp::Function<  ::hx::Object *  ( ::hx::Object *) > */ ,(void *) &ByteArray_obj::nme_lzma_decode,HX_("nme_lzma_decode",f2,17,84,24)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ByteArray_obj_sMemberFields[] = {
	HX_("bigEndian",7b,d5,5a,20),
	HX_("bytesAvailable",de,4b,9d,9b),
	HX_("position",a9,a0,fa,ca),
	HX_("byteLength",0e,1e,0c,77),
	HX_("get___length",0f,b4,50,fc),
	HX_("set___length",83,d7,49,11),
	HX_("__resize",14,c5,aa,b0),
	HX_("__get",76,e1,2a,f2),
	HX_("__set",82,fc,33,f2),
	HX_("asString",63,33,06,a0),
	HX_("checkData",12,1f,43,96),
	HX_("clear",8d,71,5b,48),
	HX_("compress",a2,47,bf,83),
	HX_("deflate",6b,0b,fa,a2),
	HX_("setAllocSize",d4,0f,94,57),
	HX_("setByteSize",ab,d9,60,7d),
	HX_("ensureElem",6d,b1,2a,1e),
	HX_("getLength",1c,1e,5e,1b),
	HX_("getByteBuffer",5e,a2,0b,05),
	HX_("getStart",ec,83,e2,e3),
	HX_("inflate",87,9c,1b,0c),
	HX_("nmeFromBytes",7b,e2,49,10),
	HX_("readBoolean",f2,7d,ea,d0),
	HX_("readByte",7e,f9,1a,69),
	HX_("readBytes",35,55,7f,8e),
	HX_("readDouble",07,0f,47,2c),
	HX_("readFloat",66,12,7e,d3),
	HX_("readInt",39,b3,c9,02),
	HX_("readMultiByte",eb,7f,c9,15),
	HX_("readShort",46,d1,0e,4d),
	HX_("readUnsignedByte",13,0b,ce,9b),
	HX_("readUnsignedInt",44,ab,4f,05),
	HX_("readUnsignedShort",11,22,0b,77),
	HX_("readUTF",71,b7,d2,02),
	HX_("readUTFBytes",3a,27,0f,52),
	HX_("setLength",28,0a,af,fe),
	HX_("slice",52,c4,c7,7e),
	HX_("ThrowEOFi",53,b0,67,0c),
	HX_("uncompress",fb,2e,83,09),
	HX_("write_uncheck",2f,cd,ef,65),
	HX_("writeBoolean",89,8f,2d,43),
	HX_("writeByte",87,13,d7,49),
	HX_("writeBytes",0c,03,5a,52),
	HX_("writeHaxeBytes",86,d9,da,f8),
	HX_("writeDouble",50,7d,c4,c7),
	HX_("writeFile",fb,c2,6f,4c),
	HX_("writeFloat",3d,c0,58,97),
	HX_("writeInt",50,6d,f0,23),
	HX_("writeShort",1d,7f,e9,10),
	HX_("writeUnsignedInt",5b,d4,70,16),
	HX_("writeUTF",88,71,f9,23),
	HX_("writeUTFBytes",c3,79,7b,da),
	HX_("get_bytesAvailable",a7,2c,37,37),
	HX_("get_byteLength",57,a6,01,ed),
	HX_("get_endian",64,08,10,eb),
	HX_("set_endian",d8,a6,8d,ee),
	::String(null()) };

static void ByteArray_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ByteArray_obj::nme_byte_array_overwrite_file,"nme_byte_array_overwrite_file");
	HX_MARK_MEMBER_NAME(ByteArray_obj::nme_byte_array_read_file,"nme_byte_array_read_file");
	HX_MARK_MEMBER_NAME(ByteArray_obj::nme_lzma_encode,"nme_lzma_encode");
	HX_MARK_MEMBER_NAME(ByteArray_obj::nme_lzma_decode,"nme_lzma_decode");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ByteArray_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ByteArray_obj::nme_byte_array_overwrite_file,"nme_byte_array_overwrite_file");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::nme_byte_array_read_file,"nme_byte_array_read_file");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::nme_lzma_encode,"nme_lzma_encode");
	HX_VISIT_MEMBER_NAME(ByteArray_obj::nme_lzma_decode,"nme_lzma_decode");
};

#endif

::hx::Class ByteArray_obj::__mClass;

static ::String ByteArray_obj_sStaticFields[] = {
	HX_("fromBytes",a1,f2,20,72),
	HX_("readFile",f2,a8,b3,6b),
	HX_("nme_byte_array_overwrite_file",f4,88,b6,2e),
	HX_("nme_byte_array_read_file",41,24,66,10),
	HX_("nme_lzma_encode",da,ac,7a,b9),
	HX_("nme_lzma_decode",f2,17,84,24),
	::String(null())
};

void ByteArray_obj::__register()
{
	ByteArray_obj _hx_dummy;
	ByteArray_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.utils.ByteArray",ac,03,27,ea);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ByteArray_obj::__GetStatic;
	__mClass->mSetStaticField = &ByteArray_obj::__SetStatic;
	__mClass->mMarkFunc = ByteArray_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ByteArray_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ByteArray_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ByteArray_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ByteArray_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ByteArray_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ByteArray_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ByteArray_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_838_boot)
HXDLIN( 838)		nme_byte_array_overwrite_file = ::nme::Loader_obj::load(HX_("nme_byte_array_overwrite_file",f4,88,b6,2e),2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_d96dc8dd765f46a4_839_boot)
HXDLIN( 839)		nme_byte_array_read_file = ::nme::Loader_obj::load(HX_("nme_byte_array_read_file",41,24,66,10),1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_472da2e751edd1cd_9_boot)
HXDLIN(   9)		nme_lzma_encode = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_lzma_encode",da,ac,7a,b9),HX_("oo",20,61,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_472da2e751edd1cd_9_boot)
HXDLIN(   9)		nme_lzma_decode = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_lzma_decode",f2,17,84,24),HX_("oo",20,61,00,00),false);
            	}
}

} // end namespace nme
} // end namespace utils
