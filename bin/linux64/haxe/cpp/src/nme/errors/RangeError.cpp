// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_errors_Error
#include <nme/errors/Error.h>
#endif
#ifndef INCLUDED_nme_errors_RangeError
#include <nme/errors/RangeError.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4d9f4034b6d714f0_9_new,"nme.errors.RangeError","new",0xc8d80198,"nme.errors.RangeError.new","nme/errors/RangeError.hx",9,0x95f6f2b8)
namespace nme{
namespace errors{

void RangeError_obj::__construct(::String __o_inMessage){
            		::String inMessage = __o_inMessage;
            		if (::hx::IsNull(__o_inMessage)) inMessage = HX_("",00,00,00,00);
            	HX_STACKFRAME(&_hx_pos_4d9f4034b6d714f0_9_new)
HXDLIN(   9)		super::__construct(inMessage,0);
            	}

Dynamic RangeError_obj::__CreateEmpty() { return new RangeError_obj; }

void *RangeError_obj::_hx_vtable = 0;

Dynamic RangeError_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< RangeError_obj > _hx_result = new RangeError_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool RangeError_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x46636817) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x46636817;
	} else {
		return inClassId==(int)0x66770e1c;
	}
}


RangeError_obj::RangeError_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *RangeError_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *RangeError_obj_sStaticStorageInfo = 0;
#endif

::hx::Class RangeError_obj::__mClass;

void RangeError_obj::__register()
{
	RangeError_obj _hx_dummy;
	RangeError_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.errors.RangeError",a6,95,a9,58);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< RangeError_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RangeError_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RangeError_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace errors
