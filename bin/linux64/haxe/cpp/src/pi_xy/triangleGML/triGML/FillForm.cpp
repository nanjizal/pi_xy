// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_BasicShape
#include <pi_xy/triangleGML/triGML/BasicShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_FillForm
#include <pi_xy/triangleGML/triGML/FillForm.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_GroupShape
#include <pi_xy/triangleGML/triGML/GroupShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_ShapeInterface
#include <pi_xy/triangleGML/triGML/ShapeInterface.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_05bf9a518f4bae22_16_new,"pi_xy.triangleGML.triGML.FillForm","new",0xff06a2b5,"pi_xy.triangleGML.triGML.FillForm.new","pi_xy/triangleGML/triGML/FillForm.hx",16,0x25925dfc)
HX_LOCAL_STACK_FRAME(_hx_pos_05bf9a518f4bae22_21_setParameter,"pi_xy.triangleGML.triGML.FillForm","setParameter",0xf71cb0b2,"pi_xy.triangleGML.triGML.FillForm.setParameter","pi_xy/triangleGML/triGML/FillForm.hx",21,0x25925dfc)
namespace pi_xy{
namespace triangleGML{
namespace triGML{

void FillForm_obj::__construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_strokeWidth,::Array< ::String > strokeDashGapArray,::hx::Null< int >  __o_fill){
            		Float opacity = __o_opacity.Default(((Float)1.));
            		bool visibility = __o_visibility.Default(true);
            		int strokeColor = __o_strokeColor.Default(0);
            		Float strokeWidth = __o_strokeWidth.Default(((Float)1.));
            		int fill = __o_fill.Default(0);
            	HX_STACKFRAME(&_hx_pos_05bf9a518f4bae22_16_new)
HXLINE(  17)		super::__construct(opacity,visibility,strokeColor,strokeWidth,strokeDashGapArray);
HXLINE(  18)		this->fill = fill;
            	}

bool FillForm_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4f186619) {
		if (inClassId<=(int)0x1a0bd5c0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x1a0bd5c0;
		} else {
			return inClassId==(int)0x4f186619;
		}
	} else {
		return inClassId==(int)0x7ff8cec5;
	}
}

void FillForm_obj::setParameter(::String name,::String value){
            	HX_STACKFRAME(&_hx_pos_05bf9a518f4bae22_21_setParameter)
HXDLIN(  21)		if ((name == HX_("fill",83,ce,bb,43))) {
HXLINE(  23)			this->fill = ( (int)(::Std_obj::parseInt(value)) );
            		}
            		else {
HXLINE(  25)			this->super::setParameter(name,value);
            		}
            	}



FillForm_obj::FillForm_obj()
{
}

::hx::Val FillForm_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fill") ) { return ::hx::Val( fill ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setParameter") ) { return ::hx::Val( setParameter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FillForm_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fill") ) { fill=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FillForm_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("fill",83,ce,bb,43));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FillForm_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(FillForm_obj,fill),HX_("fill",83,ce,bb,43)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FillForm_obj_sStaticStorageInfo = 0;
#endif

static ::String FillForm_obj_sMemberFields[] = {
	HX_("fill",83,ce,bb,43),
	HX_("setParameter",a7,f5,ff,6c),
	::String(null()) };

::hx::Class FillForm_obj::__mClass;

void FillForm_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.triangleGML.triGML.FillForm",43,24,90,d7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FillForm_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FillForm_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FillForm_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FillForm_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace triangleGML
} // end namespace triGML
