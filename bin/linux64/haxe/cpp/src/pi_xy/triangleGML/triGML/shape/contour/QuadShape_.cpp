// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_BasicShape
#include <pi_xy/triangleGML/triGML/BasicShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_GroupShape
#include <pi_xy/triangleGML/triGML/GroupShape.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_ShapeInterface
#include <pi_xy/triangleGML/triGML/ShapeInterface.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_shape_contour_QuadShape_
#include <pi_xy/triangleGML/triGML/shape/contour/QuadShape_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dda9541fc95122d8_25_new,"pi_xy.triangleGML.triGML.shape.contour.QuadShape_","new",0xdd9b8a54,"pi_xy.triangleGML.triGML.shape.contour.QuadShape_.new","pi_xy/triangleGML/triGML/shape/contour/QuadShape_.hx",25,0x2a113efb)
HX_LOCAL_STACK_FRAME(_hx_pos_dda9541fc95122d8_37_setParameter,"pi_xy.triangleGML.triGML.shape.contour.QuadShape_","setParameter",0x46735d33,"pi_xy.triangleGML.triGML.shape.contour.QuadShape_.setParameter","pi_xy/triangleGML/triGML/shape/contour/QuadShape_.hx",37,0x2a113efb)
namespace pi_xy{
namespace triangleGML{
namespace triGML{
namespace shape{
namespace contour{

void QuadShape__obj::__construct(::hx::Null< Float >  __o_opacity,::hx::Null< bool >  __o_visibility,::hx::Null< int >  __o_strokeColor,::hx::Null< Float >  __o_aX,::hx::Null< Float >  __o_aY,::hx::Null< Float >  __o_bX,::hx::Null< Float >  __o_bY,::hx::Null< Float >  __o_cX,::hx::Null< Float >  __o_cY,::hx::Null< Float >  __o_dX,::hx::Null< Float >  __o_dY){
            		Float opacity = __o_opacity.Default(((Float)1.));
            		bool visibility = __o_visibility.Default(true);
            		int strokeColor = __o_strokeColor.Default(-1048576);
            		Float aX = __o_aX.Default(((Float)0.));
            		Float aY = __o_aY.Default(((Float)0.));
            		Float bX = __o_bX.Default(((Float)1.));
            		Float bY = __o_bY.Default(((Float)0.));
            		Float cX = __o_cX.Default(((Float)1.));
            		Float cY = __o_cY.Default(((Float)1.));
            		Float dX = __o_dX.Default(((Float)0.));
            		Float dY = __o_dY.Default(((Float)1.));
            	HX_STACKFRAME(&_hx_pos_dda9541fc95122d8_25_new)
HXLINE(  26)		super::__construct(opacity,visibility,strokeColor,((Float)0.),null());
HXLINE(  27)		this->aX = aX;
HXLINE(  28)		this->aY = aY;
HXLINE(  29)		this->bX = bX;
HXLINE(  30)		this->bY = bY;
HXLINE(  31)		this->cX = cX;
HXLINE(  32)		this->cY = cY;
HXLINE(  33)		this->dX = dX;
HXLINE(  34)		this->dY = dY;
            	}

bool QuadShape__obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3b57bb90) {
		if (inClassId<=(int)0x1a0bd5c0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x1a0bd5c0;
		} else {
			return inClassId==(int)0x3b57bb90;
		}
	} else {
		return inClassId==(int)0x7ff8cec5;
	}
}

void QuadShape__obj::setParameter(::String name,::String value){
            	HX_STACKFRAME(&_hx_pos_dda9541fc95122d8_37_setParameter)
HXDLIN(  37)		::String _hx_switch_0 = name;
            		if (  (_hx_switch_0==HX_("aX",d7,54,00,00)) ){
HXLINE(  39)			this->aX = ::Std_obj::parseFloat(value);
HXDLIN(  39)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("aY",d8,54,00,00)) ){
HXLINE(  41)			this->aY = ::Std_obj::parseFloat(value);
HXDLIN(  41)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("bX",b6,55,00,00)) ){
HXLINE(  43)			this->bX = ::Std_obj::parseFloat(value);
HXDLIN(  43)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("bY",b7,55,00,00)) ){
HXLINE(  45)			this->bY = ::Std_obj::parseFloat(value);
HXDLIN(  45)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("cX",95,56,00,00)) ){
HXLINE(  47)			this->cX = ::Std_obj::parseFloat(value);
HXDLIN(  47)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("cY",96,56,00,00)) ){
HXLINE(  49)			this->cY = ::Std_obj::parseFloat(value);
HXDLIN(  49)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("dX",74,57,00,00)) ){
HXLINE(  51)			this->dX = ::Std_obj::parseFloat(value);
HXDLIN(  51)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("dY",75,57,00,00)) ){
HXLINE(  53)			this->dY = ::Std_obj::parseFloat(value);
HXDLIN(  53)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  55)			this->super::setParameter(name,value);
            		}
            		_hx_goto_1:;
            	}



QuadShape__obj::QuadShape__obj()
{
}

::hx::Val QuadShape__obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"aX") ) { return ::hx::Val( aX ); }
		if (HX_FIELD_EQ(inName,"aY") ) { return ::hx::Val( aY ); }
		if (HX_FIELD_EQ(inName,"bX") ) { return ::hx::Val( bX ); }
		if (HX_FIELD_EQ(inName,"bY") ) { return ::hx::Val( bY ); }
		if (HX_FIELD_EQ(inName,"cX") ) { return ::hx::Val( cX ); }
		if (HX_FIELD_EQ(inName,"cY") ) { return ::hx::Val( cY ); }
		if (HX_FIELD_EQ(inName,"dX") ) { return ::hx::Val( dX ); }
		if (HX_FIELD_EQ(inName,"dY") ) { return ::hx::Val( dY ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setParameter") ) { return ::hx::Val( setParameter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val QuadShape__obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"aX") ) { aX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"aY") ) { aY=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bX") ) { bX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bY") ) { bY=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"cX") ) { cX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"cY") ) { cY=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dX") ) { dX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dY") ) { dY=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void QuadShape__obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("aX",d7,54,00,00));
	outFields->push(HX_("aY",d8,54,00,00));
	outFields->push(HX_("bX",b6,55,00,00));
	outFields->push(HX_("bY",b7,55,00,00));
	outFields->push(HX_("cX",95,56,00,00));
	outFields->push(HX_("cY",96,56,00,00));
	outFields->push(HX_("dX",74,57,00,00));
	outFields->push(HX_("dY",75,57,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo QuadShape__obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,aX),HX_("aX",d7,54,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,aY),HX_("aY",d8,54,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,bX),HX_("bX",b6,55,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,bY),HX_("bY",b7,55,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,cX),HX_("cX",95,56,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,cY),HX_("cY",96,56,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,dX),HX_("dX",74,57,00,00)},
	{::hx::fsFloat,(int)offsetof(QuadShape__obj,dY),HX_("dY",75,57,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *QuadShape__obj_sStaticStorageInfo = 0;
#endif

static ::String QuadShape__obj_sMemberFields[] = {
	HX_("aX",d7,54,00,00),
	HX_("aY",d8,54,00,00),
	HX_("bX",b6,55,00,00),
	HX_("bY",b7,55,00,00),
	HX_("cX",95,56,00,00),
	HX_("cY",96,56,00,00),
	HX_("dX",74,57,00,00),
	HX_("dY",75,57,00,00),
	HX_("setParameter",a7,f5,ff,6c),
	::String(null()) };

::hx::Class QuadShape__obj::__mClass;

void QuadShape__obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.triangleGML.triGML.shape.contour.QuadShape_",62,10,d3,82);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(QuadShape__obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< QuadShape__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = QuadShape__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = QuadShape__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace triangleGML
} // end namespace triGML
} // end namespace shape
} // end namespace contour
