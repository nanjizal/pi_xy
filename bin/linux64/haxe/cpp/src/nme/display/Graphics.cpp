// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_nme_display_BitmapData
#include <nme/display/BitmapData.h>
#endif
#ifndef INCLUDED_nme_display_CapsStyle
#include <nme/display/CapsStyle.h>
#endif
#ifndef INCLUDED_nme_display_GradientType
#include <nme/display/GradientType.h>
#endif
#ifndef INCLUDED_nme_display_Graphics
#include <nme/display/Graphics.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_IGraphicsData
#include <nme/display/IGraphicsData.h>
#endif
#ifndef INCLUDED_nme_display_InterpolationMethod
#include <nme/display/InterpolationMethod.h>
#endif
#ifndef INCLUDED_nme_display_JointStyle
#include <nme/display/JointStyle.h>
#endif
#ifndef INCLUDED_nme_display_LineScaleMode
#include <nme/display/LineScaleMode.h>
#endif
#ifndef INCLUDED_nme_display_SpreadMethod
#include <nme/display/SpreadMethod.h>
#endif
#ifndef INCLUDED_nme_display_Tilesheet
#include <nme/display/Tilesheet.h>
#endif
#ifndef INCLUDED_nme_display_TriangleCulling
#include <nme/display/TriangleCulling.h>
#endif
#ifndef INCLUDED_nme_geom_Matrix
#include <nme/geom/Matrix.h>
#endif
#ifndef INCLUDED_nme_utils_ByteArray
#include <nme/utils/ByteArray.h>
#endif
#ifndef INCLUDED_nme_utils_Float32Buffer
#include <nme/utils/Float32Buffer.h>
#endif
#ifndef INCLUDED_nme_utils_IDataInput
#include <nme/utils/IDataInput.h>
#endif
#ifndef INCLUDED_nme_utils_IDataOutput
#include <nme/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_nme_utils_IMemoryRange
#include <nme/utils/IMemoryRange.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_29_new,"nme.display.Graphics","new",0x19cad331,"nme.display.Graphics.new","nme/display/Graphics.hx",29,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_34_arcTo,"nme.display.Graphics","arcTo",0xccde197e,"nme.display.Graphics.arcTo","nme/display/Graphics.hx",34,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_39_beginBitmapFill,"nme.display.Graphics","beginBitmapFill",0xcd2041ec,"nme.display.Graphics.beginBitmapFill","nme/display/Graphics.hx",39,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_44_beginFill,"nme.display.Graphics","beginFill",0xb74022dd,"nme.display.Graphics.beginFill","nme/display/Graphics.hx",44,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_48_beginGradientFill,"nme.display.Graphics","beginGradientFill",0xe2672aed,"nme.display.Graphics.beginGradientFill","nme/display/Graphics.hx",48,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_60_clear,"nme.display.Graphics","clear",0xefb58a9e,"nme.display.Graphics.clear","nme/display/Graphics.hx",60,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_65_curveTo,"nme.display.Graphics","curveTo",0x93679f5b,"nme.display.Graphics.curveTo","nme/display/Graphics.hx",65,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_70_cubicTo,"nme.display.Graphics","cubicTo",0x54650cb6,"nme.display.Graphics.cubicTo","nme/display/Graphics.hx",70,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_75_drawCircle,"nme.display.Graphics","drawCircle",0xc24d5683,"nme.display.Graphics.drawCircle","nme/display/Graphics.hx",75,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_80_drawEllipse,"nme.display.Graphics","drawEllipse",0x572e410b,"nme.display.Graphics.drawEllipse","nme/display/Graphics.hx",80,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_84_drawGraphicsData,"nme.display.Graphics","drawGraphicsData",0xb2bf7948,"nme.display.Graphics.drawGraphicsData","nme/display/Graphics.hx",84,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_95_drawGraphicsDatum,"nme.display.Graphics","drawGraphicsDatum",0xb4cab791,"nme.display.Graphics.drawGraphicsDatum","nme/display/Graphics.hx",95,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_100_drawPoints,"nme.display.Graphics","drawPoints",0x636df696,"nme.display.Graphics.drawPoints","nme/display/Graphics.hx",100,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_105_drawRect,"nme.display.Graphics","drawRect",0xde891ed7,"nme.display.Graphics.drawRect","nme/display/Graphics.hx",105,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_110_drawRoundRect,"nme.display.Graphics","drawRoundRect",0x094dd5ff,"nme.display.Graphics.drawRoundRect","nme/display/Graphics.hx",110,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_118_drawPath,"nme.display.Graphics","drawPath",0xdd33b758,"nme.display.Graphics.drawPath","nme/display/Graphics.hx",118,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_121_drawTiles,"nme.display.Graphics","drawTiles",0x02eaa872,"nme.display.Graphics.drawTiles","nme/display/Graphics.hx",121,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_150_drawTriangles,"nme.display.Graphics","drawTriangles",0x050b5618,"nme.display.Graphics.drawTriangles","nme/display/Graphics.hx",150,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_157_endFill,"nme.display.Graphics","endFill",0xeabfc74f,"nme.display.Graphics.endFill","nme/display/Graphics.hx",157,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_162_lineBitmapStyle,"nme.display.Graphics","lineBitmapStyle",0xa839b77f,"nme.display.Graphics.lineBitmapStyle","nme/display/Graphics.hx",162,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_166_lineGradientStyle,"nme.display.Graphics","lineGradientStyle",0x7656131e,"nme.display.Graphics.lineGradientStyle","nme/display/Graphics.hx",166,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_178_lineStyle,"nme.display.Graphics","lineStyle",0xf5c31e2e,"nme.display.Graphics.lineStyle","nme/display/Graphics.hx",178,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_183_lineTo,"nme.display.Graphics","lineTo",0xb41c1c5e,"nme.display.Graphics.lineTo","nme/display/Graphics.hx",183,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_188_moveTo,"nme.display.Graphics","moveTo",0x9428a8bb,"nme.display.Graphics.moveTo","nme/display/Graphics.hx",188,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_196_RGBA,"nme.display.Graphics","RGBA",0x65150cc3,"nme.display.Graphics.RGBA","nme/display/Graphics.hx",196,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_11_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",11,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_12_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",12,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_13_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",13,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_14_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",14,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_15_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",15,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_16_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",16,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_17_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",17,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_18_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",18,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_19_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",19,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_20_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",20,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_21_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",21,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_22_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",22,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_776b1985b1f5c6a0_23_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/display/Graphics.hx",23,0x344f6f9d)
HX_LOCAL_STACK_FRAME(_hx_pos_ed40282147077d81_9_boot,"nme.display.Graphics","boot",0x6fc6f841,"nme.display.Graphics.boot","nme/PrimeLoader.hx",9,0xcf416155)
namespace nme{
namespace display{

void Graphics_obj::__construct( ::Dynamic inHandle){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_29_new)
HXDLIN(  29)		this->nmeHandle = inHandle;
            	}

Dynamic Graphics_obj::__CreateEmpty() { return new Graphics_obj; }

void *Graphics_obj::_hx_vtable = 0;

Dynamic Graphics_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Graphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4772894b;
}

void Graphics_obj::arcTo(Float inCX,Float inCY,Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_34_arcTo)
HXDLIN(  34)		::nme::display::Graphics_obj::nme_gfx_arc_to(::hx::DynamicPtr(this->nmeHandle),inCX,inCY,inX,inY);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,arcTo,(void))

void Graphics_obj::beginBitmapFill( ::nme::display::BitmapData bitmap, ::nme::geom::Matrix matrix,::hx::Null< bool >  __o_repeat,::hx::Null< bool >  __o_smooth){
            		bool repeat = __o_repeat.Default(true);
            		bool smooth = __o_smooth.Default(false);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_39_beginBitmapFill)
HXDLIN(  39)		::nme::display::Graphics_obj::nme_gfx_begin_bitmap_fill(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(bitmap->nmeHandle),::hx::DynamicPtr(matrix),repeat,smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,beginBitmapFill,(void))

void Graphics_obj::beginFill(int color,::hx::Null< Float >  __o_alpha){
            		Float alpha = __o_alpha.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_44_beginFill)
HXDLIN(  44)		::nme::display::Graphics_obj::nme_gfx_begin_fill(::hx::DynamicPtr(this->nmeHandle),color,alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,beginFill,(void))

void Graphics_obj::beginGradientFill( ::nme::display::GradientType type,::cpp::VirtualArray colors,::cpp::VirtualArray alphas,::cpp::VirtualArray ratios, ::nme::geom::Matrix matrix, ::nme::display::SpreadMethod spreadMethod, ::nme::display::InterpolationMethod interpolationMethod,::hx::Null< Float >  __o_focalPointRatio){
            		Float focalPointRatio = __o_focalPointRatio.Default(((Float)0.0));
            	HX_GC_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_48_beginGradientFill)
HXLINE(  49)		if (::hx::IsNull( matrix )) {
HXLINE(  51)			matrix =  ::nme::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE(  52)			matrix->createGradientBox(( (Float)(200) ),( (Float)(200) ),0,-100,-100);
            		}
HXLINE(  55)		::cpp::Function< void  ( ::hx::Object *,int, ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int,Float,bool) > _hx_tmp = ::nme::display::Graphics_obj::nme_gfx_begin_set_gradient_fill;
HXDLIN(  55)		 ::Dynamic _hx_tmp1 = this->nmeHandle;
HXDLIN(  55)		int _hx_tmp2 = _hx_getEnumValueIndex(type);
HXDLIN(  55)		int _hx_tmp3;
HXDLIN(  55)		if (::hx::IsNull( spreadMethod )) {
HXLINE(  55)			_hx_tmp3 = 0;
            		}
            		else {
HXLINE(  55)			_hx_tmp3 = _hx_getEnumValueIndex(spreadMethod);
            		}
HXDLIN(  55)		int _hx_tmp4;
HXDLIN(  55)		if (::hx::IsNull( interpolationMethod )) {
HXLINE(  55)			_hx_tmp4 = 0;
            		}
            		else {
HXLINE(  55)			_hx_tmp4 = _hx_getEnumValueIndex(interpolationMethod);
            		}
HXDLIN(  55)		_hx_tmp(::hx::DynamicPtr(_hx_tmp1),_hx_tmp2,::hx::DynamicPtr(colors),::hx::DynamicPtr(alphas),::hx::DynamicPtr(ratios),::hx::DynamicPtr(matrix),_hx_tmp3,_hx_tmp4,focalPointRatio,true);
            	}


HX_DEFINE_DYNAMIC_FUNC8(Graphics_obj,beginGradientFill,(void))

void Graphics_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_60_clear)
HXDLIN(  60)		::nme::display::Graphics_obj::nme_gfx_clear(::hx::DynamicPtr(this->nmeHandle));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,clear,(void))

void Graphics_obj::curveTo(Float inCX,Float inCY,Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_65_curveTo)
HXDLIN(  65)		::nme::display::Graphics_obj::nme_gfx_curve_to(::hx::DynamicPtr(this->nmeHandle),inCX,inCY,inX,inY);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,curveTo,(void))

void Graphics_obj::cubicTo(Float inCx0,Float inCy0,Float inCx1,Float inCy1,Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_70_cubicTo)
HXDLIN(  70)		::nme::display::Graphics_obj::nme_gfx_cubic_to(::hx::DynamicPtr(this->nmeHandle),inCx0,inCy0,inCx1,inCy1,inX,inY);
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,cubicTo,(void))

void Graphics_obj::drawCircle(Float inX,Float inY,Float inRadius){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_75_drawCircle)
HXDLIN(  75)		::nme::display::Graphics_obj::nme_gfx_draw_ellipse(::hx::DynamicPtr(this->nmeHandle),(inX - inRadius),(inY - inRadius),(inRadius * ( (Float)(2) )),(inRadius * ( (Float)(2) )));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawCircle,(void))

void Graphics_obj::drawEllipse(Float inX,Float inY,Float inWidth,Float inHeight){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_80_drawEllipse)
HXDLIN(  80)		::nme::display::Graphics_obj::nme_gfx_draw_ellipse(::hx::DynamicPtr(this->nmeHandle),inX,inY,inWidth,inHeight);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,drawEllipse,(void))

void Graphics_obj::drawGraphicsData(::Array< ::Dynamic> graphicsData){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_84_drawGraphicsData)
HXLINE(  85)		::cpp::VirtualArray handles = ::cpp::VirtualArray_obj::__new();
HXLINE(  87)		{
HXLINE(  87)			int _g = 0;
HXDLIN(  87)			while((_g < graphicsData->length)){
HXLINE(  87)				 ::nme::display::IGraphicsData datum = graphicsData->__get(_g).StaticCast<  ::nme::display::IGraphicsData >();
HXDLIN(  87)				_g = (_g + 1);
HXLINE(  88)				handles->push(datum->nmeHandle);
            			}
            		}
HXLINE(  90)		::nme::display::Graphics_obj::nme_gfx_draw_data(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(handles));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,drawGraphicsData,(void))

void Graphics_obj::drawGraphicsDatum( ::nme::display::IGraphicsData graphicsDatum){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_95_drawGraphicsDatum)
HXDLIN(  95)		::nme::display::Graphics_obj::nme_gfx_draw_datum(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(graphicsDatum->nmeHandle));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,drawGraphicsDatum,(void))

void Graphics_obj::drawPoints(::Array< Float > inXY,::Array< int > inPointRGBA,::hx::Null< int >  __o_inDefaultRGBA,::hx::Null< Float >  __o_inSize){
            		int inDefaultRGBA = __o_inDefaultRGBA.Default(-1);
            		Float inSize = __o_inSize.Default(((Float)-1.0));
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_100_drawPoints)
HXDLIN( 100)		::nme::display::Graphics_obj::nme_gfx_draw_points(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(inXY),::hx::DynamicPtr(inPointRGBA),inDefaultRGBA,false,inSize);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,drawPoints,(void))

void Graphics_obj::drawRect(Float inX,Float inY,Float inWidth,Float inHeight){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_105_drawRect)
HXDLIN( 105)		::nme::display::Graphics_obj::nme_gfx_draw_rect(::hx::DynamicPtr(this->nmeHandle),inX,inY,inWidth,inHeight);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,drawRect,(void))

void Graphics_obj::drawRoundRect(Float inX,Float inY,Float inWidth,Float inHeight,Float inRadX, ::Dynamic inRadY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_110_drawRoundRect)
HXDLIN( 110)		bool _hx_tmp;
HXDLIN( 110)		if ((inRadX != 0)) {
HXDLIN( 110)			_hx_tmp = ::hx::IsEq( inRadY,0 );
            		}
            		else {
HXDLIN( 110)			_hx_tmp = true;
            		}
HXDLIN( 110)		if (_hx_tmp) {
HXLINE( 111)			::nme::display::Graphics_obj::nme_gfx_draw_rect(::hx::DynamicPtr(this->nmeHandle),inX,inY,inWidth,inHeight);
            		}
            		else {
HXLINE( 113)			Float _hx_tmp1;
HXDLIN( 113)			if (::hx::IsNull( inRadY )) {
HXLINE( 113)				_hx_tmp1 = inRadX;
            			}
            			else {
HXLINE( 113)				_hx_tmp1 = ( (Float)(inRadY) );
            			}
HXDLIN( 113)			::nme::display::Graphics_obj::nme_gfx_draw_round_rect(::hx::DynamicPtr(this->nmeHandle),inX,inY,inWidth,inHeight,inRadX,_hx_tmp1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,drawRoundRect,(void))

void Graphics_obj::drawPath(::Array< int > commands,::Array< Float > data,::String __o_winding){
            		::String winding = __o_winding;
            		if (::hx::IsNull(__o_winding)) winding = HX_("evenOdd",b5,c6,7e,06);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_118_drawPath)
HXDLIN( 118)		::nme::display::Graphics_obj::nme_gfx_draw_path(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(commands),::hx::DynamicPtr(data),(winding == HX_("evenOdd",b5,c6,7e,06)));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawPath,(void))

void Graphics_obj::drawTiles( ::nme::display::Tilesheet sheet, ::Dynamic inXYID,::hx::Null< bool >  __o_inSmooth,::hx::Null< int >  __o_inFlags,::hx::Null< int >  __o_inCount){
            		bool inSmooth = __o_inSmooth.Default(false);
            		int inFlags = __o_inFlags.Default(0);
            		int inCount = __o_inCount.Default(-1);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_121_drawTiles)
HXLINE( 122)		this->beginBitmapFill(sheet->nmeBitmap,null(),false,inSmooth);
HXLINE( 124)		if (inSmooth) {
HXLINE( 125)			inFlags = (inFlags | 4096);
            		}
HXLINE( 130)		 ::nme::utils::Float32Buffer buffer = ( ( ::nme::utils::Float32Buffer)(inXYID) );
HXLINE( 133)		if (::hx::IsNotNull( buffer )) {
HXLINE( 135)			if ((inCount < 0)) {
HXLINE( 136)				inCount = buffer->count;
            			}
HXLINE( 140)			::nme::display::Graphics_obj::nme_gfx_draw_tiles(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(sheet->nmeHandle),::hx::DynamicPtr(buffer->b),inFlags,inCount);
            		}
            		else {
HXLINE( 145)			::nme::display::Graphics_obj::nme_gfx_draw_tiles(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(sheet->nmeHandle),::hx::DynamicPtr(inXYID),inFlags,inCount);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawTiles,(void))

void Graphics_obj::drawTriangles(::Array< Float > vertices,::Array< int > indices,::Array< Float > uvtData, ::nme::display::TriangleCulling culling,::Array< int > colours,::hx::Null< int >  __o_blendMode){
            		int blendMode = __o_blendMode.Default(0);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_150_drawTriangles)
HXLINE( 151)		int cull;
HXDLIN( 151)		if (::hx::IsNull( culling )) {
HXLINE( 151)			cull = 0;
            		}
            		else {
HXLINE( 151)			cull = (_hx_getEnumValueIndex(culling) - 1);
            		}
HXLINE( 152)		::nme::display::Graphics_obj::nme_gfx_draw_triangles(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(vertices),::hx::DynamicPtr(indices),::hx::DynamicPtr(uvtData),cull,::hx::DynamicPtr(colours),blendMode);
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,drawTriangles,(void))

void Graphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_157_endFill)
HXDLIN( 157)		::nme::display::Graphics_obj::nme_gfx_end_fill(::hx::DynamicPtr(this->nmeHandle));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,endFill,(void))

void Graphics_obj::lineBitmapStyle( ::nme::display::BitmapData bitmap, ::nme::geom::Matrix matrix,::hx::Null< bool >  __o_repeat,::hx::Null< bool >  __o_smooth){
            		bool repeat = __o_repeat.Default(true);
            		bool smooth = __o_smooth.Default(false);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_162_lineBitmapStyle)
HXDLIN( 162)		::nme::display::Graphics_obj::nme_gfx_line_bitmap_fill(::hx::DynamicPtr(this->nmeHandle),::hx::DynamicPtr(bitmap->nmeHandle),::hx::DynamicPtr(matrix),repeat,smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,lineBitmapStyle,(void))

void Graphics_obj::lineGradientStyle( ::nme::display::GradientType type,::cpp::VirtualArray colors,::cpp::VirtualArray alphas,::cpp::VirtualArray ratios, ::nme::geom::Matrix matrix, ::nme::display::SpreadMethod spreadMethod, ::nme::display::InterpolationMethod interpolationMethod,::hx::Null< Float >  __o_focalPointRatio){
            		Float focalPointRatio = __o_focalPointRatio.Default(((Float)0.0));
            	HX_GC_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_166_lineGradientStyle)
HXLINE( 167)		if (::hx::IsNull( matrix )) {
HXLINE( 169)			matrix =  ::nme::geom::Matrix_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
HXLINE( 170)			matrix->createGradientBox(( (Float)(200) ),( (Float)(200) ),0,-100,-100);
            		}
HXLINE( 173)		::cpp::Function< void  ( ::hx::Object *,int, ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int,Float,bool) > _hx_tmp = ::nme::display::Graphics_obj::nme_gfx_begin_set_gradient_fill;
HXDLIN( 173)		 ::Dynamic _hx_tmp1 = this->nmeHandle;
HXDLIN( 173)		int _hx_tmp2 = _hx_getEnumValueIndex(type);
HXDLIN( 173)		int _hx_tmp3;
HXDLIN( 173)		if (::hx::IsNull( spreadMethod )) {
HXLINE( 173)			_hx_tmp3 = 0;
            		}
            		else {
HXLINE( 173)			_hx_tmp3 = _hx_getEnumValueIndex(spreadMethod);
            		}
HXDLIN( 173)		int _hx_tmp4;
HXDLIN( 173)		if (::hx::IsNull( interpolationMethod )) {
HXLINE( 173)			_hx_tmp4 = 0;
            		}
            		else {
HXLINE( 173)			_hx_tmp4 = _hx_getEnumValueIndex(interpolationMethod);
            		}
HXDLIN( 173)		_hx_tmp(::hx::DynamicPtr(_hx_tmp1),_hx_tmp2,::hx::DynamicPtr(colors),::hx::DynamicPtr(alphas),::hx::DynamicPtr(ratios),::hx::DynamicPtr(matrix),_hx_tmp3,_hx_tmp4,focalPointRatio,false);
            	}


HX_DEFINE_DYNAMIC_FUNC8(Graphics_obj,lineGradientStyle,(void))

void Graphics_obj::lineStyle( ::Dynamic thickness,::hx::Null< int >  __o_color,::hx::Null< Float >  __o_alpha,::hx::Null< bool >  __o_pixelHinting, ::nme::display::LineScaleMode scaleMode, ::nme::display::CapsStyle caps, ::nme::display::JointStyle joints,::hx::Null< Float >  __o_miterLimit){
            		int color = __o_color.Default(0);
            		Float alpha = __o_alpha.Default(((Float)1.0));
            		bool pixelHinting = __o_pixelHinting.Default(false);
            		Float miterLimit = __o_miterLimit.Default(3);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_178_lineStyle)
HXDLIN( 178)		::cpp::Function< void  ( ::hx::Object *, ::hx::Object *,int,Float,bool,int,int,int,Float) > _hx_tmp = ::nme::display::Graphics_obj::nme_gfx_line_style;
HXDLIN( 178)		 ::Dynamic _hx_tmp1 = this->nmeHandle;
HXDLIN( 178)		int _hx_tmp2;
HXDLIN( 178)		if (::hx::IsNull( scaleMode )) {
HXDLIN( 178)			_hx_tmp2 = 0;
            		}
            		else {
HXDLIN( 178)			_hx_tmp2 = _hx_getEnumValueIndex(scaleMode);
            		}
HXDLIN( 178)		int _hx_tmp3;
HXDLIN( 178)		if (::hx::IsNull( caps )) {
HXDLIN( 178)			_hx_tmp3 = 0;
            		}
            		else {
HXDLIN( 178)			_hx_tmp3 = _hx_getEnumValueIndex(caps);
            		}
HXDLIN( 178)		int _hx_tmp4;
HXDLIN( 178)		if (::hx::IsNull( joints )) {
HXDLIN( 178)			_hx_tmp4 = 0;
            		}
            		else {
HXDLIN( 178)			_hx_tmp4 = _hx_getEnumValueIndex(joints);
            		}
HXDLIN( 178)		_hx_tmp(::hx::DynamicPtr(_hx_tmp1),::hx::DynamicPtr(thickness),color,alpha,pixelHinting,_hx_tmp2,_hx_tmp3,_hx_tmp4,miterLimit);
            	}


HX_DEFINE_DYNAMIC_FUNC8(Graphics_obj,lineStyle,(void))

void Graphics_obj::lineTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_183_lineTo)
HXDLIN( 183)		::nme::display::Graphics_obj::nme_gfx_line_to(::hx::DynamicPtr(this->nmeHandle),inX,inY);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,lineTo,(void))

void Graphics_obj::moveTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_188_moveTo)
HXDLIN( 188)		::nme::display::Graphics_obj::nme_gfx_move_to(::hx::DynamicPtr(this->nmeHandle),inX,inY);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,moveTo,(void))

int Graphics_obj::TILE_SCALE;

int Graphics_obj::TILE_ROTATION;

int Graphics_obj::TILE_RGB;

int Graphics_obj::TILE_ALPHA;

int Graphics_obj::TILE_TRANS_2x2;

int Graphics_obj::TILE_RECT;

int Graphics_obj::TILE_ORIGIN;

int Graphics_obj::TILE_NO_ID;

int Graphics_obj::TILE_MOUSE_ENABLE;

int Graphics_obj::TILE_FIXED_SIZE;

int Graphics_obj::TILE_SMOOTH;

int Graphics_obj::TILE_BLEND_NORMAL;

int Graphics_obj::TILE_BLEND_ADD;

int Graphics_obj::RGBA(int inRGB,::hx::Null< int >  __o_inA){
            		int inA = __o_inA.Default(255);
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_196_RGBA)
HXDLIN( 196)		return (inRGB | (inA << 24));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,RGBA,return )

::cpp::Function< void  ( ::hx::Object *) > Graphics_obj::nme_gfx_clear;

::cpp::Function< void  ( ::hx::Object *,int,Float) > Graphics_obj::nme_gfx_begin_fill;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > Graphics_obj::nme_gfx_begin_bitmap_fill;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > Graphics_obj::nme_gfx_line_bitmap_fill;

::cpp::Function< void  ( ::hx::Object *,int, ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int,Float,bool) > Graphics_obj::nme_gfx_begin_set_gradient_fill;

::cpp::Function< void  ( ::hx::Object *) > Graphics_obj::nme_gfx_end_fill;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *,int,Float,bool,int,int,int,Float) > Graphics_obj::nme_gfx_line_style;

::cpp::Function< void  ( ::hx::Object *,Float,Float) > Graphics_obj::nme_gfx_move_to;

::cpp::Function< void  ( ::hx::Object *,Float,Float) > Graphics_obj::nme_gfx_line_to;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > Graphics_obj::nme_gfx_curve_to;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > Graphics_obj::nme_gfx_cubic_to;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > Graphics_obj::nme_gfx_arc_to;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > Graphics_obj::nme_gfx_draw_ellipse;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > Graphics_obj::nme_gfx_draw_data;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > Graphics_obj::nme_gfx_draw_datum;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > Graphics_obj::nme_gfx_draw_rect;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool) > Graphics_obj::nme_gfx_draw_path;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int) > Graphics_obj::nme_gfx_draw_tiles;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,bool,Float) > Graphics_obj::nme_gfx_draw_points;

::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > Graphics_obj::nme_gfx_draw_round_rect;

::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int, ::hx::Object *,int) > Graphics_obj::nme_gfx_draw_triangles;


::hx::ObjectPtr< Graphics_obj > Graphics_obj::__new( ::Dynamic inHandle) {
	::hx::ObjectPtr< Graphics_obj > __this = new Graphics_obj();
	__this->__construct(inHandle);
	return __this;
}

::hx::ObjectPtr< Graphics_obj > Graphics_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic inHandle) {
	Graphics_obj *__this = (Graphics_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Graphics_obj), true, "nme.display.Graphics"));
	*(void **)__this = Graphics_obj::_hx_vtable;
	__this->__construct(inHandle);
	return __this;
}

Graphics_obj::Graphics_obj()
{
}

void Graphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics);
	HX_MARK_MEMBER_NAME(nmeHandle,"nmeHandle");
	HX_MARK_END_CLASS();
}

void Graphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(nmeHandle,"nmeHandle");
}

::hx::Val Graphics_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"arcTo") ) { return ::hx::Val( arcTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"cubicTo") ) { return ::hx::Val( cubicTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"endFill") ) { return ::hx::Val( endFill_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return ::hx::Val( drawRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawPath") ) { return ::hx::Val( drawPath_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nmeHandle") ) { return ::hx::Val( nmeHandle ); }
		if (HX_FIELD_EQ(inName,"beginFill") ) { return ::hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawTiles") ) { return ::hx::Val( drawTiles_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return ::hx::Val( lineStyle_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawCircle") ) { return ::hx::Val( drawCircle_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawPoints") ) { return ::hx::Val( drawPoints_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"drawEllipse") ) { return ::hx::Val( drawEllipse_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { return ::hx::Val( drawRoundRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawTriangles") ) { return ::hx::Val( drawTriangles_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"beginBitmapFill") ) { return ::hx::Val( beginBitmapFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineBitmapStyle") ) { return ::hx::Val( lineBitmapStyle_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"drawGraphicsData") ) { return ::hx::Val( drawGraphicsData_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return ::hx::Val( beginGradientFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawGraphicsDatum") ) { return ::hx::Val( drawGraphicsDatum_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineGradientStyle") ) { return ::hx::Val( lineGradientStyle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Graphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"RGBA") ) { outValue = RGBA_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"nme_gfx_clear") ) { outValue = ( nme_gfx_clear ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"nme_gfx_arc_to") ) { outValue = ( nme_gfx_arc_to ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"nme_gfx_move_to") ) { outValue = ( nme_gfx_move_to ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_line_to") ) { outValue = ( nme_gfx_line_to ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"nme_gfx_end_fill") ) { outValue = ( nme_gfx_end_fill ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_curve_to") ) { outValue = ( nme_gfx_curve_to ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_cubic_to") ) { outValue = ( nme_gfx_cubic_to ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_data") ) { outValue = ( nme_gfx_draw_data ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_rect") ) { outValue = ( nme_gfx_draw_rect ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_path") ) { outValue = ( nme_gfx_draw_path ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_fill") ) { outValue = ( nme_gfx_begin_fill ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_line_style") ) { outValue = ( nme_gfx_line_style ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_datum") ) { outValue = ( nme_gfx_draw_datum ); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_tiles") ) { outValue = ( nme_gfx_draw_tiles ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_points") ) { outValue = ( nme_gfx_draw_points ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_ellipse") ) { outValue = ( nme_gfx_draw_ellipse ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_triangles") ) { outValue = ( nme_gfx_draw_triangles ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_round_rect") ) { outValue = ( nme_gfx_draw_round_rect ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"nme_gfx_line_bitmap_fill") ) { outValue = ( nme_gfx_line_bitmap_fill ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_bitmap_fill") ) { outValue = ( nme_gfx_begin_bitmap_fill ); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_set_gradient_fill") ) { outValue = ( nme_gfx_begin_set_gradient_fill ); return true; }
	}
	return false;
}

::hx::Val Graphics_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"nmeHandle") ) { nmeHandle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Graphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"nme_gfx_clear") ) { nme_gfx_clear=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *) > >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"nme_gfx_arc_to") ) { nme_gfx_arc_to=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"nme_gfx_move_to") ) { nme_gfx_move_to=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_line_to") ) { nme_gfx_line_to=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float) > >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"nme_gfx_end_fill") ) { nme_gfx_end_fill=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_curve_to") ) { nme_gfx_curve_to=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_cubic_to") ) { nme_gfx_cubic_to=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_data") ) { nme_gfx_draw_data=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_rect") ) { nme_gfx_draw_rect=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_path") ) { nme_gfx_draw_path=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool) > >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_fill") ) { nme_gfx_begin_fill=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,int,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_line_style") ) { nme_gfx_line_style=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *,int,Float,bool,int,int,int,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_datum") ) { nme_gfx_draw_datum=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_tiles") ) { nme_gfx_draw_tiles=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int) > >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_points") ) { nme_gfx_draw_points=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,bool,Float) > >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_ellipse") ) { nme_gfx_draw_ellipse=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_triangles") ) { nme_gfx_draw_triangles=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int, ::hx::Object *,int) > >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"nme_gfx_draw_round_rect") ) { nme_gfx_draw_round_rect=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"nme_gfx_line_bitmap_fill") ) { nme_gfx_line_bitmap_fill=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_bitmap_fill") ) { nme_gfx_begin_bitmap_fill=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"nme_gfx_begin_set_gradient_fill") ) { nme_gfx_begin_set_gradient_fill=ioValue.Cast< ::cpp::Function< void  ( ::hx::Object *,int, ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int,Float,bool) > >(); return true; }
	}
	return false;
}

void Graphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("nmeHandle",8e,87,bf,52));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Graphics_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Graphics_obj,nmeHandle),HX_("nmeHandle",8e,87,bf,52)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo Graphics_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &Graphics_obj::TILE_SCALE,HX_("TILE_SCALE",59,77,2d,62)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_ROTATION,HX_("TILE_ROTATION",af,5b,7b,62)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_RGB,HX_("TILE_RGB",1c,7e,fb,fc)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_ALPHA,HX_("TILE_ALPHA",2d,50,f5,0a)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_TRANS_2x2,HX_("TILE_TRANS_2x2",e4,26,89,b2)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_RECT,HX_("TILE_RECT",15,57,11,5f)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_ORIGIN,HX_("TILE_ORIGIN",17,26,76,94)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_NO_ID,HX_("TILE_NO_ID",48,e1,31,89)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_MOUSE_ENABLE,HX_("TILE_MOUSE_ENABLE",ae,33,e6,a6)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_FIXED_SIZE,HX_("TILE_FIXED_SIZE",7d,cf,82,5a)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_SMOOTH,HX_("TILE_SMOOTH",5f,14,e0,50)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_BLEND_NORMAL,HX_("TILE_BLEND_NORMAL",a6,02,62,2c)},
	{::hx::fsInt,(void *) &Graphics_obj::TILE_BLEND_ADD,HX_("TILE_BLEND_ADD",22,74,bf,89)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *) > */ ,(void *) &Graphics_obj::nme_gfx_clear,HX_("nme_gfx_clear",8e,81,27,96)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,int,Float) > */ ,(void *) &Graphics_obj::nme_gfx_begin_fill,HX_("nme_gfx_begin_fill",f8,d7,3d,24)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > */ ,(void *) &Graphics_obj::nme_gfx_begin_bitmap_fill,HX_("nme_gfx_begin_bitmap_fill",3e,f7,c4,a1)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool,bool) > */ ,(void *) &Graphics_obj::nme_gfx_line_bitmap_fill,HX_("nme_gfx_line_bitmap_fill",a7,f9,3d,bf)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,int, ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int,Float,bool) > */ ,(void *) &Graphics_obj::nme_gfx_begin_set_gradient_fill,HX_("nme_gfx_begin_set_gradient_fill",40,ff,a6,46)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *) > */ ,(void *) &Graphics_obj::nme_gfx_end_fill,HX_("nme_gfx_end_fill",46,33,64,4f)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *,int,Float,bool,int,int,int,Float) > */ ,(void *) &Graphics_obj::nme_gfx_line_style,HX_("nme_gfx_line_style",c5,bf,ed,6a)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_move_to,HX_("nme_gfx_move_to",6a,eb,84,af)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_line_to,HX_("nme_gfx_line_to",67,a6,96,84)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_curve_to,HX_("nme_gfx_curve_to",ea,2c,9b,d6)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_cubic_to,HX_("nme_gfx_cubic_to",2f,6f,5d,f3)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_arc_to,HX_("nme_gfx_arc_to",67,ad,c6,72)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_draw_ellipse,HX_("nme_gfx_draw_ellipse",82,cc,88,e5)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > */ ,(void *) &Graphics_obj::nme_gfx_draw_data,HX_("nme_gfx_draw_data",06,dc,cc,4a)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *) > */ ,(void *) &Graphics_obj::nme_gfx_draw_datum,HX_("nme_gfx_draw_datum",13,bb,73,28)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_draw_rect,HX_("nme_gfx_draw_rect",00,d3,10,54)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,bool) > */ ,(void *) &Graphics_obj::nme_gfx_draw_path,HX_("nme_gfx_draw_path",81,6b,bb,52)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,int) > */ ,(void *) &Graphics_obj::nme_gfx_draw_tiles,HX_("nme_gfx_draw_tiles",29,98,20,64)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *,int,bool,Float) > */ ,(void *) &Graphics_obj::nme_gfx_draw_points,HX_("nme_gfx_draw_points",ff,c6,69,11)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *,Float,Float,Float,Float,Float,Float) > */ ,(void *) &Graphics_obj::nme_gfx_draw_round_rect,HX_("nme_gfx_draw_round_rect",d1,e8,d2,34)},
	{::hx::fsObject /* ::cpp::Function< void  ( ::hx::Object *, ::hx::Object *, ::hx::Object *, ::hx::Object *,int, ::hx::Object *,int) > */ ,(void *) &Graphics_obj::nme_gfx_draw_triangles,HX_("nme_gfx_draw_triangles",4f,ed,b8,c7)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String Graphics_obj_sMemberFields[] = {
	HX_("nmeHandle",8e,87,bf,52),
	HX_("arcTo",6d,00,84,25),
	HX_("beginBitmapFill",9b,c9,07,6a),
	HX_("beginFill",4c,ad,95,8c),
	HX_("beginGradientFill",5c,3c,03,2e),
	HX_("clear",8d,71,5b,48),
	HX_("curveTo",0a,60,88,ce),
	HX_("cubicTo",65,cd,85,8f),
	HX_("drawCircle",34,ed,d0,97),
	HX_("drawEllipse",3a,85,ce,54),
	HX_("drawGraphicsData",b9,aa,6e,60),
	HX_("drawGraphicsDatum",00,c9,66,00),
	HX_("drawPoints",47,8d,f1,38),
	HX_("drawRect",48,f7,10,60),
	HX_("drawRoundRect",ee,c3,aa,e2),
	HX_("drawPath",c9,8f,bb,5e),
	HX_("drawTiles",e1,32,40,d8),
	HX_("drawTriangles",07,44,68,de),
	HX_("endFill",fe,87,e0,25),
	HX_("lineBitmapStyle",2e,3f,21,45),
	HX_("lineGradientStyle",8d,24,f2,c1),
	HX_("lineStyle",9d,a8,18,cb),
	HX_("lineTo",8f,46,a0,ec),
	HX_("moveTo",ec,d2,ac,cc),
	::String(null()) };

static void Graphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_SCALE,"TILE_SCALE");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_ROTATION,"TILE_ROTATION");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_RGB,"TILE_RGB");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_ALPHA,"TILE_ALPHA");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_TRANS_2x2,"TILE_TRANS_2x2");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_RECT,"TILE_RECT");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_ORIGIN,"TILE_ORIGIN");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_NO_ID,"TILE_NO_ID");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_MOUSE_ENABLE,"TILE_MOUSE_ENABLE");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_FIXED_SIZE,"TILE_FIXED_SIZE");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_SMOOTH,"TILE_SMOOTH");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_BLEND_NORMAL,"TILE_BLEND_NORMAL");
	HX_MARK_MEMBER_NAME(Graphics_obj::TILE_BLEND_ADD,"TILE_BLEND_ADD");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_clear,"nme_gfx_clear");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_begin_fill,"nme_gfx_begin_fill");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_begin_bitmap_fill,"nme_gfx_begin_bitmap_fill");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_line_bitmap_fill,"nme_gfx_line_bitmap_fill");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_begin_set_gradient_fill,"nme_gfx_begin_set_gradient_fill");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_end_fill,"nme_gfx_end_fill");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_line_style,"nme_gfx_line_style");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_move_to,"nme_gfx_move_to");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_line_to,"nme_gfx_line_to");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_curve_to,"nme_gfx_curve_to");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_cubic_to,"nme_gfx_cubic_to");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_arc_to,"nme_gfx_arc_to");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_ellipse,"nme_gfx_draw_ellipse");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_data,"nme_gfx_draw_data");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_datum,"nme_gfx_draw_datum");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_rect,"nme_gfx_draw_rect");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_path,"nme_gfx_draw_path");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_tiles,"nme_gfx_draw_tiles");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_points,"nme_gfx_draw_points");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_round_rect,"nme_gfx_draw_round_rect");
	HX_MARK_MEMBER_NAME(Graphics_obj::nme_gfx_draw_triangles,"nme_gfx_draw_triangles");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_SCALE,"TILE_SCALE");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_ROTATION,"TILE_ROTATION");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_RGB,"TILE_RGB");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_ALPHA,"TILE_ALPHA");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_TRANS_2x2,"TILE_TRANS_2x2");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_RECT,"TILE_RECT");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_ORIGIN,"TILE_ORIGIN");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_NO_ID,"TILE_NO_ID");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_MOUSE_ENABLE,"TILE_MOUSE_ENABLE");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_FIXED_SIZE,"TILE_FIXED_SIZE");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_SMOOTH,"TILE_SMOOTH");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_BLEND_NORMAL,"TILE_BLEND_NORMAL");
	HX_VISIT_MEMBER_NAME(Graphics_obj::TILE_BLEND_ADD,"TILE_BLEND_ADD");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_clear,"nme_gfx_clear");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_begin_fill,"nme_gfx_begin_fill");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_begin_bitmap_fill,"nme_gfx_begin_bitmap_fill");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_line_bitmap_fill,"nme_gfx_line_bitmap_fill");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_begin_set_gradient_fill,"nme_gfx_begin_set_gradient_fill");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_end_fill,"nme_gfx_end_fill");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_line_style,"nme_gfx_line_style");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_move_to,"nme_gfx_move_to");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_line_to,"nme_gfx_line_to");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_curve_to,"nme_gfx_curve_to");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_cubic_to,"nme_gfx_cubic_to");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_arc_to,"nme_gfx_arc_to");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_ellipse,"nme_gfx_draw_ellipse");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_data,"nme_gfx_draw_data");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_datum,"nme_gfx_draw_datum");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_rect,"nme_gfx_draw_rect");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_path,"nme_gfx_draw_path");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_tiles,"nme_gfx_draw_tiles");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_points,"nme_gfx_draw_points");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_round_rect,"nme_gfx_draw_round_rect");
	HX_VISIT_MEMBER_NAME(Graphics_obj::nme_gfx_draw_triangles,"nme_gfx_draw_triangles");
};

#endif

::hx::Class Graphics_obj::__mClass;

static ::String Graphics_obj_sStaticFields[] = {
	HX_("TILE_SCALE",59,77,2d,62),
	HX_("TILE_ROTATION",af,5b,7b,62),
	HX_("TILE_RGB",1c,7e,fb,fc),
	HX_("TILE_ALPHA",2d,50,f5,0a),
	HX_("TILE_TRANS_2x2",e4,26,89,b2),
	HX_("TILE_RECT",15,57,11,5f),
	HX_("TILE_ORIGIN",17,26,76,94),
	HX_("TILE_NO_ID",48,e1,31,89),
	HX_("TILE_MOUSE_ENABLE",ae,33,e6,a6),
	HX_("TILE_FIXED_SIZE",7d,cf,82,5a),
	HX_("TILE_SMOOTH",5f,14,e0,50),
	HX_("TILE_BLEND_NORMAL",a6,02,62,2c),
	HX_("TILE_BLEND_ADD",22,74,bf,89),
	HX_("RGBA",b4,98,69,36),
	HX_("nme_gfx_clear",8e,81,27,96),
	HX_("nme_gfx_begin_fill",f8,d7,3d,24),
	HX_("nme_gfx_begin_bitmap_fill",3e,f7,c4,a1),
	HX_("nme_gfx_line_bitmap_fill",a7,f9,3d,bf),
	HX_("nme_gfx_begin_set_gradient_fill",40,ff,a6,46),
	HX_("nme_gfx_end_fill",46,33,64,4f),
	HX_("nme_gfx_line_style",c5,bf,ed,6a),
	HX_("nme_gfx_move_to",6a,eb,84,af),
	HX_("nme_gfx_line_to",67,a6,96,84),
	HX_("nme_gfx_curve_to",ea,2c,9b,d6),
	HX_("nme_gfx_cubic_to",2f,6f,5d,f3),
	HX_("nme_gfx_arc_to",67,ad,c6,72),
	HX_("nme_gfx_draw_ellipse",82,cc,88,e5),
	HX_("nme_gfx_draw_data",06,dc,cc,4a),
	HX_("nme_gfx_draw_datum",13,bb,73,28),
	HX_("nme_gfx_draw_rect",00,d3,10,54),
	HX_("nme_gfx_draw_path",81,6b,bb,52),
	HX_("nme_gfx_draw_tiles",29,98,20,64),
	HX_("nme_gfx_draw_points",ff,c6,69,11),
	HX_("nme_gfx_draw_round_rect",d1,e8,d2,34),
	HX_("nme_gfx_draw_triangles",4f,ed,b8,c7),
	::String(null())
};

void Graphics_obj::__register()
{
	Graphics_obj _hx_dummy;
	Graphics_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.display.Graphics",bf,66,db,18);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Graphics_obj::__GetStatic;
	__mClass->mSetStaticField = &Graphics_obj::__SetStatic;
	__mClass->mMarkFunc = Graphics_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Graphics_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Graphics_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Graphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Graphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_11_boot)
HXDLIN(  11)		TILE_SCALE = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_12_boot)
HXDLIN(  12)		TILE_ROTATION = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_13_boot)
HXDLIN(  13)		TILE_RGB = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_14_boot)
HXDLIN(  14)		TILE_ALPHA = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_15_boot)
HXDLIN(  15)		TILE_TRANS_2x2 = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_16_boot)
HXDLIN(  16)		TILE_RECT = 32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_17_boot)
HXDLIN(  17)		TILE_ORIGIN = 64;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_18_boot)
HXDLIN(  18)		TILE_NO_ID = 128;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_19_boot)
HXDLIN(  19)		TILE_MOUSE_ENABLE = 256;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_20_boot)
HXDLIN(  20)		TILE_FIXED_SIZE = 512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_21_boot)
HXDLIN(  21)		TILE_SMOOTH = 4096;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_22_boot)
HXDLIN(  22)		TILE_BLEND_NORMAL = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_776b1985b1f5c6a0_23_boot)
HXDLIN(  23)		TILE_BLEND_ADD = 65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_clear = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_clear",8e,81,27,96),HX_("ov",27,61,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_begin_fill = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_begin_fill",f8,d7,3d,24),HX_("oidv",2c,b3,ae,49),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_begin_bitmap_fill = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_begin_bitmap_fill",3e,f7,c4,a1),HX_("ooobbv",c7,d2,c0,94),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_line_bitmap_fill = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_line_bitmap_fill",a7,f9,3d,bf),HX_("ooobbv",c7,d2,c0,94),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_begin_set_gradient_fill = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_begin_set_gradient_fill",40,ff,a6,46),HX_("oiooooiidbv",be,c0,b9,26),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_end_fill = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_end_fill",46,33,64,4f),HX_("ov",27,61,00,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_line_style = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_line_style",c5,bf,ed,6a),HX_("ooidbiiidv",f4,63,cd,74),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_move_to = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_move_to",6a,eb,84,af),HX_("oddv",e7,e7,aa,49),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_line_to = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_line_to",67,a6,96,84),HX_("oddv",e7,e7,aa,49),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_curve_to = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_curve_to",ea,2c,9b,d6),HX_("oddddv",a7,9e,14,38),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_cubic_to = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_cubic_to",2f,6f,5d,f3),HX_("oddddddv",67,85,69,dd),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_arc_to = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_arc_to",67,ad,c6,72),HX_("oddddv",a7,9e,14,38),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_ellipse = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_ellipse",82,cc,88,e5),HX_("oddddv",a7,9e,14,38),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_data = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_data",06,dc,cc,4a),HX_("oov",56,9b,54,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_datum = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_datum",13,bb,73,28),HX_("oov",56,9b,54,00),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_rect = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_rect",00,d3,10,54),HX_("oddddv",a7,9e,14,38),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_path = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_path",81,6b,bb,52),HX_("ooobv",e3,a2,2d,33),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_tiles = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_tiles",29,98,20,64),HX_("oooiiv",a7,28,c6,94),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_points = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_points",ff,c6,69,11),HX_("oooibdv",7a,0a,98,98),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_round_rect = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_round_rect",d1,e8,d2,34),HX_("oddddddv",67,85,69,dd),false);
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed40282147077d81_9_boot)
HXDLIN(   9)		nme_gfx_draw_triangles = ::cpp::Prime_obj::_loadPrime(HX_("nme",46,d7,53,00),HX_("nme_gfx_draw_triangles",4f,ed,b8,c7),HX_("ooooioiv",93,67,81,65),false);
            	}
}

} // end namespace nme
} // end namespace display
