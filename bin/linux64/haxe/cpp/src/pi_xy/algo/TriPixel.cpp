// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_ImageStruct
#include <pi_xy/ImageStruct.h>
#endif
#ifndef INCLUDED_pi_xy_algo_HitTri
#include <pi_xy/algo/HitTri.h>
#endif
#ifndef INCLUDED_pi_xy_algo_IhitObj
#include <pi_xy/algo/IhitObj.h>
#endif
#ifndef INCLUDED_pi_xy_algo_TriPixel
#include <pi_xy/algo/TriPixel.h>
#endif
#ifndef INCLUDED_pi_xy_algo_TriPoints_
#include <pi_xy/algo/TriPoints_.h>
#endif
#ifndef INCLUDED_pi_xy_algo__TriPixel_TriPixel_Fields_
#include <pi_xy/algo/_TriPixel/TriPixel_Fields_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5d3c49e4a829f1b0_1103_new,"pi_xy.algo.TriPixel","new",0x2694d601,"pi_xy.algo.TriPixel.new","pi_xy/algo/TriPixel.hx",1103,0x19d2e42f)
namespace pi_xy{
namespace algo{

void TriPixel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_5d3c49e4a829f1b0_1103_new)
HXLINE(1132)		this->_fillGradTriangle = ::pi_xy::algo::_TriPixel::TriPixel_Fields__obj::fillGradTriangle_dyn();
HXLINE(1123)		this->_tileTriUnsafe = ::pi_xy::algo::_TriPixel::TriPixel_Fields__obj::tileTriUnsafe_dyn();
HXLINE(1113)		this->_fillTriUnsafe = ::pi_xy::algo::_TriPixel::TriPixel_Fields__obj::fillTriUnsafe_dyn();
            	}

Dynamic TriPixel_obj::__CreateEmpty() { return new TriPixel_obj; }

void *TriPixel_obj::_hx_vtable = 0;

Dynamic TriPixel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TriPixel_obj > _hx_result = new TriPixel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TriPixel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x00ad7a95;
}


::hx::ObjectPtr< TriPixel_obj > TriPixel_obj::__new() {
	::hx::ObjectPtr< TriPixel_obj > __this = new TriPixel_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TriPixel_obj > TriPixel_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TriPixel_obj *__this = (TriPixel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TriPixel_obj), true, "pi_xy.algo.TriPixel"));
	*(void **)__this = TriPixel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TriPixel_obj::TriPixel_obj()
{
}

void TriPixel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TriPixel);
	HX_MARK_MEMBER_NAME(_fillTriUnsafe,"_fillTriUnsafe");
	HX_MARK_MEMBER_NAME(_tileTriUnsafe,"_tileTriUnsafe");
	HX_MARK_MEMBER_NAME(_fillGradTriangle,"_fillGradTriangle");
	HX_MARK_END_CLASS();
}

void TriPixel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_fillTriUnsafe,"_fillTriUnsafe");
	HX_VISIT_MEMBER_NAME(_tileTriUnsafe,"_tileTriUnsafe");
	HX_VISIT_MEMBER_NAME(_fillGradTriangle,"_fillGradTriangle");
}

::hx::Val TriPixel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"_fillTriUnsafe") ) { return ::hx::Val( _fillTriUnsafe ); }
		if (HX_FIELD_EQ(inName,"_tileTriUnsafe") ) { return ::hx::Val( _tileTriUnsafe ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_fillGradTriangle") ) { return ::hx::Val( _fillGradTriangle ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TriPixel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"_fillTriUnsafe") ) { _fillTriUnsafe=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_tileTriUnsafe") ) { _tileTriUnsafe=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_fillGradTriangle") ) { _fillGradTriangle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TriPixel_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(TriPixel_obj,_fillTriUnsafe),HX_("_fillTriUnsafe",ef,ac,79,da)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(TriPixel_obj,_tileTriUnsafe),HX_("_tileTriUnsafe",e4,42,f7,68)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(TriPixel_obj,_fillGradTriangle),HX_("_fillGradTriangle",38,0a,53,e8)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TriPixel_obj_sStaticStorageInfo = 0;
#endif

static ::String TriPixel_obj_sMemberFields[] = {
	HX_("_fillTriUnsafe",ef,ac,79,da),
	HX_("_tileTriUnsafe",e4,42,f7,68),
	HX_("_fillGradTriangle",38,0a,53,e8),
	::String(null()) };

::hx::Class TriPixel_obj::__mClass;

void TriPixel_obj::__register()
{
	TriPixel_obj _hx_dummy;
	TriPixel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.algo.TriPixel",8f,c1,17,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TriPixel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TriPixel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TriPixel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TriPixel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace algo
