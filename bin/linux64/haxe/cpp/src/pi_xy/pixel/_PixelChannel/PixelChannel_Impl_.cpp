// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_pi_xy_pixel__PixelChannel_PixelChannel_Impl_
#include <pi_xy/pixel/_PixelChannel/PixelChannel_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5a215e05e731a26c_9__new,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_","_new",0xbd167371,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_._new","pi_xy/pixel/PixelChannel.hx",9,0xf77ea690)
HX_LOCAL_STACK_FRAME(_hx_pos_5a215e05e731a26c_14_toHexInt,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_","toHexInt",0x59c5cabf,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_.toHexInt","pi_xy/pixel/PixelChannel.hx",14,0xf77ea690)
HX_LOCAL_STACK_FRAME(_hx_pos_5a215e05e731a26c_17_colIntToFloat,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_","colIntToFloat",0xc159ed42,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_.colIntToFloat","pi_xy/pixel/PixelChannel.hx",17,0xf77ea690)
HX_LOCAL_STACK_FRAME(_hx_pos_5a215e05e731a26c_20_stringHash,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_","stringHash",0x432e0b4f,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_.stringHash","pi_xy/pixel/PixelChannel.hx",20,0xf77ea690)
HX_LOCAL_STACK_FRAME(_hx_pos_5a215e05e731a26c_22_boundChannel,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_","boundChannel",0x23f00a35,"pi_xy.pixel._PixelChannel.PixelChannel_Impl_.boundChannel","pi_xy/pixel/PixelChannel.hx",22,0xf77ea690)
namespace pi_xy{
namespace pixel{
namespace _PixelChannel{

void PixelChannel_Impl__obj::__construct() { }

Dynamic PixelChannel_Impl__obj::__CreateEmpty() { return new PixelChannel_Impl__obj; }

void *PixelChannel_Impl__obj::_hx_vtable = 0;

Dynamic PixelChannel_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PixelChannel_Impl__obj > _hx_result = new PixelChannel_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PixelChannel_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6b93b916;
}

int PixelChannel_Impl__obj::_new(int v){
            	HX_STACKFRAME(&_hx_pos_5a215e05e731a26c_9__new)
HXDLIN(   9)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelChannel_Impl__obj,_new,return )

int PixelChannel_Impl__obj::toHexInt(Float c){
            	HX_STACKFRAME(&_hx_pos_5a215e05e731a26c_14_toHexInt)
HXDLIN(  14)		return ::Math_obj::round((c * ( (Float)(255) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelChannel_Impl__obj,toHexInt,return )

Float PixelChannel_Impl__obj::colIntToFloat(int this1){
            	HX_STACKFRAME(&_hx_pos_5a215e05e731a26c_17_colIntToFloat)
HXDLIN(  17)		if ((this1 == 0)) {
HXDLIN(  17)			return ((Float)0.);
            		}
            		else {
HXDLIN(  17)			return (( (Float)(this1) ) / ( (Float)(255) ));
            		}
HXDLIN(  17)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelChannel_Impl__obj,colIntToFloat,return )

::String PixelChannel_Impl__obj::stringHash(int this1){
            	HX_STACKFRAME(&_hx_pos_5a215e05e731a26c_20_stringHash)
HXDLIN(  20)		return (HX_("#",23,00,00,00) + ::StringTools_obj::hex(this1,2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelChannel_Impl__obj,stringHash,return )

int PixelChannel_Impl__obj::boundChannel(Float f){
            	HX_STACKFRAME(&_hx_pos_5a215e05e731a26c_22_boundChannel)
HXLINE(  23)		int i = ::Std_obj::_hx_int(f);
HXLINE(  24)		if ((i > 255)) {
HXLINE(  24)			i = 255;
            		}
HXLINE(  25)		if ((i < 0)) {
HXLINE(  25)			i = 0;
            		}
HXLINE(  26)		return i;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PixelChannel_Impl__obj,boundChannel,return )


PixelChannel_Impl__obj::PixelChannel_Impl__obj()
{
}

bool PixelChannel_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toHexInt") ) { outValue = toHexInt_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"stringHash") ) { outValue = stringHash_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"boundChannel") ) { outValue = boundChannel_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"colIntToFloat") ) { outValue = colIntToFloat_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PixelChannel_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *PixelChannel_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class PixelChannel_Impl__obj::__mClass;

static ::String PixelChannel_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("toHexInt",af,24,5e,33),
	HX_("colIntToFloat",52,8d,85,d9),
	HX_("stringHash",3f,c1,04,f7),
	HX_("boundChannel",25,1c,54,83),
	::String(null())
};

void PixelChannel_Impl__obj::__register()
{
	PixelChannel_Impl__obj _hx_dummy;
	PixelChannel_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.pixel._PixelChannel.PixelChannel_Impl_",5e,bc,39,1d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PixelChannel_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(PixelChannel_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PixelChannel_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PixelChannel_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PixelChannel_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace pixel
} // end namespace _PixelChannel
