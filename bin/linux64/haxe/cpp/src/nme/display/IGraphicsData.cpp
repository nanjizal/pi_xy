// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_IGraphicsData
#include <nme/display/IGraphicsData.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e149d1eb7d8152c9_11_new,"nme.display.IGraphicsData","new",0xa0c37e1c,"nme.display.IGraphicsData.new","nme/display/IGraphicsData.hx",11,0xd99dc5d6)
namespace nme{
namespace display{

void IGraphicsData_obj::__construct( ::Dynamic inHandle){
            	HX_STACKFRAME(&_hx_pos_e149d1eb7d8152c9_11_new)
HXDLIN(  11)		this->nmeHandle = inHandle;
            	}

Dynamic IGraphicsData_obj::__CreateEmpty() { return new IGraphicsData_obj; }

void *IGraphicsData_obj::_hx_vtable = 0;

Dynamic IGraphicsData_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IGraphicsData_obj > _hx_result = new IGraphicsData_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IGraphicsData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5d661902;
}


IGraphicsData_obj::IGraphicsData_obj()
{
}

void IGraphicsData_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IGraphicsData);
	HX_MARK_MEMBER_NAME(nmeHandle,"nmeHandle");
	HX_MARK_END_CLASS();
}

void IGraphicsData_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(nmeHandle,"nmeHandle");
}

::hx::Val IGraphicsData_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"nmeHandle") ) { return ::hx::Val( nmeHandle ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val IGraphicsData_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"nmeHandle") ) { nmeHandle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IGraphicsData_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("nmeHandle",8e,87,bf,52));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo IGraphicsData_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(IGraphicsData_obj,nmeHandle),HX_("nmeHandle",8e,87,bf,52)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *IGraphicsData_obj_sStaticStorageInfo = 0;
#endif

static ::String IGraphicsData_obj_sMemberFields[] = {
	HX_("nmeHandle",8e,87,bf,52),
	::String(null()) };

::hx::Class IGraphicsData_obj::__mClass;

void IGraphicsData_obj::__register()
{
	IGraphicsData_obj _hx_dummy;
	IGraphicsData_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.display.IGraphicsData",2a,80,73,d3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(IGraphicsData_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< IGraphicsData_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IGraphicsData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IGraphicsData_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace display
