// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_Assets
#include <nme/Assets.h>
#endif
#ifndef INCLUDED_nme_Cache
#include <nme/Cache.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_293b64362df46341_35_new,"nme.Cache","new",0x2dc3d8ec,"nme.Cache.new","nme/Assets.hx",35,0x846abab2)
HX_LOCAL_STACK_FRAME(_hx_pos_293b64362df46341_36_removeBitmapData,"nme.Cache","removeBitmapData",0xfb5e6311,"nme.Cache.removeBitmapData","nme/Assets.hx",36,0x846abab2)
namespace nme{

void Cache_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_293b64362df46341_35_new)
            	}

Dynamic Cache_obj::__CreateEmpty() { return new Cache_obj; }

void *Cache_obj::_hx_vtable = 0;

Dynamic Cache_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Cache_obj > _hx_result = new Cache_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Cache_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x08a74c64;
}

void Cache_obj::removeBitmapData(::String inId){
            	HX_STACKFRAME(&_hx_pos_293b64362df46341_36_removeBitmapData)
HXDLIN(  36)		::nme::Assets_obj::removeBitmapData(inId);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cache_obj,removeBitmapData,(void))


::hx::ObjectPtr< Cache_obj > Cache_obj::__new() {
	::hx::ObjectPtr< Cache_obj > __this = new Cache_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Cache_obj > Cache_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Cache_obj *__this = (Cache_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Cache_obj), false, "nme.Cache"));
	*(void **)__this = Cache_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Cache_obj::Cache_obj()
{
}

::hx::Val Cache_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"removeBitmapData") ) { return ::hx::Val( removeBitmapData_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Cache_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Cache_obj_sStaticStorageInfo = 0;
#endif

static ::String Cache_obj_sMemberFields[] = {
	HX_("removeBitmapData",1d,d3,69,ed),
	::String(null()) };

::hx::Class Cache_obj::__mClass;

void Cache_obj::__register()
{
	Cache_obj _hx_dummy;
	Cache_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.Cache",fa,32,da,9e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Cache_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Cache_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cache_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cache_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
