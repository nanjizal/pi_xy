// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_Version
#include <nme/Version.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0c6cee88429c036f_3_boot,"nme.Version","boot",0xe4c30390,"nme.Version.boot","nme/Version.hx",3,0x1975122f)
namespace nme{

void Version_obj::__construct() { }

Dynamic Version_obj::__CreateEmpty() { return new Version_obj; }

void *Version_obj::_hx_vtable = 0;

Dynamic Version_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Version_obj > _hx_result = new Version_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Version_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x21e47e56;
}

::String Version_obj::name;


Version_obj::Version_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Version_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Version_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Version_obj::name,HX_("name",4b,72,ff,48)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Version_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Version_obj::name,"name");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Version_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Version_obj::name,"name");
};

#endif

::hx::Class Version_obj::__mClass;

static ::String Version_obj_sStaticFields[] = {
	HX_("name",4b,72,ff,48),
	::String(null())
};

void Version_obj::__register()
{
	Version_obj _hx_dummy;
	Version_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.Version",d0,1d,d9,09);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Version_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Version_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Version_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Version_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Version_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Version_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Version_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0c6cee88429c036f_3_boot)
HXDLIN(   3)		name = HX_("6.3.43",12,22,8d,35);
            	}
}

} // end namespace nme
