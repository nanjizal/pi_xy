// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe__CallStack_CallStack_Impl_
#include <haxe/_CallStack/CallStack_Impl_.h>
#endif
#ifndef INCLUDED_nme_Lib
#include <nme/Lib.h>
#endif
#ifndef INCLUDED_nme_Loader
#include <nme/Loader.h>
#endif
#ifndef INCLUDED_nme_app_Application
#include <nme/app/Application.h>
#endif
#ifndef INCLUDED_nme_app_IAppEventHandler
#include <nme/app/IAppEventHandler.h>
#endif
#ifndef INCLUDED_nme_app_IPollClient
#include <nme/app/IPollClient.h>
#endif
#ifndef INCLUDED_nme_app_Window
#include <nme/app/Window.h>
#endif
#ifndef INCLUDED_nme_display_BitmapData
#include <nme/display/BitmapData.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_DisplayObjectContainer
#include <nme/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_display_ManagedStage
#include <nme/display/ManagedStage.h>
#endif
#ifndef INCLUDED_nme_display_MovieClip
#include <nme/display/MovieClip.h>
#endif
#ifndef INCLUDED_nme_display_Sprite
#include <nme/display/Sprite.h>
#endif
#ifndef INCLUDED_nme_display_Stage
#include <nme/display/Stage.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_nme_net_URLRequest
#include <nme/net/URLRequest.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_81_create,"nme.Lib","create",0xe746dd4d,"nme.Lib.create","nme/Lib.hx",81,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_67_create,"nme.Lib","create",0xe746dd4d,"nme.Lib.create","nme/Lib.hx",67,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_129_createSecondaryWindow,"nme.Lib","createSecondaryWindow",0x5d3c8fb7,"nme.Lib.createSecondaryWindow","nme/Lib.hx",129,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_113_createSecondaryWindow,"nme.Lib","createSecondaryWindow",0x5d3c8fb7,"nme.Lib.createSecondaryWindow","nme/Lib.hx",113,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_164_load,"nme.Lib","load",0xe01e2a37,"nme.Lib.load","nme/Lib.hx",164,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_171_crash,"nme.Lib","crash",0x0da73eb6,"nme.Lib.crash","nme/Lib.hx",171,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_176_log,"nme.Lib","log",0x9f6d3193,"nme.Lib.log","nme/Lib.hx",176,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_182_redirectTrace,"nme.Lib","redirectTrace",0xa8cc2798,"nme.Lib.redirectTrace","nme/Lib.hx",182,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_181_redirectTrace,"nme.Lib","redirectTrace",0xa8cc2798,"nme.Lib.redirectTrace","nme/Lib.hx",181,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_191_createManagedStage,"nme.Lib","createManagedStage",0x8603b8cc,"nme.Lib.createManagedStage","nme/Lib.hx",191,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_205_getURL,"nme.Lib","getURL",0x0e5fbeca,"nme.Lib.getURL","nme/Lib.hx",205,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_211_getTimer,"nme.Lib","getTimer",0xb0cb3be0,"nme.Lib.getTimer","nme/Lib.hx",211,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_217_get_current,"nme.Lib","get_current",0x5ec3005f,"nme.Lib.get_current","nme/Lib.hx",217,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_228_get_stage,"nme.Lib","get_stage",0x2d955964,"nme.Lib.get_stage","nme/Lib.hx",228,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_237_nmeSetCurrentStage,"nme.Lib","nmeSetCurrentStage",0x36929db2,"nme.Lib.nmeSetCurrentStage","nme/Lib.hx",237,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_252_get_initWidth,"nme.Lib","get_initWidth",0x7a920a7c,"nme.Lib.get_initWidth","nme/Lib.hx",252,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_253_get_initHeight,"nme.Lib","get_initHeight",0x7b869ab1,"nme.Lib.get_initHeight","nme/Lib.hx",253,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_255_get_company,"nme.Lib","get_company",0x16487963,"nme.Lib.get_company","nme/Lib.hx",255,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_256_get_version,"nme.Lib","get_version",0x0fd14b3e,"nme.Lib.get_version","nme/Lib.hx",256,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_257_get_packageName,"nme.Lib","get_packageName",0xe6487417,"nme.Lib.get_packageName","nme/Lib.hx",257,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_258_get_file,"nme.Lib","get_file",0x0434f696,"nme.Lib.get_file","nme/Lib.hx",258,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_260_get_build,"nme.Lib","get_build",0x6474c9d4,"nme.Lib.get_build","nme/Lib.hx",260,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_261_get_ndllVersion,"nme.Lib","get_ndllVersion",0xc7a7d8a8,"nme.Lib.get_ndllVersion","nme/Lib.hx",261,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_262_get_nmeStateVersion,"nme.Lib","get_nmeStateVersion",0x1633db93,"nme.Lib.get_nmeStateVersion","nme/Lib.hx",262,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_263_get_bits,"nme.Lib","get_bits",0x01902320,"nme.Lib.get_bits","nme/Lib.hx",263,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_265_get_silentRecreate,"nme.Lib","get_silentRecreate",0x58f76f3e,"nme.Lib.get_silentRecreate","nme/Lib.hx",265,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_266_set_silentRecreate,"nme.Lib","set_silentRecreate",0x35a6a1b2,"nme.Lib.set_silentRecreate","nme/Lib.hx",266,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_29_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",29,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_30_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",30,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_33_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",33,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_34_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",34,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_35_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",35,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_36_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",36,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_37_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",37,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_38_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",38,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_39_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",39,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_40_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",40,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_41_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",41,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_42_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",42,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_43_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",43,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_44_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",44,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_241_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",241,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_242_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",242,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_243_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",243,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_245_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",245,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_246_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",246,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_247_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",247,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_248_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",248,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_249_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",249,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_270_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",270,0xbd3d8ba2)
HX_LOCAL_STACK_FRAME(_hx_pos_364bbfd6a30234d6_271_boot,"nme.Lib","boot",0xd9821443,"nme.Lib.boot","nme/Lib.hx",271,0xbd3d8ba2)
namespace nme{

void Lib_obj::__construct() { }

Dynamic Lib_obj::__CreateEmpty() { return new Lib_obj; }

void *Lib_obj::_hx_vtable = 0;

Dynamic Lib_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Lib_obj > _hx_result = new Lib_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Lib_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3f7ed4e7;
}

 ::nme::display::MovieClip Lib_obj::nmeCurrent;

 ::nme::display::Stage Lib_obj::nmeStage;

int Lib_obj::FULLSCREEN;

int Lib_obj::BORDERLESS;

int Lib_obj::RESIZABLE;

int Lib_obj::HARDWARE;

int Lib_obj::VSYNC;

int Lib_obj::HW_AA;

int Lib_obj::HW_AA_HIRES;

int Lib_obj::ALLOW_SHADERS;

int Lib_obj::REQUIRE_SHADERS;

int Lib_obj::DEPTH_BUFFER;

int Lib_obj::STENCIL_BUFFER;

int Lib_obj::SINGLE_INSTANCE;

::String Lib_obj::title;

 ::Dynamic Lib_obj::stageFactory;

void Lib_obj::create( ::Dynamic inOnLoaded,int inWidth,int inHeight,::hx::Null< Float >  __o_inFrameRate,::hx::Null< int >  __o_inColour,::hx::Null< int >  __o_inFlags,::String __o_inTitle, ::nme::display::BitmapData inIcon, ::Dynamic inDummy){
            		HX_BEGIN_LOCAL_FUNC_S4(::hx::LocalFunc,_hx_Closure_0, ::Dynamic,inOnLoaded,Float,inFrameRate, ::Dynamic,params,int,inColour) HXARGC(1)
            		void _hx_run( ::nme::app::Window inWindow){
            			HX_GC_STACKFRAME(&_hx_pos_364bbfd6a30234d6_81_create)
HXLINE(  81)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  83)				if (::hx::IsNotNull( ::nme::Lib_obj::stageFactory )) {
HXLINE(  84)					::nme::Lib_obj::nmeStage = ( ( ::nme::display::Stage)(::nme::Lib_obj::stageFactory(inWindow)) );
            				}
            				else {
HXLINE(  86)					::nme::Lib_obj::nmeStage =  ::nme::display::Stage_obj::__alloc( HX_CTX ,inWindow);
            				}
HXLINE(  87)				::nme::Lib_obj::nmeStage->set_frameRate(inFrameRate);
HXLINE(  88)				::nme::Lib_obj::nmeStage->set_opaqueBackground(inColour);
HXLINE(  90)				if (::hx::IsNotNull( ::nme::Lib_obj::nmeCurrent )) {
HXLINE(  92)					::nme::Lib_obj::nmeStage->nmeCurrent = ::nme::Lib_obj::nmeCurrent;
HXLINE(  93)					::nme::Lib_obj::nmeStage->addChild(::nme::Lib_obj::nmeCurrent);
HXLINE(  94)					::nme::Lib_obj::nmeCurrent = null();
            				}
HXLINE(  97)				inOnLoaded();
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic _g = _hx_e;
HXLINE(  99)					{
HXLINE(  99)						null();
            					}
HXDLIN(  99)					 ::Dynamic e = _g;
HXLINE( 100)					{
HXLINE( 101)						::String stack = ::haxe::_CallStack::CallStack_Impl__obj::toString(::haxe::_CallStack::CallStack_Impl__obj::exceptionStack(null()));
HXLINE( 102)						 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 102)						::String _hx_tmp1 = ((HX_("Error creating window: (",a3,fa,e3,b3) + ::Std_obj::string(params)) + HX_(")\n",c1,23,00,00));
HXDLIN( 102)						::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(e)) + stack);
HXDLIN( 102)						_hx_tmp(_hx_tmp2,::hx::SourceInfo(HX_("nme/Lib.hx",a2,8b,3d,bd),102,HX_("nme.Lib",fd,c9,39,b9),HX_("create",fc,66,0f,7c)));
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		Float inFrameRate = __o_inFrameRate.Default(((Float)60.0));
            		int inColour = __o_inColour.Default(-1);
            		int inFlags = __o_inFlags.Default(15);
            		::String inTitle = __o_inTitle;
            		if (::hx::IsNull(__o_inTitle)) inTitle = HX_("NME",26,73,3b,00);
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_67_create)
HXLINE(  68)		::nme::Lib_obj::title = inTitle;
HXLINE(  70)		 ::Dynamic params =  ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("width",06,b6,62,ca),inWidth)
            			->setFixed(1,HX_("height",e7,07,4c,02),inHeight)
            			->setFixed(2,HX_("flags",47,2b,8c,02),inFlags)
            			->setFixed(3,HX_("title",98,15,3b,10),inTitle)
            			->setFixed(4,HX_("icon",79,e7,b2,45),inIcon)
            			->setFixed(5,HX_("color",63,71,5c,4a),inColour));
HXLINE(  80)		::nme::app::Application_obj::createWindow( ::Dynamic(new _hx_Closure_0(inOnLoaded,inFrameRate,params,inColour)),params,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(Lib_obj,create,(void))

 ::nme::app::Window Lib_obj::createSecondaryWindow(int inWidth,int inHeight,::String inTitle,::hx::Null< int >  __o_inFlags,::hx::Null< int >  __o_inColour,::hx::Null< Float >  __o_inFrameRate, ::nme::display::BitmapData inIcon){
            		HX_BEGIN_LOCAL_FUNC_S5(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,err,Float,inFrameRate, ::Dynamic,params,::Array< ::Dynamic>,window,int,inColour) HXARGC(1)
            		void _hx_run( ::nme::app::Window inWindow){
            			HX_GC_STACKFRAME(&_hx_pos_364bbfd6a30234d6_129_createSecondaryWindow)
HXLINE( 129)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 131)				 ::nme::display::Stage stage;
HXLINE( 132)				if (::hx::IsNotNull( ::nme::Lib_obj::stageFactory )) {
HXLINE( 131)					stage = ( ( ::nme::display::Stage)(::nme::Lib_obj::stageFactory(inWindow)) );
            				}
            				else {
HXLINE( 131)					stage =  ::nme::display::Stage_obj::__alloc( HX_CTX ,inWindow);
            				}
HXLINE( 136)				stage->set_frameRate(inFrameRate);
HXLINE( 137)				stage->set_opaqueBackground(inColour);
HXLINE( 139)				window[0] = inWindow;
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic _g = _hx_e;
HXLINE( 141)					{
HXLINE( 141)						null();
            					}
HXDLIN( 141)					 ::Dynamic e = _g;
HXLINE( 142)					{
HXLINE( 143)						::String stack = ::haxe::_CallStack::CallStack_Impl__obj::toString(::haxe::_CallStack::CallStack_Impl__obj::exceptionStack(null()));
HXLINE( 144)						::Array< ::String > err1 = err;
HXDLIN( 144)						::String _hx_tmp = ((HX_("Error creating window: (",a3,fa,e3,b3) + ::Std_obj::string(params)) + HX_(")\n",c1,23,00,00));
HXDLIN( 144)						err1[0] = ((_hx_tmp + ::Std_obj::string(e)) + stack);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int inFlags = __o_inFlags.Default(15);
            		int inColour = __o_inColour.Default(16777215);
            		Float inFrameRate = __o_inFrameRate.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_113_createSecondaryWindow)
HXLINE( 114)		::nme::Lib_obj::title = inTitle;
HXLINE( 116)		 ::Dynamic params =  ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("width",06,b6,62,ca),inWidth)
            			->setFixed(1,HX_("height",e7,07,4c,02),inHeight)
            			->setFixed(2,HX_("flags",47,2b,8c,02),inFlags)
            			->setFixed(3,HX_("title",98,15,3b,10),inTitle)
            			->setFixed(4,HX_("icon",79,e7,b2,45),inIcon)
            			->setFixed(5,HX_("color",63,71,5c,4a),inColour));
HXLINE( 125)		::Array< ::Dynamic> window = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE( 126)		::Array< ::String > err = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE( 128)		::nme::app::Application_obj::createWindow( ::Dynamic(new _hx_Closure_0(err,inFrameRate,params,window,inColour)),params,true);
HXLINE( 149)		if (::hx::IsNotNull( err->__get(0) )) {
HXLINE( 150)			HX_STACK_DO_THROW(err->__get(0));
            		}
HXLINE( 151)		if (::hx::IsNull( window->__get(0).StaticCast<  ::nme::app::Window >() )) {
HXLINE( 152)			HX_STACK_DO_THROW(HX_("multiple windows not supported on this target",7e,ba,eb,dd));
            		}
HXLINE( 154)		return window->__get(0).StaticCast<  ::nme::app::Window >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(Lib_obj,createSecondaryWindow,return )

 ::Dynamic Lib_obj::load(::String library,::String method,::hx::Null< int >  __o_args){
            		int args = __o_args.Default(0);
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_164_load)
HXDLIN( 164)		return ::cpp::Lib_obj::load(library,method,args);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,load,return )

void Lib_obj::crash(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_171_crash)
HXDLIN( 171)		::nme::Lib_obj::nme_crash();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,crash,(void))

void Lib_obj::log(::String str){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_176_log)
HXDLIN( 176)		::nme::Lib_obj::nme_log(str);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,log,(void))

void Lib_obj::redirectTrace(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		void _hx_run( ::Dynamic v, ::Dynamic infos){
            			HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_182_redirectTrace)
HXLINE( 182)			if (::hx::IsNull( infos )) {
HXLINE( 183)				::nme::Lib_obj::log(::Std_obj::string(v));
            			}
            			else {
HXLINE( 185)				::String _hx_tmp = ( (::String)((((infos->__Field(HX_("fileName",e7,5a,43,62),::hx::paccDynamic) + HX_(":",3a,00,00,00)) + infos->__Field(HX_("lineNumber",dd,81,22,76),::hx::paccDynamic)) + HX_(": ",a6,32,00,00))) );
HXDLIN( 185)				::nme::Lib_obj::log((_hx_tmp + ::Std_obj::string(v)));
            			}
            		}
            		HX_END_LOCAL_FUNC2((void))

            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_181_redirectTrace)
HXDLIN( 181)		::haxe::Log_obj::trace =  ::Dynamic(new _hx_Closure_0());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,redirectTrace,(void))

 ::nme::display::ManagedStage Lib_obj::createManagedStage(int inWidth,int inHeight,::hx::Null< int >  __o_inFlags){
            		int inFlags = __o_inFlags.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_364bbfd6a30234d6_191_createManagedStage)
HXLINE( 192)		::nme::app::Application_obj::initWidth = inWidth;
HXLINE( 193)		::nme::app::Application_obj::initHeight = inHeight;
HXLINE( 195)		 ::nme::display::ManagedStage result =  ::nme::display::ManagedStage_obj::__alloc( HX_CTX ,inWidth,inHeight,inFlags);
HXLINE( 196)		::nme::Lib_obj::nmeStage = result;
HXLINE( 198)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Lib_obj,createManagedStage,return )

void Lib_obj::getURL( ::nme::net::URLRequest url,::String target){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_205_getURL)
HXDLIN( 205)		url->launchBrowser();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Lib_obj,getURL,(void))

int Lib_obj::getTimer(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_211_getTimer)
HXDLIN( 211)		return ::Std_obj::_hx_int((::haxe::Timer_obj::stamp() * ((Float)1000.0)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,getTimer,return )

 ::nme::display::MovieClip Lib_obj::get_current(){
            	HX_GC_STACKFRAME(&_hx_pos_364bbfd6a30234d6_217_get_current)
HXLINE( 218)		if (::hx::IsNotNull( ::nme::Lib_obj::nmeStage )) {
HXLINE( 219)			return ::nme::Lib_obj::nmeStage->get_current();
            		}
HXLINE( 221)		if (::hx::IsNull( ::nme::Lib_obj::nmeCurrent )) {
HXLINE( 222)			::nme::Lib_obj::nmeCurrent =  ::nme::display::MovieClip_obj::__alloc( HX_CTX );
            		}
HXLINE( 224)		return ::nme::Lib_obj::nmeCurrent;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_current,return )

 ::nme::display::Stage Lib_obj::get_stage(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_228_get_stage)
HXLINE( 229)		if (::hx::IsNull( ::nme::Lib_obj::nmeStage )) {
HXLINE( 230)			HX_STACK_DO_THROW(HX_("Error : stage can't be accessed until init is called",88,52,b6,4f));
            		}
HXLINE( 232)		return ::nme::Lib_obj::nmeStage;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_stage,return )

void Lib_obj::nmeSetCurrentStage( ::nme::display::Stage inStage){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_237_nmeSetCurrentStage)
HXDLIN( 237)		::nme::Lib_obj::nmeStage = inStage;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,nmeSetCurrentStage,(void))

 ::Dynamic Lib_obj::close;

 ::Dynamic Lib_obj::exit;

 ::Dynamic Lib_obj::forceClose;

 ::Dynamic Lib_obj::pause;

 ::Dynamic Lib_obj::postUICallback;

 ::Dynamic Lib_obj::resume;

 ::Dynamic Lib_obj::setPackage;

 ::Dynamic Lib_obj::setIcon;

int Lib_obj::get_initWidth(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_252_get_initWidth)
HXDLIN( 252)		return ::nme::app::Application_obj::initWidth;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_initWidth,return )

int Lib_obj::get_initHeight(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_253_get_initHeight)
HXDLIN( 253)		return ::nme::app::Application_obj::initHeight;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_initHeight,return )

::String Lib_obj::get_company(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_255_get_company)
HXDLIN( 255)		return ::nme::app::Application_obj::company;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_company,return )

::String Lib_obj::get_version(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_256_get_version)
HXDLIN( 256)		return ::nme::app::Application_obj::version;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_version,return )

::String Lib_obj::get_packageName(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_257_get_packageName)
HXDLIN( 257)		return ::nme::app::Application_obj::packageName;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_packageName,return )

::String Lib_obj::get_file(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_258_get_file)
HXDLIN( 258)		return ::nme::app::Application_obj::file;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_file,return )

::String Lib_obj::get_build(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_260_get_build)
HXDLIN( 260)		return ::nme::app::Application_obj::get_build();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_build,return )

int Lib_obj::get_ndllVersion(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_261_get_ndllVersion)
HXDLIN( 261)		return ::nme::app::Application_obj::get_ndllVersion();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_ndllVersion,return )

::String Lib_obj::get_nmeStateVersion(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_262_get_nmeStateVersion)
HXDLIN( 262)		return ::nme::app::Application_obj::get_nmeStateVersion();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_nmeStateVersion,return )

int Lib_obj::get_bits(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_263_get_bits)
HXDLIN( 263)		return ::nme::app::Application_obj::get_bits();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_bits,return )

bool Lib_obj::get_silentRecreate(){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_265_get_silentRecreate)
HXDLIN( 265)		return ::nme::app::Application_obj::silentRecreate;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Lib_obj,get_silentRecreate,return )

bool Lib_obj::set_silentRecreate(bool inVal){
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_266_set_silentRecreate)
HXDLIN( 266)		::nme::app::Application_obj::silentRecreate = inVal;
HXDLIN( 266)		return inVal;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Lib_obj,set_silentRecreate,return )

 ::Dynamic Lib_obj::nme_log;

 ::Dynamic Lib_obj::nme_crash;


Lib_obj::Lib_obj()
{
}

bool Lib_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"log") ) { outValue = log_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_file() ); return true; } }
		if (HX_FIELD_EQ(inName,"bits") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_bits() ); return true; } }
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = ( exit ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"stage") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_stage() ); return true; } }
		if (HX_FIELD_EQ(inName,"VSYNC") ) { outValue = ( VSYNC ); return true; }
		if (HX_FIELD_EQ(inName,"HW_AA") ) { outValue = ( HW_AA ); return true; }
		if (HX_FIELD_EQ(inName,"title") ) { outValue = ( title ); return true; }
		if (HX_FIELD_EQ(inName,"build") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_build() ); return true; } }
		if (HX_FIELD_EQ(inName,"crash") ) { outValue = crash_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { outValue = ( close ); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { outValue = ( pause ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getURL") ) { outValue = getURL_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"resume") ) { outValue = ( resume ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"current") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_current() ); return true; } }
		if (HX_FIELD_EQ(inName,"company") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_company() ); return true; } }
		if (HX_FIELD_EQ(inName,"version") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_version() ); return true; } }
		if (HX_FIELD_EQ(inName,"setIcon") ) { outValue = ( setIcon ); return true; }
		if (HX_FIELD_EQ(inName,"nme_log") ) { outValue = ( nme_log ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nmeStage") ) { outValue = ( nmeStage ); return true; }
		if (HX_FIELD_EQ(inName,"HARDWARE") ) { outValue = ( HARDWARE ); return true; }
		if (HX_FIELD_EQ(inName,"getTimer") ) { outValue = getTimer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_file") ) { outValue = get_file_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_bits") ) { outValue = get_bits_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"RESIZABLE") ) { outValue = ( RESIZABLE ); return true; }
		if (HX_FIELD_EQ(inName,"initWidth") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_initWidth() ); return true; } }
		if (HX_FIELD_EQ(inName,"get_stage") ) { outValue = get_stage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_build") ) { outValue = get_build_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nme_crash") ) { outValue = ( nme_crash ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"nmeCurrent") ) { outValue = ( nmeCurrent ); return true; }
		if (HX_FIELD_EQ(inName,"FULLSCREEN") ) { outValue = ( FULLSCREEN ); return true; }
		if (HX_FIELD_EQ(inName,"BORDERLESS") ) { outValue = ( BORDERLESS ); return true; }
		if (HX_FIELD_EQ(inName,"initHeight") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_initHeight() ); return true; } }
		if (HX_FIELD_EQ(inName,"forceClose") ) { outValue = ( forceClose ); return true; }
		if (HX_FIELD_EQ(inName,"setPackage") ) { outValue = ( setPackage ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"HW_AA_HIRES") ) { outValue = ( HW_AA_HIRES ); return true; }
		if (HX_FIELD_EQ(inName,"packageName") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_packageName() ); return true; } }
		if (HX_FIELD_EQ(inName,"ndllVersion") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_ndllVersion() ); return true; } }
		if (HX_FIELD_EQ(inName,"get_current") ) { outValue = get_current_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_company") ) { outValue = get_company_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_version") ) { outValue = get_version_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER") ) { outValue = ( DEPTH_BUFFER ); return true; }
		if (HX_FIELD_EQ(inName,"stageFactory") ) { outValue = ( stageFactory ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ALLOW_SHADERS") ) { outValue = ( ALLOW_SHADERS ); return true; }
		if (HX_FIELD_EQ(inName,"redirectTrace") ) { outValue = redirectTrace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_initWidth") ) { outValue = get_initWidth_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER") ) { outValue = ( STENCIL_BUFFER ); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_silentRecreate() ); return true; } }
		if (HX_FIELD_EQ(inName,"postUICallback") ) { outValue = ( postUICallback ); return true; }
		if (HX_FIELD_EQ(inName,"get_initHeight") ) { outValue = get_initHeight_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"REQUIRE_SHADERS") ) { outValue = ( REQUIRE_SHADERS ); return true; }
		if (HX_FIELD_EQ(inName,"SINGLE_INSTANCE") ) { outValue = ( SINGLE_INSTANCE ); return true; }
		if (HX_FIELD_EQ(inName,"nmeStateVersion") ) { if (inCallProp != ::hx::paccNever) { outValue = ( get_nmeStateVersion() ); return true; } }
		if (HX_FIELD_EQ(inName,"get_packageName") ) { outValue = get_packageName_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_ndllVersion") ) { outValue = get_ndllVersion_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createManagedStage") ) { outValue = createManagedStage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"nmeSetCurrentStage") ) { outValue = nmeSetCurrentStage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_silentRecreate") ) { outValue = get_silentRecreate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_silentRecreate") ) { outValue = set_silentRecreate_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"get_nmeStateVersion") ) { outValue = get_nmeStateVersion_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createSecondaryWindow") ) { outValue = createSecondaryWindow_dyn(); return true; }
	}
	return false;
}

bool Lib_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exit") ) { exit=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"VSYNC") ) { VSYNC=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"HW_AA") ) { HW_AA=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"title") ) { title=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { close=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { pause=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"resume") ) { resume=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setIcon") ) { setIcon=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_log") ) { nme_log=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nmeStage") ) { nmeStage=ioValue.Cast<  ::nme::display::Stage >(); return true; }
		if (HX_FIELD_EQ(inName,"HARDWARE") ) { HARDWARE=ioValue.Cast< int >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"RESIZABLE") ) { RESIZABLE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"nme_crash") ) { nme_crash=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"nmeCurrent") ) { nmeCurrent=ioValue.Cast<  ::nme::display::MovieClip >(); return true; }
		if (HX_FIELD_EQ(inName,"FULLSCREEN") ) { FULLSCREEN=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"BORDERLESS") ) { BORDERLESS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"forceClose") ) { forceClose=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"setPackage") ) { setPackage=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"HW_AA_HIRES") ) { HW_AA_HIRES=ioValue.Cast< int >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER") ) { DEPTH_BUFFER=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"stageFactory") ) { stageFactory=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ALLOW_SHADERS") ) { ALLOW_SHADERS=ioValue.Cast< int >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER") ) { STENCIL_BUFFER=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"silentRecreate") ) { if (inCallProp != ::hx::paccNever)  ioValue = ( set_silentRecreate(ioValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"postUICallback") ) { postUICallback=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"REQUIRE_SHADERS") ) { REQUIRE_SHADERS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"SINGLE_INSTANCE") ) { SINGLE_INSTANCE=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Lib_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Lib_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::nme::display::MovieClip */ ,(void *) &Lib_obj::nmeCurrent,HX_("nmeCurrent",93,01,e5,9a)},
	{::hx::fsObject /*  ::nme::display::Stage */ ,(void *) &Lib_obj::nmeStage,HX_("nmeStage",98,e5,94,c1)},
	{::hx::fsInt,(void *) &Lib_obj::FULLSCREEN,HX_("FULLSCREEN",3b,ae,bd,eb)},
	{::hx::fsInt,(void *) &Lib_obj::BORDERLESS,HX_("BORDERLESS",45,ba,7a,09)},
	{::hx::fsInt,(void *) &Lib_obj::RESIZABLE,HX_("RESIZABLE",4b,a7,a8,a4)},
	{::hx::fsInt,(void *) &Lib_obj::HARDWARE,HX_("HARDWARE",a8,72,59,cf)},
	{::hx::fsInt,(void *) &Lib_obj::VSYNC,HX_("VSYNC",b1,65,96,bb)},
	{::hx::fsInt,(void *) &Lib_obj::HW_AA,HX_("HW_AA",50,a3,a3,ae)},
	{::hx::fsInt,(void *) &Lib_obj::HW_AA_HIRES,HX_("HW_AA_HIRES",70,13,75,95)},
	{::hx::fsInt,(void *) &Lib_obj::ALLOW_SHADERS,HX_("ALLOW_SHADERS",78,9c,d4,9c)},
	{::hx::fsInt,(void *) &Lib_obj::REQUIRE_SHADERS,HX_("REQUIRE_SHADERS",54,b7,32,63)},
	{::hx::fsInt,(void *) &Lib_obj::DEPTH_BUFFER,HX_("DEPTH_BUFFER",1c,84,06,89)},
	{::hx::fsInt,(void *) &Lib_obj::STENCIL_BUFFER,HX_("STENCIL_BUFFER",43,1c,95,64)},
	{::hx::fsInt,(void *) &Lib_obj::SINGLE_INSTANCE,HX_("SINGLE_INSTANCE",6c,03,d6,5e)},
	{::hx::fsString,(void *) &Lib_obj::title,HX_("title",98,15,3b,10)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::stageFactory,HX_("stageFactory",ac,cd,2f,af)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::close,HX_("close",b8,17,63,48)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::exit,HX_("exit",1e,f7,1d,43)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::forceClose,HX_("forceClose",cd,01,38,df)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::pause,HX_("pause",f6,d6,57,bd)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::postUICallback,HX_("postUICallback",99,d0,5a,b0)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::resume,HX_("resume",ad,69,84,08)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::setPackage,HX_("setPackage",04,50,90,94)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::setIcon,HX_("setIcon",3b,28,37,0b)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::nme_log,HX_("nme_log",cb,8b,b5,d9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Lib_obj::nme_crash,HX_("nme_crash",ee,96,64,ae)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Lib_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Lib_obj::nmeCurrent,"nmeCurrent");
	HX_MARK_MEMBER_NAME(Lib_obj::nmeStage,"nmeStage");
	HX_MARK_MEMBER_NAME(Lib_obj::FULLSCREEN,"FULLSCREEN");
	HX_MARK_MEMBER_NAME(Lib_obj::BORDERLESS,"BORDERLESS");
	HX_MARK_MEMBER_NAME(Lib_obj::RESIZABLE,"RESIZABLE");
	HX_MARK_MEMBER_NAME(Lib_obj::HARDWARE,"HARDWARE");
	HX_MARK_MEMBER_NAME(Lib_obj::VSYNC,"VSYNC");
	HX_MARK_MEMBER_NAME(Lib_obj::HW_AA,"HW_AA");
	HX_MARK_MEMBER_NAME(Lib_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_MARK_MEMBER_NAME(Lib_obj::ALLOW_SHADERS,"ALLOW_SHADERS");
	HX_MARK_MEMBER_NAME(Lib_obj::REQUIRE_SHADERS,"REQUIRE_SHADERS");
	HX_MARK_MEMBER_NAME(Lib_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_MARK_MEMBER_NAME(Lib_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_MARK_MEMBER_NAME(Lib_obj::SINGLE_INSTANCE,"SINGLE_INSTANCE");
	HX_MARK_MEMBER_NAME(Lib_obj::title,"title");
	HX_MARK_MEMBER_NAME(Lib_obj::stageFactory,"stageFactory");
	HX_MARK_MEMBER_NAME(Lib_obj::close,"close");
	HX_MARK_MEMBER_NAME(Lib_obj::exit,"exit");
	HX_MARK_MEMBER_NAME(Lib_obj::forceClose,"forceClose");
	HX_MARK_MEMBER_NAME(Lib_obj::pause,"pause");
	HX_MARK_MEMBER_NAME(Lib_obj::postUICallback,"postUICallback");
	HX_MARK_MEMBER_NAME(Lib_obj::resume,"resume");
	HX_MARK_MEMBER_NAME(Lib_obj::setPackage,"setPackage");
	HX_MARK_MEMBER_NAME(Lib_obj::setIcon,"setIcon");
	HX_MARK_MEMBER_NAME(Lib_obj::nme_log,"nme_log");
	HX_MARK_MEMBER_NAME(Lib_obj::nme_crash,"nme_crash");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Lib_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Lib_obj::nmeCurrent,"nmeCurrent");
	HX_VISIT_MEMBER_NAME(Lib_obj::nmeStage,"nmeStage");
	HX_VISIT_MEMBER_NAME(Lib_obj::FULLSCREEN,"FULLSCREEN");
	HX_VISIT_MEMBER_NAME(Lib_obj::BORDERLESS,"BORDERLESS");
	HX_VISIT_MEMBER_NAME(Lib_obj::RESIZABLE,"RESIZABLE");
	HX_VISIT_MEMBER_NAME(Lib_obj::HARDWARE,"HARDWARE");
	HX_VISIT_MEMBER_NAME(Lib_obj::VSYNC,"VSYNC");
	HX_VISIT_MEMBER_NAME(Lib_obj::HW_AA,"HW_AA");
	HX_VISIT_MEMBER_NAME(Lib_obj::HW_AA_HIRES,"HW_AA_HIRES");
	HX_VISIT_MEMBER_NAME(Lib_obj::ALLOW_SHADERS,"ALLOW_SHADERS");
	HX_VISIT_MEMBER_NAME(Lib_obj::REQUIRE_SHADERS,"REQUIRE_SHADERS");
	HX_VISIT_MEMBER_NAME(Lib_obj::DEPTH_BUFFER,"DEPTH_BUFFER");
	HX_VISIT_MEMBER_NAME(Lib_obj::STENCIL_BUFFER,"STENCIL_BUFFER");
	HX_VISIT_MEMBER_NAME(Lib_obj::SINGLE_INSTANCE,"SINGLE_INSTANCE");
	HX_VISIT_MEMBER_NAME(Lib_obj::title,"title");
	HX_VISIT_MEMBER_NAME(Lib_obj::stageFactory,"stageFactory");
	HX_VISIT_MEMBER_NAME(Lib_obj::close,"close");
	HX_VISIT_MEMBER_NAME(Lib_obj::exit,"exit");
	HX_VISIT_MEMBER_NAME(Lib_obj::forceClose,"forceClose");
	HX_VISIT_MEMBER_NAME(Lib_obj::pause,"pause");
	HX_VISIT_MEMBER_NAME(Lib_obj::postUICallback,"postUICallback");
	HX_VISIT_MEMBER_NAME(Lib_obj::resume,"resume");
	HX_VISIT_MEMBER_NAME(Lib_obj::setPackage,"setPackage");
	HX_VISIT_MEMBER_NAME(Lib_obj::setIcon,"setIcon");
	HX_VISIT_MEMBER_NAME(Lib_obj::nme_log,"nme_log");
	HX_VISIT_MEMBER_NAME(Lib_obj::nme_crash,"nme_crash");
};

#endif

::hx::Class Lib_obj::__mClass;

static ::String Lib_obj_sStaticFields[] = {
	HX_("nmeCurrent",93,01,e5,9a),
	HX_("nmeStage",98,e5,94,c1),
	HX_("FULLSCREEN",3b,ae,bd,eb),
	HX_("BORDERLESS",45,ba,7a,09),
	HX_("RESIZABLE",4b,a7,a8,a4),
	HX_("HARDWARE",a8,72,59,cf),
	HX_("VSYNC",b1,65,96,bb),
	HX_("HW_AA",50,a3,a3,ae),
	HX_("HW_AA_HIRES",70,13,75,95),
	HX_("ALLOW_SHADERS",78,9c,d4,9c),
	HX_("REQUIRE_SHADERS",54,b7,32,63),
	HX_("DEPTH_BUFFER",1c,84,06,89),
	HX_("STENCIL_BUFFER",43,1c,95,64),
	HX_("SINGLE_INSTANCE",6c,03,d6,5e),
	HX_("title",98,15,3b,10),
	HX_("stageFactory",ac,cd,2f,af),
	HX_("create",fc,66,0f,7c),
	HX_("createSecondaryWindow",e8,42,62,59),
	HX_("load",26,9a,b7,47),
	HX_("crash",e7,bf,4f,4c),
	HX_("log",84,54,52,00),
	HX_("redirectTrace",c9,c1,92,d5),
	HX_("createManagedStage",fb,8c,8b,d8),
	HX_("getURL",79,48,28,a3),
	HX_("getTimer",4f,cf,0c,70),
	HX_("get_current",50,fc,dd,51),
	HX_("get_stage",15,c7,b4,c7),
	HX_("nmeSetCurrentStage",e1,71,1a,89),
	HX_("close",b8,17,63,48),
	HX_("exit",1e,f7,1d,43),
	HX_("forceClose",cd,01,38,df),
	HX_("pause",f6,d6,57,bd),
	HX_("postUICallback",99,d0,5a,b0),
	HX_("resume",ad,69,84,08),
	HX_("setPackage",04,50,90,94),
	HX_("setIcon",3b,28,37,0b),
	HX_("get_initWidth",ad,a4,58,a7),
	HX_("get_initHeight",60,eb,86,7c),
	HX_("get_company",54,75,63,09),
	HX_("get_version",2f,47,ec,02),
	HX_("get_packageName",88,bc,8e,c5),
	HX_("get_file",05,8a,76,c3),
	HX_("get_build",85,37,94,fe),
	HX_("get_ndllVersion",19,21,ee,a6),
	HX_("get_nmeStateVersion",84,b0,85,fa),
	HX_("get_bits",8f,b6,d1,c0),
	HX_("get_silentRecreate",6d,43,7f,ab),
	HX_("set_silentRecreate",e1,75,2e,88),
	HX_("nme_log",cb,8b,b5,d9),
	HX_("nme_crash",ee,96,64,ae),
	::String(null())
};

void Lib_obj::__register()
{
	Lib_obj _hx_dummy;
	Lib_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.Lib",fd,c9,39,b9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Lib_obj::__GetStatic;
	__mClass->mSetStaticField = &Lib_obj::__SetStatic;
	__mClass->mMarkFunc = Lib_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Lib_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Lib_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Lib_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Lib_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Lib_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Lib_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_29_boot)
HXDLIN(  29)		nmeCurrent = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_30_boot)
HXDLIN(  30)		nmeStage = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_33_boot)
HXDLIN(  33)		FULLSCREEN = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_34_boot)
HXDLIN(  34)		BORDERLESS = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_35_boot)
HXDLIN(  35)		RESIZABLE = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_36_boot)
HXDLIN(  36)		HARDWARE = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_37_boot)
HXDLIN(  37)		VSYNC = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_38_boot)
HXDLIN(  38)		HW_AA = 32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_39_boot)
HXDLIN(  39)		HW_AA_HIRES = 96;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_40_boot)
HXDLIN(  40)		ALLOW_SHADERS = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_41_boot)
HXDLIN(  41)		REQUIRE_SHADERS = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_42_boot)
HXDLIN(  42)		DEPTH_BUFFER = 512;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_43_boot)
HXDLIN(  43)		STENCIL_BUFFER = 1024;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_44_boot)
HXDLIN(  44)		SINGLE_INSTANCE = 2048;
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_241_boot)
HXDLIN( 241)		close = ::nme::app::Application_obj::close_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_242_boot)
HXDLIN( 242)		exit = ::nme::app::Application_obj::exit_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_243_boot)
HXDLIN( 243)		forceClose = ::nme::app::Application_obj::forceClose_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_245_boot)
HXDLIN( 245)		pause = ::nme::app::Application_obj::pause_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_246_boot)
HXDLIN( 246)		postUICallback = ::nme::app::Application_obj::postUICallback_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_247_boot)
HXDLIN( 247)		resume = ::nme::app::Application_obj::resume_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_248_boot)
HXDLIN( 248)		setPackage = ::nme::app::Application_obj::setPackage_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_249_boot)
HXDLIN( 249)		setIcon = ::nme::app::Application_obj::setIcon_dyn();
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_270_boot)
HXDLIN( 270)		nme_log = ::nme::Loader_obj::load(HX_("nme_log",cb,8b,b5,d9),1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_364bbfd6a30234d6_271_boot)
HXDLIN( 271)		nme_crash = ::nme::Loader_obj::load(HX_("nme_crash",ee,96,64,ae),0);
            	}
}

} // end namespace nme
