// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_net_URLLoaderDataFormat
#include <nme/net/URLLoaderDataFormat.h>
#endif
namespace nme{
namespace net{

::nme::net::URLLoaderDataFormat URLLoaderDataFormat_obj::BINARY;

::nme::net::URLLoaderDataFormat URLLoaderDataFormat_obj::TEXT;

::nme::net::URLLoaderDataFormat URLLoaderDataFormat_obj::VARIABLES;

bool URLLoaderDataFormat_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BINARY",01,68,8e,9f)) { outValue = URLLoaderDataFormat_obj::BINARY; return true; }
	if (inName==HX_("TEXT",ad,94,ba,37)) { outValue = URLLoaderDataFormat_obj::TEXT; return true; }
	if (inName==HX_("VARIABLES",97,52,bb,7d)) { outValue = URLLoaderDataFormat_obj::VARIABLES; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(URLLoaderDataFormat_obj)

int URLLoaderDataFormat_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BINARY",01,68,8e,9f)) return 0;
	if (inName==HX_("TEXT",ad,94,ba,37)) return 1;
	if (inName==HX_("VARIABLES",97,52,bb,7d)) return 2;
	return super::__FindIndex(inName);
}

int URLLoaderDataFormat_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BINARY",01,68,8e,9f)) return 0;
	if (inName==HX_("TEXT",ad,94,ba,37)) return 0;
	if (inName==HX_("VARIABLES",97,52,bb,7d)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val URLLoaderDataFormat_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BINARY",01,68,8e,9f)) return BINARY;
	if (inName==HX_("TEXT",ad,94,ba,37)) return TEXT;
	if (inName==HX_("VARIABLES",97,52,bb,7d)) return VARIABLES;
	return super::__Field(inName,inCallProp);
}

static ::String URLLoaderDataFormat_obj_sStaticFields[] = {
	HX_("BINARY",01,68,8e,9f),
	HX_("TEXT",ad,94,ba,37),
	HX_("VARIABLES",97,52,bb,7d),
	::String(null())
};

::hx::Class URLLoaderDataFormat_obj::__mClass;

Dynamic __Create_URLLoaderDataFormat_obj() { return new URLLoaderDataFormat_obj; }

void URLLoaderDataFormat_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.net.URLLoaderDataFormat",aa,e8,b4,f2), ::hx::TCanCast< URLLoaderDataFormat_obj >,URLLoaderDataFormat_obj_sStaticFields,0,
	&__Create_URLLoaderDataFormat_obj, &__Create,
	&super::__SGetClass(), &CreateURLLoaderDataFormat_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &URLLoaderDataFormat_obj::__GetStatic;
}

void URLLoaderDataFormat_obj::__boot()
{
BINARY = ::hx::CreateConstEnum< URLLoaderDataFormat_obj >(HX_("BINARY",01,68,8e,9f),0);
TEXT = ::hx::CreateConstEnum< URLLoaderDataFormat_obj >(HX_("TEXT",ad,94,ba,37),1);
VARIABLES = ::hx::CreateConstEnum< URLLoaderDataFormat_obj >(HX_("VARIABLES",97,52,bb,7d),2);
}


} // end namespace nme
} // end namespace net
