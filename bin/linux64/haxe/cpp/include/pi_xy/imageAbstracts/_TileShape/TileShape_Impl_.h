// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_imageAbstracts__TileShape_TileShape_Impl_
#define INCLUDED_pi_xy_imageAbstracts__TileShape_TileShape_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(pi_xy,ImageStruct)
HX_DECLARE_CLASS2(pi_xy,algo,HitQuad)
HX_DECLARE_CLASS2(pi_xy,algo,HitTri)
HX_DECLARE_CLASS2(pi_xy,algo,HitTriArray)
HX_DECLARE_CLASS2(pi_xy,algo,IhitObj)
HX_DECLARE_CLASS2(pi_xy,algo,QuadPoints_)
HX_DECLARE_CLASS2(pi_xy,algo,TriPoints_)
HX_DECLARE_CLASS3(pi_xy,imageAbstracts,_TileShape,TileShape_Impl_)

namespace pi_xy{
namespace imageAbstracts{
namespace _TileShape{


class HXCPP_CLASS_ATTRIBUTES TileShape_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TileShape_Impl__obj OBJ_;
		TileShape_Impl__obj();

	public:
		enum { _hx_ClassId = 0x2df57026 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.imageAbstracts._TileShape.TileShape_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.imageAbstracts._TileShape.TileShape_Impl_"); }

		inline static ::hx::ObjectPtr< TileShape_Impl__obj > __new() {
			::hx::ObjectPtr< TileShape_Impl__obj > __this = new TileShape_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TileShape_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			TileShape_Impl__obj *__this = (TileShape_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TileShape_Impl__obj), false, "pi_xy.imageAbstracts._TileShape.TileShape_Impl_"));
			*(void **)__this = TileShape_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TileShape_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TileShape_Impl_",d3,15,cc,a7); }

		static  ::pi_xy::ImageStruct _new(int w,int h);
		static ::Dynamic _new_dyn();

		static  ::pi_xy::algo::HitTri triangle( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit);
		static ::Dynamic triangle_dyn();

		static  ::pi_xy::algo::HitQuad quad( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float bx,Float by,Float cx,Float cy,Float dx,Float dy, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit);
		static ::Dynamic quad_dyn();

		static  ::pi_xy::algo::HitQuad rectangle( ::pi_xy::ImageStruct this1,Float x,Float y,Float wid,Float hi, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit);
		static ::Dynamic rectangle_dyn();

		static  ::pi_xy::algo::HitQuad line( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit, ::Dynamic debugCorners);
		static ::Dynamic line_dyn();

		static void PolyBuild( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi, ::Dynamic sides,::hx::Null< bool >  cornerUp);
		static ::Dynamic PolyBuild_dyn();

		static void quadrant( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry,Float startAngle, ::pi_xy::ImageStruct tileImage, ::Dynamic phi, ::Dynamic targetError);
		static ::Dynamic quadrant_dyn();

		static void quadrantI( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi);
		static ::Dynamic quadrantI_dyn();

		static void quadrantII( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi);
		static ::Dynamic quadrantII_dyn();

		static void quadrantIII( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi);
		static ::Dynamic quadrantIII_dyn();

		static void quadrantIV( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi);
		static ::Dynamic quadrantIV_dyn();

		static  ::pi_xy::algo::HitTri sweepTri( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float rx,Float ry,Float startRadian,Float sweepRadian, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit);
		static ::Dynamic sweepTri_dyn();

		static  ::pi_xy::algo::HitTriArray pie( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float rx,Float ry,Float startRadian,Float sweepRadian, ::pi_xy::ImageStruct tileImage,::hx::Null< bool >  hasHit, ::Dynamic targetError);
		static ::Dynamic pie_dyn();

		static void ellipseTri( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry, ::pi_xy::ImageStruct tileImage, ::Dynamic phi, ::Dynamic printSides, ::Dynamic targetError);
		static ::Dynamic ellipseTri_dyn();

};

} // end namespace pi_xy
} // end namespace imageAbstracts
} // end namespace _TileShape

#endif /* INCLUDED_pi_xy_imageAbstracts__TileShape_TileShape_Impl_ */ 
