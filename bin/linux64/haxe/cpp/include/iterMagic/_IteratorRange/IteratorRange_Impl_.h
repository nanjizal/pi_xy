// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic__IteratorRange_IteratorRange_Impl_
#define INCLUDED_iterMagic__IteratorRange_IteratorRange_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(IntIterator)
HX_DECLARE_CLASS1(iterMagic,IntIterStart)
HX_DECLARE_CLASS2(iterMagic,_IteratorRange,IteratorRange_Impl_)

namespace iterMagic{
namespace _IteratorRange{


class HXCPP_CLASS_ATTRIBUTES IteratorRange_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IteratorRange_Impl__obj OBJ_;
		IteratorRange_Impl__obj();

	public:
		enum { _hx_ClassId = 0x554bb3ca };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="iterMagic._IteratorRange.IteratorRange_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"iterMagic._IteratorRange.IteratorRange_Impl_"); }

		inline static ::hx::ObjectPtr< IteratorRange_Impl__obj > __new() {
			::hx::ObjectPtr< IteratorRange_Impl__obj > __this = new IteratorRange_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< IteratorRange_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			IteratorRange_Impl__obj *__this = (IteratorRange_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IteratorRange_Impl__obj), false, "iterMagic._IteratorRange.IteratorRange_Impl_"));
			*(void **)__this = IteratorRange_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IteratorRange_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IteratorRange_Impl_",af,9e,3b,d2); }

		static  ::iterMagic::IntIterStart startLength(int min,int len);
		static ::Dynamic startLength_dyn();

		static  ::iterMagic::IntIterStart _new(int min,int max);
		static ::Dynamic _new_dyn();

		static  ::iterMagic::IntIterStart fromIterator( ::IntIterator ii);
		static ::Dynamic fromIterator_dyn();

		static  ::iterMagic::IntIterStart toIterStart( ::iterMagic::IntIterStart this1);
		static ::Dynamic toIterStart_dyn();

		static  ::IntIterator iterator( ::iterMagic::IntIterStart this1);
		static ::Dynamic iterator_dyn();

		static  ::iterMagic::IntIterStart adding( ::iterMagic::IntIterStart a, ::iterMagic::IntIterStart b);
		static ::Dynamic adding_dyn();

		static  ::iterMagic::IntIterStart add( ::iterMagic::IntIterStart this1, ::iterMagic::IntIterStart b);
		static ::Dynamic add_dyn();

		static int get_length( ::iterMagic::IntIterStart this1);
		static ::Dynamic get_length_dyn();

		static int set_length( ::iterMagic::IntIterStart this1,int l);
		static ::Dynamic set_length_dyn();

		static bool contains( ::iterMagic::IntIterStart this1,int v);
		static ::Dynamic contains_dyn();

		static bool containsF( ::iterMagic::IntIterStart this1,Float v);
		static ::Dynamic containsF_dyn();

		static bool isWithin( ::iterMagic::IntIterStart this1, ::iterMagic::IntIterStart ir);
		static ::Dynamic isWithin_dyn();

		static void moveRange( ::iterMagic::IntIterStart this1,int v);
		static ::Dynamic moveRange_dyn();

		static  ::iterMagic::IntIterStart addAssign( ::iterMagic::IntIterStart a,int v);
		static ::Dynamic addAssign_dyn();

		static  ::iterMagic::IntIterStart minusAssign( ::iterMagic::IntIterStart a,int v);
		static ::Dynamic minusAssign_dyn();

		static bool ifContainMove( ::iterMagic::IntIterStart this1,int v,int amount);
		static ::Dynamic ifContainMove_dyn();

		static ::String toString( ::iterMagic::IntIterStart this1);
		static ::Dynamic toString_dyn();

		static ::cpp::VirtualArray map( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f);
		static ::Dynamic map_dyn();

		static ::cpp::VirtualArray filter( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f);
		static ::Dynamic filter_dyn();

		static  ::Dynamic find( ::iterMagic::IntIterStart this1, ::Dynamic it, ::Dynamic f);
		static ::Dynamic find_dyn();

		static ::cpp::VirtualArray remapArray( ::iterMagic::IntIterStart this1,::cpp::VirtualArray arr, ::Dynamic f);
		static ::Dynamic remapArray_dyn();

		static ::cpp::VirtualArray mapArray( ::iterMagic::IntIterStart this1,::cpp::VirtualArray arr, ::Dynamic f);
		static ::Dynamic mapArray_dyn();

};

} // end namespace iterMagic
} // end namespace _IteratorRange

#endif /* INCLUDED_iterMagic__IteratorRange_IteratorRange_Impl_ */ 
