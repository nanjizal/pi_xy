// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_GradientType
#include <nme/display/GradientType.h>
#endif
namespace nme{
namespace display{

::nme::display::GradientType GradientType_obj::LINEAR;

::nme::display::GradientType GradientType_obj::RADIAL;

bool GradientType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LINEAR",e5,fd,22,9f)) { outValue = GradientType_obj::LINEAR; return true; }
	if (inName==HX_("RADIAL",df,6a,79,63)) { outValue = GradientType_obj::RADIAL; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(GradientType_obj)

int GradientType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LINEAR",e5,fd,22,9f)) return 1;
	if (inName==HX_("RADIAL",df,6a,79,63)) return 0;
	return super::__FindIndex(inName);
}

int GradientType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LINEAR",e5,fd,22,9f)) return 0;
	if (inName==HX_("RADIAL",df,6a,79,63)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val GradientType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LINEAR",e5,fd,22,9f)) return LINEAR;
	if (inName==HX_("RADIAL",df,6a,79,63)) return RADIAL;
	return super::__Field(inName,inCallProp);
}

static ::String GradientType_obj_sStaticFields[] = {
	HX_("RADIAL",df,6a,79,63),
	HX_("LINEAR",e5,fd,22,9f),
	::String(null())
};

::hx::Class GradientType_obj::__mClass;

Dynamic __Create_GradientType_obj() { return new GradientType_obj; }

void GradientType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.display.GradientType",be,88,d0,db), ::hx::TCanCast< GradientType_obj >,GradientType_obj_sStaticFields,0,
	&__Create_GradientType_obj, &__Create,
	&super::__SGetClass(), &CreateGradientType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &GradientType_obj::__GetStatic;
}

void GradientType_obj::__boot()
{
LINEAR = ::hx::CreateConstEnum< GradientType_obj >(HX_("LINEAR",e5,fd,22,9f),1);
RADIAL = ::hx::CreateConstEnum< GradientType_obj >(HX_("RADIAL",df,6a,79,63),0);
}


} // end namespace nme
} // end namespace display
