// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic_IntIterXY
#define INCLUDED_iterMagic_IntIterXY

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(IntIterator)
HX_DECLARE_CLASS1(iterMagic,IntIterStart)
HX_DECLARE_CLASS1(iterMagic,IntIterXY)

namespace iterMagic{


class HXCPP_CLASS_ATTRIBUTES IntIterXY_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IntIterXY_obj OBJ_;
		IntIterXY_obj();

	public:
		enum { _hx_ClassId = 0x0a22ea3b };

		void __construct( ::iterMagic::IntIterStart xRange_, ::iterMagic::IntIterStart yRange_);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iterMagic.IntIterXY")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"iterMagic.IntIterXY"); }
		static ::hx::ObjectPtr< IntIterXY_obj > __new( ::iterMagic::IntIterStart xRange_, ::iterMagic::IntIterStart yRange_);
		static ::hx::ObjectPtr< IntIterXY_obj > __alloc(::hx::Ctx *_hx_ctx, ::iterMagic::IntIterStart xRange_, ::iterMagic::IntIterStart yRange_);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IntIterXY_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IntIterXY",48,c6,df,cf); }

		int x;
		int y;
		int xMax;
		int yMax;
		int xReset;
		int yReset;
		 ::IntIterator iter;
};

} // end namespace iterMagic

#endif /* INCLUDED_iterMagic_IntIterXY */ 
