// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_SpreadMethod
#include <nme/display/SpreadMethod.h>
#endif
namespace nme{
namespace display{

::nme::display::SpreadMethod SpreadMethod_obj::PAD;

::nme::display::SpreadMethod SpreadMethod_obj::REFLECT;

::nme::display::SpreadMethod SpreadMethod_obj::REPEAT;

bool SpreadMethod_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("PAD",33,ed,3c,00)) { outValue = SpreadMethod_obj::PAD; return true; }
	if (inName==HX_("REFLECT",1d,58,fd,68)) { outValue = SpreadMethod_obj::REFLECT; return true; }
	if (inName==HX_("REPEAT",5b,43,ff,b8)) { outValue = SpreadMethod_obj::REPEAT; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(SpreadMethod_obj)

int SpreadMethod_obj::__FindIndex(::String inName)
{
	if (inName==HX_("PAD",33,ed,3c,00)) return 0;
	if (inName==HX_("REFLECT",1d,58,fd,68)) return 2;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return 1;
	return super::__FindIndex(inName);
}

int SpreadMethod_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("PAD",33,ed,3c,00)) return 0;
	if (inName==HX_("REFLECT",1d,58,fd,68)) return 0;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val SpreadMethod_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("PAD",33,ed,3c,00)) return PAD;
	if (inName==HX_("REFLECT",1d,58,fd,68)) return REFLECT;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return REPEAT;
	return super::__Field(inName,inCallProp);
}

static ::String SpreadMethod_obj_sStaticFields[] = {
	HX_("PAD",33,ed,3c,00),
	HX_("REPEAT",5b,43,ff,b8),
	HX_("REFLECT",1d,58,fd,68),
	::String(null())
};

::hx::Class SpreadMethod_obj::__mClass;

Dynamic __Create_SpreadMethod_obj() { return new SpreadMethod_obj; }

void SpreadMethod_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.display.SpreadMethod",a8,7d,17,d4), ::hx::TCanCast< SpreadMethod_obj >,SpreadMethod_obj_sStaticFields,0,
	&__Create_SpreadMethod_obj, &__Create,
	&super::__SGetClass(), &CreateSpreadMethod_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &SpreadMethod_obj::__GetStatic;
}

void SpreadMethod_obj::__boot()
{
PAD = ::hx::CreateConstEnum< SpreadMethod_obj >(HX_("PAD",33,ed,3c,00),0);
REFLECT = ::hx::CreateConstEnum< SpreadMethod_obj >(HX_("REFLECT",1d,58,fd,68),2);
REPEAT = ::hx::CreateConstEnum< SpreadMethod_obj >(HX_("REPEAT",5b,43,ff,b8),1);
}


} // end namespace nme
} // end namespace display
