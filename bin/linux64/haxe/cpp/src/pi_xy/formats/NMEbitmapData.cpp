// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_BitmapData
#include <nme/display/BitmapData.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_pi_xy_ImageStruct
#include <pi_xy/ImageStruct.h>
#endif
#ifndef INCLUDED_pi_xy_formats_NMEbitmapData
#include <pi_xy/formats/NMEbitmapData.h>
#endif
#ifndef INCLUDED_pi_xy_formats__NMEbitmapData_NMEbitmapData_Fields_
#include <pi_xy/formats/_NMEbitmapData/NMEbitmapData_Fields_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2c8b7b4e49bdd038_14_new,"pi_xy.formats.NMEbitmapData","new",0x8a9f8ed8,"pi_xy.formats.NMEbitmapData.new","pi_xy/formats/NMEbitmapData.hx",14,0x20b1209a)
HX_LOCAL_STACK_FRAME(_hx_pos_2c8b7b4e49bdd038_13_boot,"pi_xy.formats.NMEbitmapData","boot",0xb9166eba,"pi_xy.formats.NMEbitmapData.boot","pi_xy/formats/NMEbitmapData.hx",13,0x20b1209a)
namespace pi_xy{
namespace formats{

void NMEbitmapData_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_2c8b7b4e49bdd038_14_new)
            	}

Dynamic NMEbitmapData_obj::__CreateEmpty() { return new NMEbitmapData_obj; }

void *NMEbitmapData_obj::_hx_vtable = 0;

Dynamic NMEbitmapData_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NMEbitmapData_obj > _hx_result = new NMEbitmapData_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NMEbitmapData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4131a38a;
}

 ::Dynamic NMEbitmapData_obj::toNmeBitmapData_;


NMEbitmapData_obj::NMEbitmapData_obj()
{
}

bool NMEbitmapData_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"toNmeBitmapData_") ) { outValue = ( toNmeBitmapData_ ); return true; }
	}
	return false;
}

bool NMEbitmapData_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"toNmeBitmapData_") ) { toNmeBitmapData_=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *NMEbitmapData_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo NMEbitmapData_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &NMEbitmapData_obj::toNmeBitmapData_,HX_("toNmeBitmapData_",bb,e1,48,c8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void NMEbitmapData_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NMEbitmapData_obj::toNmeBitmapData_,"toNmeBitmapData_");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NMEbitmapData_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NMEbitmapData_obj::toNmeBitmapData_,"toNmeBitmapData_");
};

#endif

::hx::Class NMEbitmapData_obj::__mClass;

static ::String NMEbitmapData_obj_sStaticFields[] = {
	HX_("toNmeBitmapData_",bb,e1,48,c8),
	::String(null())
};

void NMEbitmapData_obj::__register()
{
	NMEbitmapData_obj _hx_dummy;
	NMEbitmapData_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.formats.NMEbitmapData",e6,82,d1,29);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NMEbitmapData_obj::__GetStatic;
	__mClass->mSetStaticField = &NMEbitmapData_obj::__SetStatic;
	__mClass->mMarkFunc = NMEbitmapData_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(NMEbitmapData_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< NMEbitmapData_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NMEbitmapData_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NMEbitmapData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NMEbitmapData_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NMEbitmapData_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_2c8b7b4e49bdd038_13_boot)
HXDLIN(  13)		toNmeBitmapData_ = ::pi_xy::formats::_NMEbitmapData::NMEbitmapData_Fields__obj::toNmeBitmapData_dyn();
            	}
}

} // end namespace pi_xy
} // end namespace formats
