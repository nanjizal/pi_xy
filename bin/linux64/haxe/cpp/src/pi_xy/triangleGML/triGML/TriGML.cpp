// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED__Xml_XmlType_Impl_
#include <_Xml/XmlType_Impl_.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_ShapeInterface
#include <pi_xy/triangleGML/triGML/ShapeInterface.h>
#endif
#ifndef INCLUDED_pi_xy_triangleGML_triGML_TriGML
#include <pi_xy/triangleGML/triGML/TriGML.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7b5871517dc11066_6_new,"pi_xy.triangleGML.triGML.TriGML","new",0xaff98b69,"pi_xy.triangleGML.triGML.TriGML.new","pi_xy/triangleGML/triGML/TriGML.hx",6,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_14_addImage,"pi_xy.triangleGML.triGML.TriGML","addImage",0x06b0e9d1,"pi_xy.triangleGML.triGML.TriGML.addImage","pi_xy/triangleGML/triGML/TriGML.hx",14,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_31_addShape,"pi_xy.triangleGML.triGML.TriGML","addShape",0xc564ad97,"pi_xy.triangleGML.triGML.TriGML.addShape","pi_xy/triangleGML/triGML/TriGML.hx",31,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_41_process,"pi_xy.triangleGML.triGML.TriGML","process",0xf48515f8,"pi_xy.triangleGML.triGML.TriGML.process","pi_xy/triangleGML/triGML/TriGML.hx",41,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_44_processShape,"pi_xy.triangleGML.triGML.TriGML","processShape",0x3fba9a09,"pi_xy.triangleGML.triGML.TriGML.processShape","pi_xy/triangleGML/triGML/TriGML.hx",44,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_62_processAttribute,"pi_xy.triangleGML.triGML.TriGML","processAttribute",0xd397bb04,"pi_xy.triangleGML.triGML.TriGML.processAttribute","pi_xy/triangleGML/triGML/TriGML.hx",62,0x0e722d88)
HX_LOCAL_STACK_FRAME(_hx_pos_7b5871517dc11066_69_render,"pi_xy.triangleGML.triGML.TriGML","render",0x8b7d7bed,"pi_xy.triangleGML.triGML.TriGML.render","pi_xy/triangleGML/triGML/TriGML.hx",69,0x0e722d88)
namespace pi_xy{
namespace triangleGML{
namespace triGML{

void TriGML_obj::__construct( ::Dynamic drawTool, ::Xml xml,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y){
            		Float x = __o_x.Default(((Float)0.));
            		Float y = __o_y.Default(((Float)0.));
            	HX_GC_STACKFRAME(&_hx_pos_7b5871517dc11066_6_new)
HXLINE(  12)		this->imageResource =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  22)		this->drawTool = drawTool;
HXLINE(  23)		if (::hx::IsNotNull( xml )) {
HXLINE(  24)			this->xml = xml;
HXLINE(  25)			this->offX = x;
HXLINE(  26)			this->offY = y;
HXLINE(  27)			this->process();
            		}
            	}

bool TriGML_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7552a34d;
}

 ::Dynamic TriGML_obj::addImage(::String name, ::Dynamic imageTool){
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_14_addImage)
HXLINE(  15)		::String lowerName = name.toLowerCase();
HXLINE(  16)		this->imageResource->set(lowerName,imageTool);
HXLINE(  17)		::haxe::Log_obj::trace(this->imageResource,::hx::SourceInfo(HX_("src/pi_xy/triangleGML/triGML/TriGML.hx",13,a3,b4,a6),17,HX_("pi_xy.triangleGML.triGML.TriGML",f7,a2,cb,2d),HX_("addImage",7a,45,c6,36)));
HXLINE(  18)		return imageTool;
            	}


HX_DEFINE_DYNAMIC_FUNC2(TriGML_obj,addImage,return )

 ::pi_xy::triangleGML::triGML::TriGML TriGML_obj::addShape(::String str,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y){
            		Float x = __o_x.Default(((Float)0.));
            		Float y = __o_y.Default(((Float)0.));
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_31_addShape)
HXLINE(  32)		this->xml = ::Xml_obj::parse(((HX_("<node>",40,5e,28,9d) + str) + HX_("</node>",a9,82,8c,29)))->firstElement();
HXLINE(  33)		this->offX = x;
HXLINE(  34)		this->offY = y;
HXLINE(  35)		this->process();
HXLINE(  36)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(TriGML_obj,addShape,return )

void TriGML_obj::process(){
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_41_process)
HXDLIN(  41)		 ::Dynamic e = this->xml->elements();
HXDLIN(  41)		while(( (bool)(e->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXDLIN(  41)			 ::Xml e1 = ( ( ::Xml)(e->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXDLIN(  41)			this->processShape(e1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TriGML_obj,process,(void))

void TriGML_obj::processShape( ::Xml x){
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_44_processShape)
HXLINE(  45)		if ((x->nodeType != ::Xml_obj::Element)) {
HXLINE(  45)			HX_STACK_DO_THROW((HX_("Bad node type, expected Element but found ",d8,90,8b,bb) + ::_Xml::XmlType_Impl__obj::toString(x->nodeType)));
            		}
HXDLIN(  45)		::String name = x->nodeName;
HXLINE(  46)		::Dynamic s = this->getTriangleGML(name);
HXLINE(  47)		{
HXLINE(  47)			 ::Dynamic att = x->attributes();
HXDLIN(  47)			while(( (bool)(att->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  47)				::String att1 = ( (::String)(att->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXDLIN(  47)				this->processAttribute(att1,x->get(att1),s);
            			}
            		}
HXLINE(  48)		bool _hx_tmp;
HXDLIN(  48)		if ((this->offX == ((Float)0.))) {
HXLINE(  48)			_hx_tmp = (this->offY != ((Float)0.));
            		}
            		else {
HXLINE(  48)			_hx_tmp = true;
            		}
HXDLIN(  48)		if (_hx_tmp) {
HXLINE(  48)			::pi_xy::triangleGML::triGML::ShapeInterface_obj::translate(s,this->offX,this->offY);
            		}
HXLINE(  49)		if (::hx::IsNull( this->shapes )) {
HXLINE(  49)			this->shapes = ::Array_obj< ::Dynamic>::__new(0);
            		}
HXLINE(  50)		this->shapes->push(s);
HXLINE(  53)		::pi_xy::triangleGML::triGML::ShapeInterface_obj::render(s,this->drawTool);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TriGML_obj,processShape,(void))

void TriGML_obj::processAttribute(::String att,::String value,::Dynamic shape){
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_62_processAttribute)
HXDLIN(  62)		if ((att.substr(0,HX_("image",5b,1f,69,bd).length) == HX_("image",5b,1f,69,bd))) {
HXLINE(  64)			 ::haxe::ds::StringMap _hx_tmp = this->imageResource;
HXDLIN(  64)			::pi_xy::triangleGML::triGML::ShapeInterface_obj::setImage(shape,att,_hx_tmp->get(value.toLowerCase()));
            		}
            		else {
HXLINE(  66)			::pi_xy::triangleGML::triGML::ShapeInterface_obj::setParameter(shape,att,value);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(TriGML_obj,processAttribute,(void))

void TriGML_obj::render(){
            	HX_STACKFRAME(&_hx_pos_7b5871517dc11066_69_render)
HXDLIN(  69)		int _g = 0;
HXDLIN(  69)		int _g1 = this->shapes->length;
HXDLIN(  69)		while((_g < _g1)){
HXDLIN(  69)			_g = (_g + 1);
HXDLIN(  69)			int i = (_g - 1);
HXDLIN(  69)			::pi_xy::triangleGML::triGML::ShapeInterface_obj::render(this->shapes->__get(i),this->drawTool);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TriGML_obj,render,(void))

HX_DEFINE_DYNAMIC_FUNC1(TriGML_obj,getTriangleGML,return )


TriGML_obj::TriGML_obj()
{
}

void TriGML_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TriGML);
	HX_MARK_MEMBER_NAME(drawTool,"drawTool");
	HX_MARK_MEMBER_NAME(xml,"xml");
	HX_MARK_MEMBER_NAME(offX,"offX");
	HX_MARK_MEMBER_NAME(offY,"offY");
	HX_MARK_MEMBER_NAME(shapes,"shapes");
	HX_MARK_MEMBER_NAME(imageResource,"imageResource");
	HX_MARK_END_CLASS();
}

void TriGML_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(drawTool,"drawTool");
	HX_VISIT_MEMBER_NAME(xml,"xml");
	HX_VISIT_MEMBER_NAME(offX,"offX");
	HX_VISIT_MEMBER_NAME(offY,"offY");
	HX_VISIT_MEMBER_NAME(shapes,"shapes");
	HX_VISIT_MEMBER_NAME(imageResource,"imageResource");
}

::hx::Val TriGML_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"xml") ) { return ::hx::Val( xml ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"offX") ) { return ::hx::Val( offX ); }
		if (HX_FIELD_EQ(inName,"offY") ) { return ::hx::Val( offY ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"shapes") ) { return ::hx::Val( shapes ); }
		if (HX_FIELD_EQ(inName,"render") ) { return ::hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"process") ) { return ::hx::Val( process_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawTool") ) { return ::hx::Val( drawTool ); }
		if (HX_FIELD_EQ(inName,"addImage") ) { return ::hx::Val( addImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"addShape") ) { return ::hx::Val( addShape_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"processShape") ) { return ::hx::Val( processShape_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"imageResource") ) { return ::hx::Val( imageResource ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getTriangleGML") ) { return ::hx::Val( getTriangleGML_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"processAttribute") ) { return ::hx::Val( processAttribute_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TriGML_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"xml") ) { xml=inValue.Cast<  ::Xml >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"offX") ) { offX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"offY") ) { offY=inValue.Cast< Float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"shapes") ) { shapes=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawTool") ) { drawTool=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"imageResource") ) { imageResource=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TriGML_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("drawTool",7c,05,6b,61));
	outFields->push(HX_("xml",d7,6d,5b,00));
	outFields->push(HX_("offX",09,6e,ac,49));
	outFields->push(HX_("offY",0a,6e,ac,49));
	outFields->push(HX_("shapes",32,da,29,1d));
	outFields->push(HX_("imageResource",49,8b,42,f2));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TriGML_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(TriGML_obj,drawTool),HX_("drawTool",7c,05,6b,61)},
	{::hx::fsObject /*  ::Xml */ ,(int)offsetof(TriGML_obj,xml),HX_("xml",d7,6d,5b,00)},
	{::hx::fsFloat,(int)offsetof(TriGML_obj,offX),HX_("offX",09,6e,ac,49)},
	{::hx::fsFloat,(int)offsetof(TriGML_obj,offY),HX_("offY",0a,6e,ac,49)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(TriGML_obj,shapes),HX_("shapes",32,da,29,1d)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(TriGML_obj,imageResource),HX_("imageResource",49,8b,42,f2)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TriGML_obj_sStaticStorageInfo = 0;
#endif

static ::String TriGML_obj_sMemberFields[] = {
	HX_("drawTool",7c,05,6b,61),
	HX_("xml",d7,6d,5b,00),
	HX_("offX",09,6e,ac,49),
	HX_("offY",0a,6e,ac,49),
	HX_("shapes",32,da,29,1d),
	HX_("imageResource",49,8b,42,f2),
	HX_("addImage",7a,45,c6,36),
	HX_("addShape",40,09,7a,f5),
	HX_("process",6f,a2,4a,f1),
	HX_("processShape",32,7e,d1,63),
	HX_("processAttribute",ad,67,5e,b2),
	HX_("render",56,6b,29,05),
	HX_("getTriangleGML",a8,24,ec,3d),
	::String(null()) };

::hx::Class TriGML_obj::__mClass;

void TriGML_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.triangleGML.triGML.TriGML",f7,a2,cb,2d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TriGML_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TriGML_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TriGML_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TriGML_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace triangleGML
} // end namespace triGML
