// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_imageAbstracts__GradientShape_GradientShape_Impl_
#define INCLUDED_pi_xy_imageAbstracts__GradientShape_GradientShape_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(pi_xy,ImageStruct)
HX_DECLARE_CLASS2(pi_xy,algo,HitQuad)
HX_DECLARE_CLASS2(pi_xy,algo,HitTri)
HX_DECLARE_CLASS2(pi_xy,algo,HitTriArray)
HX_DECLARE_CLASS2(pi_xy,algo,IhitObj)
HX_DECLARE_CLASS2(pi_xy,algo,QuadPoints_)
HX_DECLARE_CLASS2(pi_xy,algo,TriPoints_)
HX_DECLARE_CLASS3(pi_xy,imageAbstracts,_GradientShape,GradientShape_Impl_)

namespace pi_xy{
namespace imageAbstracts{
namespace _GradientShape{


class HXCPP_CLASS_ATTRIBUTES GradientShape_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GradientShape_Impl__obj OBJ_;
		GradientShape_Impl__obj();

	public:
		enum { _hx_ClassId = 0x46d86002 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.imageAbstracts._GradientShape.GradientShape_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.imageAbstracts._GradientShape.GradientShape_Impl_"); }

		inline static ::hx::ObjectPtr< GradientShape_Impl__obj > __new() {
			::hx::ObjectPtr< GradientShape_Impl__obj > __this = new GradientShape_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< GradientShape_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			GradientShape_Impl__obj *__this = (GradientShape_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GradientShape_Impl__obj), false, "pi_xy.imageAbstracts._GradientShape.GradientShape_Impl_"));
			*(void **)__this = GradientShape_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GradientShape_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GradientShape_Impl_",51,ea,c6,3f); }

		static  ::pi_xy::ImageStruct _new(int w,int h);
		static ::Dynamic _new_dyn();

		static  ::pi_xy::algo::HitTri triangle( ::pi_xy::ImageStruct this1,Float ax,Float ay,int colA,Float bx,Float by,int colB,Float cx,Float cy,int colC,::hx::Null< bool >  hasHit);
		static ::Dynamic triangle_dyn();

		static  ::Dynamic rectangle( ::pi_xy::ImageStruct this1,Float x,Float y,Float wid,Float hi,int colorA,int colorB,int colorC,int colorD);
		static ::Dynamic rectangle_dyn();

		static  ::pi_xy::algo::HitQuad quad( ::pi_xy::ImageStruct this1,Float ax,Float ay,int colorA,Float bx,Float by,int colorB,Float cx,Float cy,int colorC,Float dx,Float dy,int colorD,::hx::Null< bool >  hasHit);
		static ::Dynamic quad_dyn();

		static  ::pi_xy::algo::HitQuad line( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int colorA,int colorB,int colorC,int colorD,::hx::Null< bool >  hasHit, ::Dynamic debugCorners);
		static ::Dynamic line_dyn();

		static void radialPolyon( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry,int colorIn,int colorOut,::hx::Null< Float >  gx,::hx::Null< Float >  gy, ::Dynamic phi, ::Dynamic sides,::hx::Null< bool >  cornerUp);
		static ::Dynamic radialPolyon_dyn();

		static void radialEllipseTri( ::pi_xy::ImageStruct this1,Float cx,Float cy,Float rx,Float ry,int colorIn,int colorOut,::hx::Null< Float >  gx,::hx::Null< Float >  gy, ::Dynamic phi, ::Dynamic printSides, ::Dynamic targetError);
		static ::Dynamic radialEllipseTri_dyn();

		static  ::pi_xy::algo::HitTri sweepTri( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float rx,Float ry,Float startRadian,Float sweepRadian,int colA,int colB,int colC,::hx::Null< bool >  hasHit);
		static ::Dynamic sweepTri_dyn();

		static  ::pi_xy::algo::HitTriArray pie( ::pi_xy::ImageStruct this1,Float ax,Float ay,Float rx,Float ry,Float startRadian,Float sweepRadian,int centreColor,int outerColor,::hx::Null< bool >  hasHit, ::Dynamic targetError);
		static ::Dynamic pie_dyn();

		static void radialRectangle( ::pi_xy::ImageStruct this1,Float x,Float y,Float wid,Float hi,int colorIn,int colorOut, ::Dynamic gx, ::Dynamic gy);
		static ::Dynamic radialRectangle_dyn();

		static  ::pi_xy::algo::HitTriArray thickArrow( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color1,int color2,::hx::Null< bool >  flare,::hx::Null< bool >  reverseFlare,::hx::Null< bool >  hasHit);
		static ::Dynamic thickArrow_dyn();

		static  ::pi_xy::algo::HitTriArray thickArrowBoth( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float thick,int color1,int color2,::hx::Null< bool >  hasHit);
		static ::Dynamic thickArrowBoth_dyn();

		static  ::pi_xy::algo::HitTriArray thickFixArrow( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float arrowWidth,Float arrowHeight,Float thick,int color1,int color2,::hx::Null< bool >  flare,::hx::Null< bool >  reverseFlare,::hx::Null< bool >  hasHit);
		static ::Dynamic thickFixArrow_dyn();

		static  ::pi_xy::algo::HitTriArray thickFixArrowBoth( ::pi_xy::ImageStruct this1,Float px,Float py,Float qx,Float qy,Float arrowWidth,Float arrowHeight,Float thick,int color1,int color2,::hx::Null< bool >  hasHit);
		static ::Dynamic thickFixArrowBoth_dyn();

		static void RoundRectangle( ::pi_xy::ImageStruct this1,Float x,Float y,Float hi,Float wid,int colorA,int colorB,int colorC,int colorD, ::Dynamic dx, ::Dynamic dy, ::Dynamic fat, ::Dynamic tall);
		static ::Dynamic RoundRectangle_dyn();

		static void lineRoundRectangle( ::pi_xy::ImageStruct this1,Float x,Float y,Float hi,Float wid,Float thick,int colorA,int colorB,int colorC,int colorD, ::Dynamic dx, ::Dynamic dy, ::Dynamic fat, ::Dynamic tall);
		static ::Dynamic lineRoundRectangle_dyn();

};

} // end namespace pi_xy
} // end namespace imageAbstracts
} // end namespace _GradientShape

#endif /* INCLUDED_pi_xy_imageAbstracts__GradientShape_GradientShape_Impl_ */ 
