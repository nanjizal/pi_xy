// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_display_IGraphicsData
#define INCLUDED_nme_display_IGraphicsData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e149d1eb7d8152c9_11_new)
HX_DECLARE_CLASS2(nme,display,IGraphicsData)

namespace nme{
namespace display{


class HXCPP_CLASS_ATTRIBUTES IGraphicsData_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IGraphicsData_obj OBJ_;
		IGraphicsData_obj();

	public:
		enum { _hx_ClassId = 0x5d661902 };

		void __construct( ::Dynamic inHandle);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nme.display.IGraphicsData")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"nme.display.IGraphicsData"); }

		inline static ::hx::ObjectPtr< IGraphicsData_obj > __new( ::Dynamic inHandle) {
			::hx::ObjectPtr< IGraphicsData_obj > __this = new IGraphicsData_obj();
			__this->__construct(inHandle);
			return __this;
		}

		inline static ::hx::ObjectPtr< IGraphicsData_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic inHandle) {
			IGraphicsData_obj *__this = (IGraphicsData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IGraphicsData_obj), true, "nme.display.IGraphicsData"));
			*(void **)__this = IGraphicsData_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_e149d1eb7d8152c9_11_new)
HXDLIN(  11)		( ( ::nme::display::IGraphicsData)(__this) )->nmeHandle = inHandle;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IGraphicsData_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IGraphicsData",7e,52,4e,ed); }

		 ::Dynamic nmeHandle;
};

} // end namespace nme
} // end namespace display

#endif /* INCLUDED_nme_display_IGraphicsData */ 
