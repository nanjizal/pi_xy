// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_algo_RoundRecPixel
#define INCLUDED_pi_xy_algo_RoundRecPixel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(pi_xy,ImageStruct)
HX_DECLARE_CLASS2(pi_xy,algo,RoundRecPixel)

namespace pi_xy{
namespace algo{


class HXCPP_CLASS_ATTRIBUTES RoundRecPixel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef RoundRecPixel_obj OBJ_;
		RoundRecPixel_obj();

	public:
		enum { _hx_ClassId = 0x3b8ee06e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="pi_xy.algo.RoundRecPixel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"pi_xy.algo.RoundRecPixel"); }
		static ::hx::ObjectPtr< RoundRecPixel_obj > __new();
		static ::hx::ObjectPtr< RoundRecPixel_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~RoundRecPixel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("RoundRecPixel",64,9d,e2,6a); }

		 ::Dynamic _fillRoundRectangle;
		Dynamic _fillRoundRectangle_dyn() { return _fillRoundRectangle;}
		 ::Dynamic _tileRoundRectangle;
		Dynamic _tileRoundRectangle_dyn() { return _tileRoundRectangle;}
		 ::Dynamic _fillGrad4RoundRectangle;
		Dynamic _fillGrad4RoundRectangle_dyn() { return _fillGrad4RoundRectangle;}
};

} // end namespace pi_xy
} // end namespace algo

#endif /* INCLUDED_pi_xy_algo_RoundRecPixel */ 
