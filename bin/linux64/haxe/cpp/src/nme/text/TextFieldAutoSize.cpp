// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_text_TextFieldAutoSize
#include <nme/text/TextFieldAutoSize.h>
#endif
namespace nme{
namespace text{

::nme::text::TextFieldAutoSize TextFieldAutoSize_obj::CENTER;

::nme::text::TextFieldAutoSize TextFieldAutoSize_obj::LEFT;

::nme::text::TextFieldAutoSize TextFieldAutoSize_obj::NONE;

::nme::text::TextFieldAutoSize TextFieldAutoSize_obj::RIGHT;

bool TextFieldAutoSize_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CENTER",d5,d1,5d,b8)) { outValue = TextFieldAutoSize_obj::CENTER; return true; }
	if (inName==HX_("LEFT",07,d0,70,32)) { outValue = TextFieldAutoSize_obj::LEFT; return true; }
	if (inName==HX_("NONE",b8,da,ca,33)) { outValue = TextFieldAutoSize_obj::NONE; return true; }
	if (inName==HX_("RIGHT",bc,43,52,67)) { outValue = TextFieldAutoSize_obj::RIGHT; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TextFieldAutoSize_obj)

int TextFieldAutoSize_obj::__FindIndex(::String inName)
{
	if (inName==HX_("CENTER",d5,d1,5d,b8)) return 0;
	if (inName==HX_("LEFT",07,d0,70,32)) return 1;
	if (inName==HX_("NONE",b8,da,ca,33)) return 2;
	if (inName==HX_("RIGHT",bc,43,52,67)) return 3;
	return super::__FindIndex(inName);
}

int TextFieldAutoSize_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("CENTER",d5,d1,5d,b8)) return 0;
	if (inName==HX_("LEFT",07,d0,70,32)) return 0;
	if (inName==HX_("NONE",b8,da,ca,33)) return 0;
	if (inName==HX_("RIGHT",bc,43,52,67)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val TextFieldAutoSize_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("CENTER",d5,d1,5d,b8)) return CENTER;
	if (inName==HX_("LEFT",07,d0,70,32)) return LEFT;
	if (inName==HX_("NONE",b8,da,ca,33)) return NONE;
	if (inName==HX_("RIGHT",bc,43,52,67)) return RIGHT;
	return super::__Field(inName,inCallProp);
}

static ::String TextFieldAutoSize_obj_sStaticFields[] = {
	HX_("CENTER",d5,d1,5d,b8),
	HX_("LEFT",07,d0,70,32),
	HX_("NONE",b8,da,ca,33),
	HX_("RIGHT",bc,43,52,67),
	::String(null())
};

::hx::Class TextFieldAutoSize_obj::__mClass;

Dynamic __Create_TextFieldAutoSize_obj() { return new TextFieldAutoSize_obj; }

void TextFieldAutoSize_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.text.TextFieldAutoSize",c4,11,7c,1a), ::hx::TCanCast< TextFieldAutoSize_obj >,TextFieldAutoSize_obj_sStaticFields,0,
	&__Create_TextFieldAutoSize_obj, &__Create,
	&super::__SGetClass(), &CreateTextFieldAutoSize_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TextFieldAutoSize_obj::__GetStatic;
}

void TextFieldAutoSize_obj::__boot()
{
CENTER = ::hx::CreateConstEnum< TextFieldAutoSize_obj >(HX_("CENTER",d5,d1,5d,b8),0);
LEFT = ::hx::CreateConstEnum< TextFieldAutoSize_obj >(HX_("LEFT",07,d0,70,32),1);
NONE = ::hx::CreateConstEnum< TextFieldAutoSize_obj >(HX_("NONE",b8,da,ca,33),2);
RIGHT = ::hx::CreateConstEnum< TextFieldAutoSize_obj >(HX_("RIGHT",bc,43,52,67),3);
}


} // end namespace nme
} // end namespace text
