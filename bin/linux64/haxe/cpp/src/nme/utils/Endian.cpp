// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_utils_Endian
#include <nme/utils/Endian.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_db07909afdafeea8_6_boot,"nme.utils.Endian","boot",0x6c6f8fe0,"nme.utils.Endian.boot","nme/utils/Endian.hx",6,0xdf5b203c)
HX_LOCAL_STACK_FRAME(_hx_pos_db07909afdafeea8_7_boot,"nme.utils.Endian","boot",0x6c6f8fe0,"nme.utils.Endian.boot","nme/utils/Endian.hx",7,0xdf5b203c)
namespace nme{
namespace utils{

void Endian_obj::__construct() { }

Dynamic Endian_obj::__CreateEmpty() { return new Endian_obj; }

void *Endian_obj::_hx_vtable = 0;

Dynamic Endian_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Endian_obj > _hx_result = new Endian_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Endian_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6c01d226;
}

::String Endian_obj::_hx_BIG_ENDIAN;

::String Endian_obj::_hx_LITTLE_ENDIAN;


Endian_obj::Endian_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Endian_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Endian_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Endian_obj::_hx_BIG_ENDIAN,HX_("BIG_ENDIAN",9a,d5,89,b2)},
	{::hx::fsString,(void *) &Endian_obj::_hx_LITTLE_ENDIAN,HX_("LITTLE_ENDIAN",04,50,ec,fb)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Endian_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Endian_obj::_hx_BIG_ENDIAN,"BIG_ENDIAN");
	HX_MARK_MEMBER_NAME(Endian_obj::_hx_LITTLE_ENDIAN,"LITTLE_ENDIAN");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Endian_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Endian_obj::_hx_BIG_ENDIAN,"BIG_ENDIAN");
	HX_VISIT_MEMBER_NAME(Endian_obj::_hx_LITTLE_ENDIAN,"LITTLE_ENDIAN");
};

#endif

::hx::Class Endian_obj::__mClass;

static ::String Endian_obj_sStaticFields[] = {
	HX_("BIG_ENDIAN",9a,d5,89,b2),
	HX_("LITTLE_ENDIAN",04,50,ec,fb),
	::String(null())
};

void Endian_obj::__register()
{
	Endian_obj _hx_dummy;
	Endian_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.utils.Endian",80,f3,17,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Endian_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Endian_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Endian_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Endian_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Endian_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Endian_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Endian_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_db07909afdafeea8_6_boot)
HXDLIN(   6)		_hx_BIG_ENDIAN = HX_("bigEndian",7b,d5,5a,20);
            	}
{
            	HX_STACKFRAME(&_hx_pos_db07909afdafeea8_7_boot)
HXDLIN(   7)		_hx_LITTLE_ENDIAN = HX_("littleEndian",31,2e,7b,07);
            	}
}

} // end namespace nme
} // end namespace utils
