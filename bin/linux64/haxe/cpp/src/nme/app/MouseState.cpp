// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_app_MouseState
#include <nme/app/MouseState.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a421503e8f9acf55_11_new,"nme.app.MouseState","new",0x4d3d2a13,"nme.app.MouseState.new","nme/app/MouseState.hx",11,0x34b23afb)
HX_LOCAL_STACK_FRAME(_hx_pos_a421503e8f9acf55_15_getButton,"nme.app.MouseState","getButton",0xc1ab0d1b,"nme.app.MouseState.getButton","nme/app/MouseState.hx",15,0x34b23afb)
HX_LOCAL_STACK_FRAME(_hx_pos_a421503e8f9acf55_18_toString,"nme.app.MouseState","toString",0xd3e46e19,"nme.app.MouseState.toString","nme/app/MouseState.hx",18,0x34b23afb)
namespace nme{
namespace app{

void MouseState_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a421503e8f9acf55_11_new)
HXDLIN(  11)		this->x = (this->y = (this->buttons = 0));
            	}

Dynamic MouseState_obj::__CreateEmpty() { return new MouseState_obj; }

void *MouseState_obj::_hx_vtable = 0;

Dynamic MouseState_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MouseState_obj > _hx_result = new MouseState_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MouseState_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x10ffba37;
}

bool MouseState_obj::getButton(int but){
            	HX_STACKFRAME(&_hx_pos_a421503e8f9acf55_15_getButton)
HXDLIN(  15)		return ((this->buttons & (1 << but)) != 0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MouseState_obj,getButton,return )

::String MouseState_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_a421503e8f9acf55_18_toString)
HXDLIN(  18)		return ((((((HX_("MouseState(",dc,a4,b6,df) + this->x) + HX_(",",2c,00,00,00)) + this->y) + HX_(":",3a,00,00,00)) + this->buttons) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MouseState_obj,toString,return )


MouseState_obj::MouseState_obj()
{
}

::hx::Val MouseState_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"buttons") ) { return ::hx::Val( buttons ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getButton") ) { return ::hx::Val( getButton_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val MouseState_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"buttons") ) { buttons=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MouseState_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	outFields->push(HX_("buttons",41,52,75,ca));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MouseState_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(MouseState_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsInt,(int)offsetof(MouseState_obj,y),HX_("y",79,00,00,00)},
	{::hx::fsInt,(int)offsetof(MouseState_obj,buttons),HX_("buttons",41,52,75,ca)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MouseState_obj_sStaticStorageInfo = 0;
#endif

static ::String MouseState_obj_sMemberFields[] = {
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	HX_("buttons",41,52,75,ca),
	HX_("getButton",28,eb,36,56),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class MouseState_obj::__mClass;

void MouseState_obj::__register()
{
	MouseState_obj _hx_dummy;
	MouseState_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.app.MouseState",a1,24,1c,d0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MouseState_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MouseState_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MouseState_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MouseState_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace app
