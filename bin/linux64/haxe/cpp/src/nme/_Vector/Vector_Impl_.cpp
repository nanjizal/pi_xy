// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_haxe_iterators_ArrayIterator
#include <haxe/iterators/ArrayIterator.h>
#endif
#ifndef INCLUDED_nme__Vector_Vector_Impl_
#include <nme/_Vector/Vector_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_36__new,"nme._Vector.Vector_Impl_","_new",0xaf5de3d8,"nme._Vector.Vector_Impl_._new","nme/Vector.hx",36,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_51_concat,"nme._Vector.Vector_Impl_","concat",0xe038a34b,"nme._Vector.Vector_Impl_.concat","nme/Vector.hx",51,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_61_copy,"nme._Vector.Vector_Impl_","copy",0xb2038a2c,"nme._Vector.Vector_Impl_.copy","nme/Vector.hx",61,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_72_iterator,"nme._Vector.Vector_Impl_","iterator",0x0b071fe5,"nme._Vector.Vector_Impl_.iterator","nme/Vector.hx",72,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_80_join,"nme._Vector.Vector_Impl_","join",0xb6a40261,"nme._Vector.Vector_Impl_.join","nme/Vector.hx",80,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_87_pop,"nme._Vector.Vector_Impl_","pop",0x4ee64afa,"nme._Vector.Vector_Impl_.pop","nme/Vector.hx",87,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_94_push,"nme._Vector.Vector_Impl_","push",0xba9fe051,"nme._Vector.Vector_Impl_.push","nme/Vector.hx",94,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_101_reverse,"nme._Vector.Vector_Impl_","reverse",0x5e1a8f0b,"nme._Vector.Vector_Impl_.reverse","nme/Vector.hx",101,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_108_shift,"nme._Vector.Vector_Impl_","shift",0x42d8c62b,"nme._Vector.Vector_Impl_.shift","nme/Vector.hx",108,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_115_unshift,"nme._Vector.Vector_Impl_","unshift",0xbbd23972,"nme._Vector.Vector_Impl_.unshift","nme/Vector.hx",115,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_122_slice,"nme._Vector.Vector_Impl_","slice",0x457d9dfb,"nme._Vector.Vector_Impl_.slice","nme/Vector.hx",122,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_129_sort,"nme._Vector.Vector_Impl_","sort",0xbc96f5d5,"nme._Vector.Vector_Impl_.sort","nme/Vector.hx",129,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_136_splice,"nme._Vector.Vector_Impl_","splice",0xd8071fb3,"nme._Vector.Vector_Impl_.splice","nme/Vector.hx",136,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_141_toString,"nme._Vector.Vector_Impl_","toString",0xafdba6a3,"nme._Vector.Vector_Impl_.toString","nme/Vector.hx",141,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_151_insertAt,"nme._Vector.Vector_Impl_","insertAt",0x398c5283,"nme._Vector.Vector_Impl_.insertAt","nme/Vector.hx",151,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_155_indexOf,"nme._Vector.Vector_Impl_","indexOf",0x23dd9eb2,"nme._Vector.Vector_Impl_.indexOf","nme/Vector.hx",155,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_173_lastIndexOf,"nme._Vector.Vector_Impl_","lastIndexOf",0xf734fb7c,"nme._Vector.Vector_Impl_.lastIndexOf","nme/Vector.hx",173,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_198_ofArray,"nme._Vector.Vector_Impl_","ofArray",0xcc107eeb,"nme._Vector.Vector_Impl_.ofArray","nme/Vector.hx",198,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_209_convert,"nme._Vector.Vector_Impl_","convert",0x5de853dc,"nme._Vector.Vector_Impl_.convert","nme/Vector.hx",209,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_220_fromArray,"nme._Vector.Vector_Impl_","fromArray",0xe1e6b9f8,"nme._Vector.Vector_Impl_.fromArray","nme/Vector.hx",220,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_233_toArray,"nme._Vector.Vector_Impl_","toArray",0x35321007,"nme._Vector.Vector_Impl_.toArray","nme/Vector.hx",233,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_248_get_length,"nme._Vector.Vector_Impl_","get_length",0x5c568666,"nme._Vector.Vector_Impl_.get_length","nme/Vector.hx",248,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_253_set_length,"nme._Vector.Vector_Impl_","set_length",0x5fd424da,"nme._Vector.Vector_Impl_.set_length","nme/Vector.hx",253,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_269_get_fixed,"nme._Vector.Vector_Impl_","get_fixed",0x4c19b7f4,"nme._Vector.Vector_Impl_.get_fixed","nme/Vector.hx",269,0x35cefa72)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e6d5a6be05ab2_280_set_fixed,"nme._Vector.Vector_Impl_","set_fixed",0x2f6aa400,"nme._Vector.Vector_Impl_.set_fixed","nme/Vector.hx",280,0x35cefa72)
namespace nme{
namespace _Vector{

void Vector_Impl__obj::__construct() { }

Dynamic Vector_Impl__obj::__CreateEmpty() { return new Vector_Impl__obj; }

void *Vector_Impl__obj::_hx_vtable = 0;

Dynamic Vector_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Vector_Impl__obj > _hx_result = new Vector_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Vector_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x716a1fff;
}

::cpp::VirtualArray Vector_Impl__obj::_new( ::Dynamic length, ::Dynamic fixed){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_36__new)
HXDLIN(  36)		::cpp::VirtualArray this1 = ::cpp::VirtualArray_obj::__new();
HXLINE(  42)		bool _hx_tmp;
HXDLIN(  42)		if (::hx::IsNotNull( length )) {
HXLINE(  42)			_hx_tmp = ::hx::IsGreater( length,0 );
            		}
            		else {
HXLINE(  42)			_hx_tmp = false;
            		}
HXDLIN(  42)		if (_hx_tmp) {
HXLINE(  43)			_hx_array_set_size_exact(this1,( (int)(length) ));
            		}
HXLINE(  36)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,_new,return )

::cpp::VirtualArray Vector_Impl__obj::concat(::cpp::VirtualArray this1,::cpp::VirtualArray a){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_51_concat)
HXDLIN(  51)		return this1->concat(a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,concat,return )

::cpp::VirtualArray Vector_Impl__obj::copy(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_61_copy)
HXDLIN(  61)		return this1->copy();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,copy,return )

 ::Dynamic Vector_Impl__obj::iterator(::cpp::VirtualArray this1){
            	HX_GC_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_72_iterator)
HXDLIN(  72)		return  ::haxe::iterators::ArrayIterator_obj::__alloc( HX_CTX ,this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,iterator,return )

::String Vector_Impl__obj::join(::cpp::VirtualArray this1,::String sep){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_80_join)
HXDLIN(  80)		return this1->join(sep);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,join,return )

 ::Dynamic Vector_Impl__obj::pop(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_87_pop)
HXDLIN(  87)		return this1->pop();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,pop,return )

int Vector_Impl__obj::push(::cpp::VirtualArray this1, ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_94_push)
HXDLIN(  94)		return this1->push(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,push,return )

void Vector_Impl__obj::reverse(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_101_reverse)
HXDLIN( 101)		this1->reverse();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,reverse,(void))

 ::Dynamic Vector_Impl__obj::shift(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_108_shift)
HXDLIN( 108)		return this1->shift();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,shift,return )

void Vector_Impl__obj::unshift(::cpp::VirtualArray this1, ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_115_unshift)
HXDLIN( 115)		this1->unshift(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,unshift,(void))

::cpp::VirtualArray Vector_Impl__obj::slice(::cpp::VirtualArray this1, ::Dynamic pos, ::Dynamic end){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_122_slice)
HXDLIN( 122)		return this1->slice(( (int)(pos) ),end);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,slice,return )

void Vector_Impl__obj::sort(::cpp::VirtualArray this1, ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_129_sort)
HXDLIN( 129)		this1->sort(f);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,sort,(void))

::cpp::VirtualArray Vector_Impl__obj::splice(::cpp::VirtualArray this1,int pos,int len){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_136_splice)
HXDLIN( 136)		return this1->splice(pos,len);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,splice,return )

::String Vector_Impl__obj::toString(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_141_toString)
HXLINE( 142)		if (::hx::IsNull( this1 )) {
HXLINE( 143)			return HX_("null",87,9e,0e,49);
            		}
HXLINE( 145)		return this1->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,toString,return )

void Vector_Impl__obj::insertAt(::cpp::VirtualArray this1,int index, ::Dynamic element){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_151_insertAt)
HXDLIN( 151)		this1->insert(index,element);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,insertAt,(void))

int Vector_Impl__obj::indexOf(::cpp::VirtualArray this1, ::Dynamic x, ::Dynamic __o_from){
            		 ::Dynamic from = __o_from;
            		if (::hx::IsNull(__o_from)) from = 0;
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_155_indexOf)
HXLINE( 160)		int value = -1;
HXLINE( 161)		{
HXLINE( 161)			int _g = ( (int)(from) );
HXDLIN( 161)			int _g1 = this1->get_length();
HXDLIN( 161)			while((_g < _g1)){
HXLINE( 161)				_g = (_g + 1);
HXDLIN( 161)				int i = (_g - 1);
HXLINE( 162)				if (::hx::IsEq( this1->__get(i),x )) {
HXLINE( 163)					value = i;
HXLINE( 164)					goto _hx_goto_15;
            				}
            			}
            			_hx_goto_15:;
            		}
HXLINE( 167)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,indexOf,return )

int Vector_Impl__obj::lastIndexOf(::cpp::VirtualArray this1, ::Dynamic x, ::Dynamic __o_from){
            		 ::Dynamic from = __o_from;
            		if (::hx::IsNull(__o_from)) from = 0;
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_173_lastIndexOf)
HXLINE( 178)		int i = (this1->get_length() - 1);
HXLINE( 179)		int value = -1;
HXLINE( 180)		while(::hx::IsGreaterEq( i,from )){
HXLINE( 181)			if (::hx::IsEq( this1->__get(i),x )) {
HXLINE( 182)				value = i;
HXLINE( 183)				goto _hx_goto_17;
            			}
HXLINE( 185)			i = (i - 1);
            		}
            		_hx_goto_17:;
HXLINE( 187)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vector_Impl__obj,lastIndexOf,return )

::cpp::VirtualArray Vector_Impl__obj::ofArray(::cpp::VirtualArray a){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_198_ofArray)
HXDLIN( 198)		 ::Dynamic length = null();
HXDLIN( 198)		::cpp::VirtualArray this1 = ::cpp::VirtualArray_obj::__new();
HXDLIN( 198)		bool _hx_tmp;
HXDLIN( 198)		if (::hx::IsNotNull( length )) {
HXDLIN( 198)			_hx_tmp = ::hx::IsGreater( length,0 );
            		}
            		else {
HXDLIN( 198)			_hx_tmp = false;
            		}
HXDLIN( 198)		if (_hx_tmp) {
HXDLIN( 198)			_hx_array_set_size_exact(this1,( (int)(length) ));
            		}
HXDLIN( 198)		return this1->concat(a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,ofArray,return )

::cpp::VirtualArray Vector_Impl__obj::convert(::cpp::VirtualArray v){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_209_convert)
HXDLIN( 209)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,convert,return )

::cpp::VirtualArray Vector_Impl__obj::fromArray(::cpp::VirtualArray a){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_220_fromArray)
HXDLIN( 220)		return a;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,fromArray,return )

::cpp::VirtualArray Vector_Impl__obj::toArray(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_233_toArray)
HXDLIN( 233)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,toArray,return )

int Vector_Impl__obj::get_length(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_248_get_length)
HXDLIN( 248)		return this1->get_length();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,get_length,return )

int Vector_Impl__obj::set_length(::cpp::VirtualArray this1,int value){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_253_set_length)
HXLINE( 255)		_hx_array_set_size_exact(this1,value);
HXLINE( 260)		return this1->get_length();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,set_length,return )

bool Vector_Impl__obj::get_fixed(::cpp::VirtualArray this1){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_269_get_fixed)
HXDLIN( 269)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Vector_Impl__obj,get_fixed,return )

bool Vector_Impl__obj::set_fixed(::cpp::VirtualArray this1,bool value){
            	HX_STACKFRAME(&_hx_pos_7a5e6d5a6be05ab2_280_set_fixed)
HXDLIN( 280)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vector_Impl__obj,set_fixed,return )


Vector_Impl__obj::Vector_Impl__obj()
{
}

bool Vector_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pop") ) { outValue = pop_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"push") ) { outValue = push_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sort") ) { outValue = sort_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"shift") ) { outValue = shift_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"slice") ) { outValue = slice_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"concat") ) { outValue = concat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"splice") ) { outValue = splice_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"reverse") ) { outValue = reverse_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unshift") ) { outValue = unshift_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"indexOf") ) { outValue = indexOf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ofArray") ) { outValue = ofArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"convert") ) { outValue = convert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insertAt") ) { outValue = insertAt_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_fixed") ) { outValue = get_fixed_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_fixed") ) { outValue = set_fixed_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_length") ) { outValue = set_length_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"lastIndexOf") ) { outValue = lastIndexOf_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Vector_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Vector_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Vector_Impl__obj::__mClass;

static ::String Vector_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("concat",14,09,d0,c7),
	HX_("copy",b5,bb,c4,41),
	HX_("iterator",ee,49,9a,93),
	HX_("join",ea,33,65,46),
	HX_("pop",91,5d,55,00),
	HX_("push",da,11,61,4a),
	HX_("reverse",22,39,fc,1a),
	HX_("shift",82,ec,22,7c),
	HX_("unshift",89,e3,b3,78),
	HX_("slice",52,c4,c7,7e),
	HX_("sort",5e,27,58,4c),
	HX_("splice",7c,85,9e,bf),
	HX_("toString",ac,d0,6e,38),
	HX_("insertAt",8c,7c,1f,c2),
	HX_("indexOf",c9,48,bf,e0),
	HX_("lastIndexOf",13,fd,6a,95),
	HX_("ofArray",02,29,f2,88),
	HX_("convert",f3,fd,c9,1a),
	HX_("fromArray",cf,57,18,da),
	HX_("toArray",1e,ba,13,f2),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	HX_("get_fixed",cb,55,4b,44),
	HX_("set_fixed",d7,41,9c,27),
	::String(null())
};

void Vector_Impl__obj::__register()
{
	Vector_Impl__obj _hx_dummy;
	Vector_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme._Vector.Vector_Impl_",57,25,d6,a1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vector_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Vector_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Vector_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vector_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vector_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace _Vector
