// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_text_AntiAliasType
#include <nme/text/AntiAliasType.h>
#endif
namespace nme{
namespace text{

::nme::text::AntiAliasType AntiAliasType_obj::ADVANCED;

::nme::text::AntiAliasType AntiAliasType_obj::NORMAL;

bool AntiAliasType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("ADVANCED",a2,f9,00,95)) { outValue = AntiAliasType_obj::ADVANCED; return true; }
	if (inName==HX_("NORMAL",27,1e,ec,e2)) { outValue = AntiAliasType_obj::NORMAL; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(AntiAliasType_obj)

int AntiAliasType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("ADVANCED",a2,f9,00,95)) return 0;
	if (inName==HX_("NORMAL",27,1e,ec,e2)) return 1;
	return super::__FindIndex(inName);
}

int AntiAliasType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("ADVANCED",a2,f9,00,95)) return 0;
	if (inName==HX_("NORMAL",27,1e,ec,e2)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val AntiAliasType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("ADVANCED",a2,f9,00,95)) return ADVANCED;
	if (inName==HX_("NORMAL",27,1e,ec,e2)) return NORMAL;
	return super::__Field(inName,inCallProp);
}

static ::String AntiAliasType_obj_sStaticFields[] = {
	HX_("ADVANCED",a2,f9,00,95),
	HX_("NORMAL",27,1e,ec,e2),
	::String(null())
};

::hx::Class AntiAliasType_obj::__mClass;

Dynamic __Create_AntiAliasType_obj() { return new AntiAliasType_obj; }

void AntiAliasType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("nme.text.AntiAliasType",ef,00,cf,d8), ::hx::TCanCast< AntiAliasType_obj >,AntiAliasType_obj_sStaticFields,0,
	&__Create_AntiAliasType_obj, &__Create,
	&super::__SGetClass(), &CreateAntiAliasType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &AntiAliasType_obj::__GetStatic;
}

void AntiAliasType_obj::__boot()
{
ADVANCED = ::hx::CreateConstEnum< AntiAliasType_obj >(HX_("ADVANCED",a2,f9,00,95),0);
NORMAL = ::hx::CreateConstEnum< AntiAliasType_obj >(HX_("NORMAL",27,1e,ec,e2),1);
}


} // end namespace nme
} // end namespace text
