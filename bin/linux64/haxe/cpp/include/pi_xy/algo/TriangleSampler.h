// Generated by Haxe 4.3.3
#ifndef INCLUDED_pi_xy_algo_TriangleSampler
#define INCLUDED_pi_xy_algo_TriangleSampler

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(pi_xy,algo,TriangleSampler)

namespace pi_xy{
namespace algo{


class HXCPP_CLASS_ATTRIBUTES TriangleSampler_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TriangleSampler_obj OBJ_;
		TriangleSampler_obj();

	public:
		enum { _hx_ClassId = 0x16224926 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="pi_xy.algo.TriangleSampler")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"pi_xy.algo.TriangleSampler"); }

		inline static ::hx::ObjectPtr< TriangleSampler_obj > __new() {
			::hx::ObjectPtr< TriangleSampler_obj > __this = new TriangleSampler_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TriangleSampler_obj > __alloc(::hx::Ctx *_hx_ctx) {
			TriangleSampler_obj *__this = (TriangleSampler_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TriangleSampler_obj), false, "pi_xy.algo.TriangleSampler"));
			*(void **)__this = TriangleSampler_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TriangleSampler_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TriangleSampler",00,1f,9e,b6); }

		static Float x0;
		static Float get_x0();
		static ::Dynamic get_x0_dyn();

		static Float x1;
		static Float get_x1();
		static ::Dynamic get_x1_dyn();

		static Float x2;
		static Float get_x2();
		static ::Dynamic get_x2_dyn();

		static Float y0;
		static Float get_y0();
		static ::Dynamic get_y0_dyn();

		static Float y1;
		static Float get_y1();
		static ::Dynamic get_y1_dyn();

		static Float y2;
		static Float get_y2();
		static ::Dynamic get_y2_dyn();

};

} // end namespace pi_xy
} // end namespace algo

#endif /* INCLUDED_pi_xy_algo_TriangleSampler */ 
