// Generated by Haxe 4.3.3
#ifndef INCLUDED_iterMagic_IntIterStart
#define INCLUDED_iterMagic_IntIterStart

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_a5f7cdf4ea88b372_10_new)
HX_DECLARE_CLASS1(iterMagic,IntIterStart)

namespace iterMagic{


class HXCPP_CLASS_ATTRIBUTES IntIterStart_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IntIterStart_obj OBJ_;
		IntIterStart_obj();

	public:
		enum { _hx_ClassId = 0x0954fc2c };

		void __construct(int min_,int max_);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="iterMagic.IntIterStart")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"iterMagic.IntIterStart"); }

		inline static ::hx::ObjectPtr< IntIterStart_obj > __new(int min_,int max_) {
			::hx::ObjectPtr< IntIterStart_obj > __this = new IntIterStart_obj();
			__this->__construct(min_,max_);
			return __this;
		}

		inline static ::hx::ObjectPtr< IntIterStart_obj > __alloc(::hx::Ctx *_hx_ctx,int min_,int max_) {
			IntIterStart_obj *__this = (IntIterStart_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IntIterStart_obj), false, "iterMagic.IntIterStart"));
			*(void **)__this = IntIterStart_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_a5f7cdf4ea88b372_10_new)
HXLINE(  11)		( ( ::iterMagic::IntIterStart)(__this) )->start = min_;
HXLINE(  12)		( ( ::iterMagic::IntIterStart)(__this) )->max = max_;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IntIterStart_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IntIterStart",5b,31,79,66); }

		int start;
		int max;
};

} // end namespace iterMagic

#endif /* INCLUDED_iterMagic_IntIterStart */ 
