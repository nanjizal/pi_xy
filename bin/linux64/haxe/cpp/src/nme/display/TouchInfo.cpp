// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_display_DisplayObject
#include <nme/display/DisplayObject.h>
#endif
#ifndef INCLUDED_nme_display_IBitmapDrawable
#include <nme/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_nme_display_InteractiveObject
#include <nme/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_nme_display_TouchInfo
#include <nme/display/TouchInfo.h>
#endif
#ifndef INCLUDED_nme_events_EventDispatcher
#include <nme/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_nme_events_IEventDispatcher
#include <nme/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_51d2cea21f513018_1256_new,"nme.display.TouchInfo","new",0x3e0d50cb,"nme.display.TouchInfo.new","nme/display/Stage.hx",1256,0x3f854bb6)
namespace nme{
namespace display{

void TouchInfo_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_51d2cea21f513018_1256_new)
HXDLIN(1256)		this->touchOverObjects = ::Array_obj< ::Dynamic>::__new(0);
            	}

Dynamic TouchInfo_obj::__CreateEmpty() { return new TouchInfo_obj; }

void *TouchInfo_obj::_hx_vtable = 0;

Dynamic TouchInfo_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TouchInfo_obj > _hx_result = new TouchInfo_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TouchInfo_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3f5ba74d;
}


::hx::ObjectPtr< TouchInfo_obj > TouchInfo_obj::__new() {
	::hx::ObjectPtr< TouchInfo_obj > __this = new TouchInfo_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TouchInfo_obj > TouchInfo_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TouchInfo_obj *__this = (TouchInfo_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TouchInfo_obj), true, "nme.display.TouchInfo"));
	*(void **)__this = TouchInfo_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TouchInfo_obj::TouchInfo_obj()
{
}

void TouchInfo_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TouchInfo);
	HX_MARK_MEMBER_NAME(touchOverObjects,"touchOverObjects");
	HX_MARK_END_CLASS();
}

void TouchInfo_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(touchOverObjects,"touchOverObjects");
}

::hx::Val TouchInfo_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"touchOverObjects") ) { return ::hx::Val( touchOverObjects ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TouchInfo_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"touchOverObjects") ) { touchOverObjects=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TouchInfo_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("touchOverObjects",61,3c,a5,eb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TouchInfo_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(TouchInfo_obj,touchOverObjects),HX_("touchOverObjects",61,3c,a5,eb)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TouchInfo_obj_sStaticStorageInfo = 0;
#endif

static ::String TouchInfo_obj_sMemberFields[] = {
	HX_("touchOverObjects",61,3c,a5,eb),
	::String(null()) };

::hx::Class TouchInfo_obj::__mClass;

void TouchInfo_obj::__register()
{
	TouchInfo_obj _hx_dummy;
	TouchInfo_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.display.TouchInfo",59,8f,b4,a9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TouchInfo_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TouchInfo_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TouchInfo_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TouchInfo_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace display
