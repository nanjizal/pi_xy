// Generated by Haxe 4.3.3
#ifndef INCLUDED_nme_display_InterpolationMethod
#define INCLUDED_nme_display_InterpolationMethod

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nme,display,InterpolationMethod)
namespace nme{
namespace display{


class InterpolationMethod_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef InterpolationMethod_obj OBJ_;

	public:
		InterpolationMethod_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("nme.display.InterpolationMethod",b1,bd,82,ed); }
		::String __ToString() const { return HX_("InterpolationMethod.",89,1d,74,40) + _hx_tag; }

		static ::nme::display::InterpolationMethod LINEAR_RGB;
		static inline ::nme::display::InterpolationMethod LINEAR_RGB_dyn() { return LINEAR_RGB; }
		static ::nme::display::InterpolationMethod RGB;
		static inline ::nme::display::InterpolationMethod RGB_dyn() { return RGB; }
};

} // end namespace nme
} // end namespace display

#endif /* INCLUDED_nme_display_InterpolationMethod */ 
