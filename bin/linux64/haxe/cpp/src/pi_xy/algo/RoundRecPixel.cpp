// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_ImageStruct
#include <pi_xy/ImageStruct.h>
#endif
#ifndef INCLUDED_pi_xy_algo_RoundRecPixel
#include <pi_xy/algo/RoundRecPixel.h>
#endif
#ifndef INCLUDED_pi_xy_algo__RoundRecPixel_RoundRecPixel_Fields_
#include <pi_xy/algo/_RoundRecPixel/RoundRecPixel_Fields_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2a5291e515f51ca0_129_new,"pi_xy.algo.RoundRecPixel","new",0xed1849c2,"pi_xy.algo.RoundRecPixel.new","pi_xy/algo/RoundRecPixel.hx",129,0x925dc04e)
namespace pi_xy{
namespace algo{

void RoundRecPixel_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_2a5291e515f51ca0_129_new)
HXLINE( 161)		this->_fillGrad4RoundRectangle = ::pi_xy::algo::_RoundRecPixel::RoundRecPixel_Fields__obj::fillGrad4RoundRectangle_dyn();
HXLINE( 150)		this->_tileRoundRectangle = ::pi_xy::algo::_RoundRecPixel::RoundRecPixel_Fields__obj::tileRoundRectangle_dyn();
HXLINE( 139)		this->_fillRoundRectangle = ::pi_xy::algo::_RoundRecPixel::RoundRecPixel_Fields__obj::fillRoundRectangle_dyn();
            	}

Dynamic RoundRecPixel_obj::__CreateEmpty() { return new RoundRecPixel_obj; }

void *RoundRecPixel_obj::_hx_vtable = 0;

Dynamic RoundRecPixel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< RoundRecPixel_obj > _hx_result = new RoundRecPixel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool RoundRecPixel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3b8ee06e;
}


::hx::ObjectPtr< RoundRecPixel_obj > RoundRecPixel_obj::__new() {
	::hx::ObjectPtr< RoundRecPixel_obj > __this = new RoundRecPixel_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< RoundRecPixel_obj > RoundRecPixel_obj::__alloc(::hx::Ctx *_hx_ctx) {
	RoundRecPixel_obj *__this = (RoundRecPixel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(RoundRecPixel_obj), true, "pi_xy.algo.RoundRecPixel"));
	*(void **)__this = RoundRecPixel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

RoundRecPixel_obj::RoundRecPixel_obj()
{
}

void RoundRecPixel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(RoundRecPixel);
	HX_MARK_MEMBER_NAME(_fillRoundRectangle,"_fillRoundRectangle");
	HX_MARK_MEMBER_NAME(_tileRoundRectangle,"_tileRoundRectangle");
	HX_MARK_MEMBER_NAME(_fillGrad4RoundRectangle,"_fillGrad4RoundRectangle");
	HX_MARK_END_CLASS();
}

void RoundRecPixel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_fillRoundRectangle,"_fillRoundRectangle");
	HX_VISIT_MEMBER_NAME(_tileRoundRectangle,"_tileRoundRectangle");
	HX_VISIT_MEMBER_NAME(_fillGrad4RoundRectangle,"_fillGrad4RoundRectangle");
}

::hx::Val RoundRecPixel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 19:
		if (HX_FIELD_EQ(inName,"_fillRoundRectangle") ) { return ::hx::Val( _fillRoundRectangle ); }
		if (HX_FIELD_EQ(inName,"_tileRoundRectangle") ) { return ::hx::Val( _tileRoundRectangle ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"_fillGrad4RoundRectangle") ) { return ::hx::Val( _fillGrad4RoundRectangle ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val RoundRecPixel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 19:
		if (HX_FIELD_EQ(inName,"_fillRoundRectangle") ) { _fillRoundRectangle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_tileRoundRectangle") ) { _tileRoundRectangle=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"_fillGrad4RoundRectangle") ) { _fillGrad4RoundRectangle=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo RoundRecPixel_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(RoundRecPixel_obj,_fillRoundRectangle),HX_("_fillRoundRectangle",03,68,96,aa)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(RoundRecPixel_obj,_tileRoundRectangle),HX_("_tileRoundRectangle",ee,19,2c,99)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(RoundRecPixel_obj,_fillGrad4RoundRectangle),HX_("_fillGrad4RoundRectangle",05,44,95,4f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *RoundRecPixel_obj_sStaticStorageInfo = 0;
#endif

static ::String RoundRecPixel_obj_sMemberFields[] = {
	HX_("_fillRoundRectangle",03,68,96,aa),
	HX_("_tileRoundRectangle",ee,19,2c,99),
	HX_("_fillGrad4RoundRectangle",05,44,95,4f),
	::String(null()) };

::hx::Class RoundRecPixel_obj::__mClass;

void RoundRecPixel_obj::__register()
{
	RoundRecPixel_obj _hx_dummy;
	RoundRecPixel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.algo.RoundRecPixel",d0,00,04,39);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(RoundRecPixel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< RoundRecPixel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RoundRecPixel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RoundRecPixel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace algo
