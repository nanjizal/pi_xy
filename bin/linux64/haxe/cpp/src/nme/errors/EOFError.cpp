// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_nme_errors_EOFError
#include <nme/errors/EOFError.h>
#endif
#ifndef INCLUDED_nme_errors_Error
#include <nme/errors/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_af3f52189d1752b9_8_new,"nme.errors.EOFError","new",0x693209f9,"nme.errors.EOFError.new","nme/errors/EOFError.hx",8,0x43d39977)
namespace nme{
namespace errors{

void EOFError_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_af3f52189d1752b9_8_new)
HXDLIN(   8)		super::__construct(HX_("End of file was encountered",fb,7f,d6,0b),2030);
            	}

Dynamic EOFError_obj::__CreateEmpty() { return new EOFError_obj; }

void *EOFError_obj::_hx_vtable = 0;

Dynamic EOFError_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< EOFError_obj > _hx_result = new EOFError_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool EOFError_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x39087499) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x39087499;
	} else {
		return inClassId==(int)0x46636817;
	}
}


EOFError_obj::EOFError_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *EOFError_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *EOFError_obj_sStaticStorageInfo = 0;
#endif

::hx::Class EOFError_obj::__mClass;

void EOFError_obj::__register()
{
	EOFError_obj _hx_dummy;
	EOFError_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("nme.errors.EOFError",87,99,1d,6e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< EOFError_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EOFError_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EOFError_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nme
} // end namespace errors
